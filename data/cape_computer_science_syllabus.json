[
  {
    "title": "CAPE Computer Science - Part 1",
    "content": "Effective for examinations from May–June 2022    SYLLABUS    COMPUTER SCIENCE     CXC A19/U2/21    SYLLABUS    COMPUTER SCIENCE     CXC A19/U2/21    Caribbean Advanced  Proficiency Examination ®          CXC A19/U2/21       www.cxc.org  Correspondence related to the syllabus should be addressed to:     The Pro-Registrar  Caribbean Examinations Council  Caenwood Centre  37 Arnold Road, Kingston 5, Jamaica    Telephone Number: + 1 (876) 630-5200  Facsimile Number:  + 1 (876) 967-4972   E-mail Addr"
  },
  {
    "title": "CAPE Computer Science - Part 2",
    "content": "acsimile Number:  + 1 (876) 967-4972   E-mail Address: cxcwzo@cxc.org  Website: www.cxc.org    Copyright ©2021 by Caribbean Examinations Council   Prince Road, Pine Plantation Road, St Michael BB11091                                               CXC A19/U2/21       www.cxc.org    Contents      Introduction.......................................................................................................................... i  RATIONALE...... .................................................."
  },
  {
    "title": "CAPE Computer Science - Part 3",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 4",
    "content": "............................................................ 3  STRUCTURE OF THE SYLLABUS ................................................................................................ 3  APPROACHES TO TEACHING THE SYLLABUS .............................................................................. 4  UNIT 1: FUNDAMENTALS OF COMPUTER SCIENCE ..................................................................... 5  MODULE 1: COMPUTER ARCHITECTURE .............................................."
  },
  {
    "title": "CAPE Computer Science - Part 5",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 6",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 7",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 8",
    "content": "OSSARY............. ................................................................................................................38                       CXC A19/U2/21       www.cxc.org    NOTE TO TEACHERS AND LEARNERS      Please note that the syllabus has been revised and amendments are indicated by italics.      First issued in 2003  Revised 2008, 2017, 2018 and 2021    Please check the website www.cxc.org for updates on CXC®’s syllabuses.    Please access relevant curated resources to sup"
  },
  {
    "title": "CAPE Computer Science - Part 9",
    "content": "Please access relevant curated resources to support teaching and learning of the syllabus at  https://learninghub.cxc.org/    For access to short courses, training opportunities and teacher orientation webinars and workshops  go to our Learning Institute.            PLEASE NOTE    This icon is used throughout the syllabus to represent key features which teachers and  learners may find useful.                                 CXC A19/U2/21   i    www.cxc.org  Introduction      he Caribbean Adva"
  },
  {
    "title": "CAPE Computer Science - Part 10",
    "content": "www.cxc.org  Introduction      he Caribbean Advanced Proficiency Examination® (CAPE®) is designed to provide certification of  the academic, vocational and technical achievement of  students in the Caribbean who, having  completed a minimum  of  five  years of  secondary education, wish to further their studies. The  examinations address the skills and knowledge acquired by students under a flexible and articulated  system where  subjects are organised in  1-Unit  or  2-Unit  courses with  eac"
  },
  {
    "title": "CAPE Computer Science - Part 11",
    "content": "rganised in  1-Unit  or  2-Unit  courses with  each Unit  containing  three  Modules. Subjects examined under CAPE® may be studied concurrently or singly.    The Caribbean Examinations Council offers three types of certification at the CAPE® level. The first is  the award of  a certificate showing each CAPE® Unit completed. The second is the CAPE® Diploma,  awarded  to  candidates  who  have  satisfactorily completed  at  least six  Units, including  Caribbean  Studies.  The  third  is  the CXC®"
  },
  {
    "title": "CAPE Computer Science - Part 12",
    "content": "ing  Caribbean  Studies.  The  third  is  the CXC® Associate  Degree, awarded  for  the  satisfactory completion  of  a  prescribed  cluster  of ten CAPE® Units  including  Caribbean  Studies,  Communication  Studies and  Integrated Mathematics. Integrated Mathematics is not a requirement for the CXC® Associate Degree  in Mathematics. The complete list of Associate Degrees may be found in the CXC® Associate Degree  Handbook.    For  the CAPE® Diploma  and  the CXC® Associate Degree, candidates m"
  },
  {
    "title": "CAPE Computer Science - Part 13",
    "content": "loma  and  the CXC® Associate Degree, candidates must complete the  cluster of  required Units within a maximum period of five years. To be eligible for a CXC® Associate Degree, the  educational institution presenting the candidates for the award, must select the Associate Degree of  choice at the time of registration at the sitting (year) the candidates are expected to qualify  for the  award. Candidates will not be awarded an Associate Degree for which they were not registered."
  },
  {
    "title": "CAPE Computer Science - Part 14",
    "content": "or which they were not registered.                        T     CXC A19/U2/21   1    www.cxc.org  Computer Science Syllabus       RATIONALE     Computer  Science describes  the  theory behind  all  things  related to  computing.  Computing  is  the  widespread  application   of   Computer   Science,   as  embodied   in   the   tools   and   techniques   for         gathering, manipulating, analysing   and   disseminating   information. This is made possible because    of dramatic   improvements"
  },
  {
    "title": "CAPE Computer Science - Part 15",
    "content": "ade possible because    of dramatic   improvements   in   computer   and telecommunications   technologies,   which   have  significantly changed society. A large proportion of business transactions is performed over computer  networks. Multi-media computers have had a significant impact on the way in which people learn and  on   the   way they  seek  entertainment.  Moreover,  the  increased  integration  of   computer  and  telecommunications technology, exemplified by the Internet and associa"
  },
  {
    "title": "CAPE Computer Science - Part 16",
    "content": "echnology, exemplified by the Internet and associated technologies, has led to  an  increased globalisation  of  the  world  economy.  Computer  Science,  including  the Internet, has  significantly changed personal communication, commerce, and the way in which academic research  is conducted. Moreover, continuing developments in this field, including the increased use of mobile  networks and  the further improvement and decreasing cost of  computer hardware, mean that the  world has not seen th"
  },
  {
    "title": "CAPE Computer Science - Part 17",
    "content": "ter hardware, mean that the  world has not seen the last of these changes.    Computer Science has therefore become the axis around which the development of modern economies  and human  development and productivity revolve. It is the driving force which will allow nations  to  take  global  leadership  or  be  competitive in  both  human  capital  and  resources development, and  management. In order for the Caribbean to become an integral part of this new and rapidly changing  world  and  to  t"
  },
  {
    "title": "CAPE Computer Science - Part 18",
    "content": "f this new and rapidly changing  world  and  to  take  advantage of  the economic  opportunities  it offers,  citizens need  to  be  able  to  develop new technologies and also use existing computer-based systems to create and maintain those  technologies, by   acquiring   a   sound   knowledge  of   the  design   of   efficient  algorithms   and   the  methodologies to improve upon  those systems. This objective can only  be obtained through a solid  foundation in Computer Science.    Thus, Car"
  },
  {
    "title": "CAPE Computer Science - Part 19",
    "content": "olid  foundation in Computer Science.    Thus, Caribbean students need to acquire advanced knowledge, skills and attitudes to enable them to  understand the uses and the impact of computer technologies, and to use the technology to create  new computer applications for all areas of human activity.     The syllabus is intended primarily for people who want to pursue a professional career in Computer  Science or related disciplines and provides the opportunity for the acquisition of relevant knowl"
  },
  {
    "title": "CAPE Computer Science - Part 20",
    "content": "opportunity for the acquisition of relevant knowledge,  skills and attitudes as preparation for further studies in Computer Science and the world of work. Thus,  this programme of study encourages the development of communicative, collaborative and creative  skills  through the use of authentic, learner-centred teaching and assessment approaches.    The Computer Science syllabus is designed to nurture and foster the attributes of the Ideal Caribbean  Person as articulated by CARICOM. That is, a"
  },
  {
    "title": "CAPE Computer Science - Part 21",
    "content": "bean  Person as articulated by CARICOM. That is, a Caribbean person who demonstrates multiple literacies,  as well as  independent and critical thinking, and questions  the beliefs and practices of  the past and  brings this to bear on the innovative application of science and technology to problem-solving. Such a  person  will  inevitably  demonstrate a  high  level  of  self-confidence and  self-esteem, a positive  work  ethic, and display and nurture creative imagination in the economic and e"
  },
  {
    "title": "CAPE Computer Science - Part 22",
    "content": "nurture creative imagination in the economic and entrepreneurial spheres and  other areas  of  life.  Also,  in  keeping  with  the  UNESCO  Pillars  of  Learning,  this  course  of  study  will  contribute to the development of a person who will learn to be, learn to know, learn to do, learn to live  together, and learn to transform oneself and society.         CXC A19/U2/21   2    www.cxc.org   AIMS      The syllabus aims to:      1. develop creative, collaborative, communicative and critical"
  },
  {
    "title": "CAPE Computer Science - Part 23",
    "content": "reative, collaborative, communicative and critical thinking skills using appropriate  Information and Communication Technologies;     2. develop an understanding of the architecture of computer systems; and the interaction among  its components;    3. develop an understanding of problem solving using computers;    4. develop skills to create algorithms and write programs to solve problems;     5. develop an understanding of the concept of software engineering;     6. provide  students  with  an"
  },
  {
    "title": "CAPE Computer Science - Part 24",
    "content": "e engineering;     6. provide  students  with  an  understanding  of  abstract data  types and their  usefulness in  manipulating data;     7. develop an appreciation for the functions of operating systems;    8. develop an understanding of how computer networks can be used to connect devices;     9. equip students with the skills to design a simple computer network;    10. develop an appreciation for files and databases; and,    11. develop an appreciation for ethical and professional issues in"
  },
  {
    "title": "CAPE Computer Science - Part 25",
    "content": "ppreciation for ethical and professional issues in computing.       SKILLS  AND ABILITIES  TO BE ASSESSED      The skills that students are expected to have  developed  on  completion  of  this syllabus have been  grouped under three headings:      1. Knowledge and Comprehension;     2. Application and Analysis; and,    3. Synthesis and Evaluation.     Knowledge and Comprehension       The ability to:      - identify, recall, and grasp the meaning of basic facts, concepts and principles;     -"
  },
  {
    "title": "CAPE Computer Science - Part 26",
    "content": "ng of basic facts, concepts and principles;     - select appropriate ideas, match, compare and cite examples of facts, concepts, and principles  in familiar situations; and,    - explain phenomena in terms of generally applicable principles.      CXC A19/U2/21   3    www.cxc.org   Application and Analysis      The ability to:      - use facts, concepts, principles and procedures in unfamiliar situations;     - transform   data   accurately   and   appropriately   and   use   common   characteris"
  },
  {
    "title": "CAPE Computer Science - Part 27",
    "content": "appropriately   and   use   common   characteristics   as   a    basis   for classification;     - identify  and  recognise  the  component  parts  of  a  whole  and  interpret  the  relationships  between those parts;     - identify  causal factors and show how  they interact with each other; infer, predict and draw  conclusions; and,    - recognise the limitations and assumptions of data gathered in an attempt to solve a problem.      Synthesis and Evaluation      The ability to:      - make"
  },
  {
    "title": "CAPE Computer Science - Part 28",
    "content": "is and Evaluation      The ability to:      - make   reasoned  judgements  and   recommendations   based  on   the   value   of   ideas  and  information and their implications;     - use the computer and computer-based tools to solve problems;     - justify the appropriate application of techniques of problem-solving; and,    - select, justify and apply appropriate techniques and principles to develop data structures and  application programs for the solution of a problem.        PREREQUISITES"
  },
  {
    "title": "CAPE Computer Science - Part 29",
    "content": "r the solution of a problem.        PREREQUISITES OF THE SYLLABUS      Any person with a good grasp of the Caribbean Secondary Education Certificate (CSEC®) Information   Technology or  Mathematics syllabuses, or their equivalent, should be able to pursue the course of  study  defined  by  this  syllabus.  However, successful participation  in  the  course  of  study  will  also  depend on the possession of good verbal and written communication skills.          STRUCTURE OF THE SYLLABUS      T"
  },
  {
    "title": "CAPE Computer Science - Part 30",
    "content": "skills.          STRUCTURE OF THE SYLLABUS      This syllabus consists of two Units comprising three Modules each of 50 hours. Although the Units are  independent  of  each  other,  together they  provide  a  comprehensive  introduction  to  the  field  of  Computer Science.      UNIT 1: FUNDAMENTALS OF COMPUTER SCIENCE    Module 1: Computer Architecture   Module 2: Problem-Solving  with Computers  Module 3: Programming        CXC A19/U2/21   4    www.cxc.org  UNIT 2: FURTHER TOPICS IN COMPUTER"
  },
  {
    "title": "CAPE Computer Science - Part 31",
    "content": "www.cxc.org  UNIT 2: FURTHER TOPICS IN COMPUTER SCIENCE    Module 1: Data Structures  Module 2: Software Engineering   Module 3: Operating Systems and Computer Networks        APPROACHES TO TEACHING THE SYLLABUS     The specific objectives indicate the scope of the content and the activities that should be covered. The  students should be exposed to accurate and unbiased content and skills  that will foster more creative  and prepared citizens capable of effectively participating in a dynami"
  },
  {
    "title": "CAPE Computer Science - Part 32",
    "content": "s capable of effectively participating in a dynamic society. Therefore, the role of  the teacher is to employ a collaborative, authentic, highly practical and learner-centered approach to  facilitate students’ learning.                                                                          CXC A19/U2/21   5    www.cxc.org   UNIT 1: FUNDAMENTALS OF COMPUTER SCIENCE    MODULE  1: COMPUTER ARCHITECTURE      GENERAL OBJECTIVES      On completion of this Module, students should:       1. develop a"
  },
  {
    "title": "CAPE Computer Science - Part 33",
    "content": "f this Module, students should:       1. develop an appreciation of the characteristics and functions of components of the computer  system;     2. understand the interactions between the components of computer-based systems; and,    3. understand how data can be represented in computer systems    SPECIFIC OBJECTIVES    CONTENT       Students should be able to:     1. state the   purpose of   the main  components of a computer system;      Purpose of the main components of a computer  system:"
  },
  {
    "title": "CAPE Computer Science - Part 34",
    "content": "e of the main components of a computer  system:    Hardware Components      Input/output  devices: port  connectivity; speed;  quality of output;      Specialized devices to include: braille  keyboard,  sensors, touch screen, concept keyboard.     Memory types: ROM; RAM; EPROM; EEPROM.     Memory   features:   speed;   size;   word    size;  volatility.      Storage devices:  capacity, access speed, access  method, portability.       Device power protection: surge  protectors,  voltage    regula"
  },
  {
    "title": "CAPE Computer Science - Part 35",
    "content": "protection: surge  protectors,  voltage    regulators,    Uninterruptible     Power  Supplies (UPS).     Types  of computers:  supercomputer, server,  microcomputer (desktop), mobile devices.       2. describe the basic building blocks of  a computer;    Computer Architecture    Truth tables (refer to symbols on page 37)     Logic Gates (AND, OR, NOT, NAND, NOR, XOR,  XAND); Flip flops (Data, JK and SR); registers;  counters; adders; multiplexors; encoders,  decoders.      3. interpret the inte"
  },
  {
    "title": "CAPE Computer Science - Part 36",
    "content": "s; encoders,  decoders.      3. interpret the interaction among the  basic building blocks of a computer;   Basic Building Blocks:  Logic Gates   Data Flip Flops, registers      CXC A19/U2/21   6    www.cxc.org  UNIT 1   MODULE  1: COMPUTER ARCHITECTURE (cont’d)         SPECIFIC OBJECTIVES    CONTENT      Students should be able to:       4. explain how data is represented in a  computer  system; and,   Data Representation    Bits; bytes; fixed  (signed  magnitude, ones  and  twos   complement)"
  },
  {
    "title": "CAPE Computer Science - Part 37",
    "content": "(signed  magnitude, ones  and  twos   complement)   and   floating   point   (sign,  mantissa and exponent) numbers and character  representation; number bases.        5. describe the main characteristics of  a processor.      Main characteristics of a processor:    Central   Processing    Unit   (CPU) components  (Arithmetic Logic Unit  [ALU], Control Unit [CU],  Registers),  instruction   format   (addresses   per  instruction, fixed length vs variable length), types  (data  manipulation  cont"
  },
  {
    "title": "CAPE Computer Science - Part 38",
    "content": "variable length), types  (data  manipulation  control  and  input/output)  and sets; instruction fetch, decode and execute.     Clock speed, cache memory, Graphics Processing  Unit  (GPU),  parallel  processing,  and  multi-core  systems.       Suggested Teaching and Learning Activities      To facilitate students’ attainment of the objectives of this Module, teachers are advised to engage  students in the teaching and learning activities listed below.      1. Organize site visits or virtual vis"
  },
  {
    "title": "CAPE Computer Science - Part 39",
    "content": "below.      1. Organize site visits or virtual visits to computer sales companies to allow students to view the  various components of a computer system.     2. Invite computer professionals to talk to students on  topics related to the components of a  computer system. This may be facilitated face-to-face or virtually.    3. Divide class into groups and each group asked to conduct research on a topic related to the  components  of   a  computer  system. Students  should   be  encouraged  to  ga"
  },
  {
    "title": "CAPE Computer Science - Part 40",
    "content": "system. Students  should   be  encouraged  to  gather  current  information  from various  sources  such  as  the Internet, computer magazines, books  and  by  interviewing computer professionals. Each group will then be required to present a report to  the class.     4. Organize  for  students  to  view  interactive videos together with  training  materials  on  the  components of a computer system. Engage students in discussions  about the functions of the  different components.      5. Provi"
  },
  {
    "title": "CAPE Computer Science - Part 41",
    "content": "ctions of the  different components.      5. Provide students with opportunities to lead ‘Let’s Talk Computers’ sessions on assigned topics  related to the components of a computer system.     6. Allow students to open the machine case and interact with the different parts.     CXC A19/U2/21   7    www.cxc.org  UNIT 1   MODULE  1: COMPUTER ARCHITECTURE (cont’d)      7. Allow students to access the device manager in the control panel and interact with the devices  installed on the system.    8. A"
  },
  {
    "title": "CAPE Computer Science - Part 42",
    "content": "with the devices  installed on the system.    8. Allow students to visit a computer store; acquire computer parts and engage in the building  and installation of computer software.      RESOURCES     Bradley, R.          New Understanding     Computer    Science      for      Advanced    Level, London: Oxford University Press, 2014.       Duncan, O’Neil  Information Technology and Computer Science for  CAPE and  College Students, LMH Publishing  Limited, Jamaica, 2017.    Heathcote, P.       A L"
  },
  {
    "title": "CAPE Computer Science - Part 43",
    "content": "Limited, Jamaica, 2017.    Heathcote, P.       A Level Computing, Payne- Gallway Publishers Ltd, 2005.  Parsons, J. and Oja, D.       Computer  Concepts,  Albany, New  York:  International Thomson Publishing Company, 2004.   Shelly,   G.,   Cashman,   T.   and  Vermaat, M.    Discovering Computers, Boston: Thomson Course Technology,  2014.     Upton, E.,     Duntemann, J.,  Roberts,   R.,   Mamtora,   T.,   &  Everard, B.                       Learning computer    architecture    with Raspberry"
  },
  {
    "title": "CAPE Computer Science - Part 44",
    "content": "arning computer    architecture    with Raspberry     Pi.   Indianapolis, IN: Wiley, 2016      Electronic Resources    https://www.oreilly.com/library/view/designing-embedded-hardware/0596007558/ch01.html    https://www.just.edu.jo/~cis99/Computer%20Basics(CH01)/ls01/Ls01.html    http://www.cs.aucegypt.edu/~csci106k/Chapter1-Introduction%20to%20Computer.pdf     https://edu.gcfglobal.org/en/computer-science/                             CXC A19/U2/21   8    www.cxc.org  UNIT 1   MODULE  2: PROBLEM"
  },
  {
    "title": "CAPE Computer Science - Part 45",
    "content": "21   8    www.cxc.org  UNIT 1   MODULE  2: PROBLEM-SOLVING WITH COMPUTERS       GENERAL OBJECTIVES     On completion of this Module, students should:      1. understand the problem-solving process;     2. appreciate the role and importance of algorithms in the problem-solving process; and,    3. understand the process of developing algorithms.       SPECIFIC OBJECTIVES    CONTENT      Students should be able to:       1. explain concepts related to  problem-solving;      Explanation of problem-s"
  },
  {
    "title": "CAPE Computer Science - Part 46",
    "content": "to  problem-solving;      Explanation of problem-solving, problem,  solution,  algorithm, (algorithm  as   a  problem- solving  strategy; its  role and  importance in  the  problem-solving process), and program.      2. apply approaches to problem  solving;   Problem-Solving Methods: top-down, bottom-up  and  step-wise  refinement. (Represent solutions  using hierarchy chart).      3. describe the stages in the problem- solving process;   Stages in the problem-solving process:    Problem  defini"
  },
  {
    "title": "CAPE Computer Science - Part 47",
    "content": "in the problem-solving process:    Problem  definition; problem analysis (including  functional   and   non-functional   requirements);  identify  and  evaluate  possible  solutions;  select  and justify the optimal solutions;  implementation and review.       4. identify  the  necessary  properties   of  algorithms that are well  designed;   Necessary properties of algorithms:     A   general   solution   to   the   problem,   clearly  defined  and  unambiguous  steps, finite number  of steps,"
  },
  {
    "title": "CAPE Computer Science - Part 48",
    "content": "and  unambiguous  steps, finite number  of steps, and flow of control from one process to  another.       5. identify ways of representing  algorithms;   Ways of representing algorithms:    Inclusion     of     narrative,    flow     charts    and  pseudocode.       6. explain constructs used in  structured programming;     Constructs in structured programming:    Input and output statements.     Control Structures:   Sequencing; selection; iteration  or  repetition  (bounded,    for    example,"
  },
  {
    "title": "CAPE Computer Science - Part 49",
    "content": "tion  or  repetition  (bounded,    for    example, fixed    number    of  iterations and unbounded, for example, sentinel  control).     Assignment statement.      CXC A19/U2/21   9    www.cxc.org  UNIT 1   MODULE  2: PROBLEM-SOLVING WITH COMPUTERS (cont’d)      SPECIFIC OBJECTIVES    CONTENT      Students should be able to:       7. interpret algorithms from case  problems;   Determination   of   output   and   correctness   of    a   given   algorithm   (the   algorithm   may   be  expressed"
  },
  {
    "title": "CAPE Computer Science - Part 50",
    "content": "gorithm   (the   algorithm   may   be  expressed    in narrative,    flow charts    or  pseudocode).    8. analyse algorithms from case  problems for correctness;   Determination of whether an algorithm achieves  its  stated objective and  if  not, provision  of  the  correct algorithm. Use test plan and trace tables  to test for correctness.    9. develop algorithms from case  problems; and,     A  general solution  to  the case,  clearly  defined  and unambiguous steps, finite number of steps,"
  },
  {
    "title": "CAPE Computer Science - Part 51",
    "content": "ed  and unambiguous steps, finite number of steps,  and flow of control from one process to another.       10. explain the need  for  developing  the   logic  of  a computer program.   Algorithms as logically sequenced instructions.         Suggested Teaching and Learning Activities      To facilitate students’ attainment of the objectives of this Module, teachers are advised to engage  students in the teaching and learning activities listed below.      1. Engage students in  a group discussion"
  },
  {
    "title": "CAPE Computer Science - Part 52",
    "content": "w.      1. Engage students in  a group discussion leading  to the  definition  of  a problem.  The activity  should be geared to the students communicating their perspective of a problem. The teacher  should   then  give  feedback  on those  perspectives  by  identifying   problems  in   different  scenarios.    2. Give a set of scenarios (including videos) in which there are either opportunities or problems  encountered by an entity such as an organisation or a school. In groups, students are r"
  },
  {
    "title": "CAPE Computer Science - Part 53",
    "content": "rganisation or a school. In groups, students are required  to  (a)  identify  a  problem,  (b)  formulate  a  problem  statement, (c)  suggest two  possible  solutions, and (d) recommend one of the solutions and justify the choice.     3. Engage  students in  activities  that require them work  in  groups to use  algorithms to  solve  simple tasks, for example, to compute the sum of a set of numbers.     4. Have  students  work  in  groups  to  engage  in  activities  that  require them  to use"
  },
  {
    "title": "CAPE Computer Science - Part 54",
    "content": "ngage  in  activities  that  require them  to use  different  program constructs in developing algorithms.                  CXC A19/U2/21   10    www.cxc.org    UNIT 1   MODULE  2: PROBLEM-SOLVING WITH COMPUTERS (cont’d)      RESOURCES     Bradley, R.        Duncan, O’Neil   New Understanding     Computer     Science      for      Advanced    Level, London: Oxford University Press, 2014.     Information Technology and Computer Science for  CAPE and  College Students, LMH Publishing  Limited, Jam"
  },
  {
    "title": "CAPE Computer Science - Part 55",
    "content": "nd  College Students, LMH Publishing  Limited, Jamaica, 2017      Heathcote, P.      A Level Computing, Payne- Gallway Publishers Ltd, 2005.   Kendall, K. and Kendall, J.  Systems Analysis and Design, New Jersey: Prentice Hall, 2007.    Parsons, J. and Oja, D.       Computer    Concepts,   Albany,    New York:    International  Thomson Publishing Company, 2004.       Shelly, G., Cashman, T. and  Vermaat, M.    Discovering Computers, Boston: Thomson Course Technology,  2014.       Electronic Reso"
  },
  {
    "title": "CAPE Computer Science - Part 56",
    "content": "on Course Technology,  2014.       Electronic Resources    http://www.cs.aucegypt.edu/~csci106k/Chapter1-Introduction%20to%20Computer.pdf    https://edu.gcfglobal.org/en/computer-science/    http://www.cs.aucegypt.edu/~csci106k/Chapter1-Introduction%20to%20Computer.pdf                                              CXC A19/U2/21   11    www.cxc.org  UNIT 1   MODULE  3: PROGRAMMING    GENERAL OBJECTIVES     On completion of this Module, students should:      1. appreciate the need for different pro"
  },
  {
    "title": "CAPE Computer Science - Part 57",
    "content": "uld:      1. appreciate the need for different programming languages and program translation; and,     2. develop the ability to implement solutions to problems using a programming language.       CANDIDATES WILL BE ASSESSED IN PROCEDURAL ‘C’ ONLY.     SPECIFIC OBJECTIVES    CONTENT      Students should be able to:       1. identify the characteristics    of  different programming  paradigms;   Characteristics  of   the  following   programming  paradigms: Procedural  or   Imperative,  Object- o"
  },
  {
    "title": "CAPE Computer Science - Part 58",
    "content": "paradigms: Procedural  or   Imperative,  Object- oriented, Functional and Declarative.      2. explain how  assemblers, compilers,  virtual  machines  and   interpreters  are  involved   in   the   execution   of  High-level programming languages;   Stages in the translation process: lexical analysis;  syntax analysis; semantic analysis; intermediate  code    generation;   code    optimization;    code  generation.     Role of preprocessors; linkers.       3. assign values to declared variables;"
  },
  {
    "title": "CAPE Computer Science - Part 59",
    "content": "ers.       3. assign values to declared variables;  Declare variables using appropriate names  and  data types (int, float, double, char and enum).       4. use input and output statements;  Input data into variables; output formatted data  from variables; print headings.      5. use conditional and iterative control  constructs;    Conditional; if, case statements; Iterative; for,  while statements.      6. use arrays in programs;  Read   data   into   arrays, output   data   from    arrays, ma"
  },
  {
    "title": "CAPE Computer Science - Part 60",
    "content": "into   arrays, output   data   from    arrays, manipulate  or  modify   data  in   arrays.   (including     merging     and     splitting    arrays),  Character arrays (strings).       7. apply  the  techniques  of  structured  decomposition    to    reorganise    a  program into smaller pieces;   Write  simple   functions;   programs   should   be    clear,  orthogonal   (small blocks   of   code)  and  simple.      8. implement  algorithms   to   solve   a  given problem;   Write,  test  and"
  },
  {
    "title": "CAPE Computer Science - Part 61",
    "content": "o   solve   a  given problem;   Write,  test  and  debug  programs;  syntax  and  semantic  errors;  use  of  range  tests and  desk  checks; code debugging strategies (trace tables,  use  of  ‘watches’ to  examine  the values   of  variables).            CXC A19/U2/21   12    www.cxc.org  UNIT 1   MODULE 3: PROGRAMMING (cont’d)      SPECIFIC OBJECTIVES    CONTENT      Students should be able to:         9. use   records     as      a      means      of   grouping  related information;   The con"
  },
  {
    "title": "CAPE Computer Science - Part 62",
    "content": "of   grouping  related information;   The concept of ‘struct’ in C.         10. use   text  files   to   store   data   and  records;   File operations: open, close, read, write, append.         11. develop   good   programming   style  and documentation;   Style: white space (proper spacing), indentation,  appropriate comments.    Documentation: technical and user.     12. explain    the    need    for    different  programming languages; and,   Appropriateness to application (web applicat"
  },
  {
    "title": "CAPE Computer Science - Part 63",
    "content": "nd,   Appropriateness to application (web application,  games,   formula   translation,   application   for  mobile devices).     13. compare how   basic concepts are  implemented in different  programming languages.   Variable  declarations  and  control  structures in  the following languages:  C, C++, Java, JavaScript, and Python.        Suggested Teaching and Learning Activities      To facilitate students’ attainment of the objectives of this Module, teachers are advised to engage  students"
  },
  {
    "title": "CAPE Computer Science - Part 64",
    "content": "s Module, teachers are advised to engage  students in the teaching and learning activities listed below.      1. Engage students in  activity where they are required to critique previously  written programs  focusing, for  example, on  the use of  structure, constructs, comments, indentation, variable  names and error handling.     2. Have the class work in groups to conduct research on a topic related to the implementation  of different data structures with respect to performance. Each group wi"
  },
  {
    "title": "CAPE Computer Science - Part 65",
    "content": "uctures with respect to performance. Each group will then be required to  creatively present a report to the class.     3. Have students collaborate to develop test cases to illustrate the importance of testing.     4. In small groups have  students research different languages, paradigms and translators and  examine the weaknesses and strengths of each language, paradigm and translator. They will  share their findings with the class.    5. Have  students  work  in  groups  to  engage in  activi"
  },
  {
    "title": "CAPE Computer Science - Part 66",
    "content": "students  work  in  groups  to  engage in  activities  that  require them  to create simple  programs using different approaches.     6. Organize different opportunities for groups of students to participate in coding competitions,  for example, Hour of Code (code.org).    7. Organize a coding boot camp and have experts facilitate sessions with the students.         CXC A19/U2/21   13    www.cxc.org  UNIT 1   MODULE  3: PROGRAMMING (cont’d)      RESOURCE     Deitel, Paul., and Deitel, Harvey."
  },
  {
    "title": "CAPE Computer Science - Part 67",
    "content": "RESOURCE     Deitel, Paul., and Deitel, Harvey.  C How to Program, 8 th  edition, Pearson, 2016.  Duncan, O’Neil     Information Technology and Computer Science for  CAPE and  College Students, LMH Publishing  Limited, Jamaica, 2017    Shelly,   G.,   Cashman,   T.   and  Vermaat, M.      Discovering Computers. Boston: Thomson Course Technology,  2014.    Electronic Resources     https://edu.gcfglobal.org/en/computer-science/    http://www.cs.aucegypt.edu/~csci106k/Chapter1-Introduction%20to%20"
  },
  {
    "title": "CAPE Computer Science - Part 68",
    "content": "cegypt.edu/~csci106k/Chapter1-Introduction%20to%20Computer.pdf                                          CXC A19/U2/21   14    www.cxc.org   UNIT 2: FURTHER TOPICS IN COMPUTER SCIENCE    MODULE  1: DATA STRUCTURES       GENERAL OBJECTIVES     On completion of this Module, students should:      1. appreciate the use of abstract data types (ADTs) in the efficient manipulation of data;    2. know programming strategies in order to solve problems; and,    3. understand basic algorithms for sorting a"
  },
  {
    "title": "CAPE Computer Science - Part 69",
    "content": "d,    3. understand basic algorithms for sorting and searching.      SPECIFIC OBJECTIVES  CONTENT      Students should be able to:       1. describe   the   concept   of abstract    data   types (ADTs);    The fundamental characteristics of ADTs:   Initialize elements of the data structure, add an  element,   remove   an element   and   find   an  element.    Data  type:  primitive  and   non-primitive;  Data  structures:  linear and non-linear.    To include: Stacks, Queues, Circular Queues and"
  },
  {
    "title": "CAPE Computer Science - Part 70",
    "content": "To include: Stacks, Queues, Circular Queues and  Singly linked lists.      2. distinguish among ADTs;  Stacks     (LIFO),      queues     (FIFO) - inclusive of  Circular queues, singly   linked   list (INSERT   and    DELETE):   definition,   structure   and operation.      3. perform      basic      operations      on    standard   ADTs using diagrams and  algorithms;   Stacks: Push, Pop, Empty, Full.    Queues, Circular queues: Enqueue,  Dequeue, Empty, Full.    4. implement  basic  ADTs  u"
  },
  {
    "title": "CAPE Computer Science - Part 71",
    "content": "ueue, Empty, Full.    4. implement  basic  ADTs  using  one- dimensional arrays;   Write   programs   to   implement    Stacks,  Queues, and Circular queues.       5. implement sorting   and   searching      algorithms  using   one-dimensional  arrays.   Linear  search; binary  search;  simple  selection  sort; bubble sort.                     CXC A19/U2/21   15    www.cxc.org  UNIT 2   MODULE  1: DATA STRUCTURES (cont’d)      Suggested Teaching and Learning Activities      To facilitate student"
  },
  {
    "title": "CAPE Computer Science - Part 72",
    "content": "and Learning Activities      To facilitate students’ attainment of the objectives of this Module, teachers are advised to engage  students in the teaching and learning activities listed below.      1. Have students work in pairs to review scenarios that illustrate the application of Abstract Data  Types.     2. Make reference to real-life situations  that demonstrate ADTs in action; for example, adding  and removing plates from a stack of plates; customers in a queue (line) in a bank.     3. Hav"
  },
  {
    "title": "CAPE Computer Science - Part 73",
    "content": "customers in a queue (line) in a bank.     3. Have students write programs to implement stack, Queues and  Circular queues and present  their programs to the class.    RESOURCES     Duncan, O’Neil           Information Technology and Computer Science for CAPE  and College Students, LMH Publishing  Limited, Jamaica,  2017      Heathcote, P.      A Level Computing. Payne-Gallway Publishers Ltd,  2005.    Kendall, K. and Kendall, J.  Systems Analysis  and Design. Pearson Education  Limited, 2013."
  },
  {
    "title": "CAPE Computer Science - Part 74",
    "content": "is  and Design. Pearson Education  Limited, 2013.    Shelly,    G.,   Cashman,   T.   and  Vermaat, M.    Discovering    Computers. Boston: Thomson    Course  Technology, 2014.       Sommerville, I.    Software Engineering. Pearson Education Limited, 2016.      Electronic Resources    https://www.javatpoint.com/data-structure-introduction    https://towardsdatascience.com/8-common-data-structures-every-programmer-must-know- 171acf6a1a42    http://www.cs.aucegypt.edu/~csci106k/Chapter1-Introducti"
  },
  {
    "title": "CAPE Computer Science - Part 75",
    "content": "/www.cs.aucegypt.edu/~csci106k/Chapter1-Introduction%20to%20Computer.pdf                      CXC A19/U2/21   16    www.cxc.org  UNIT 2   MODULE  2: SOFTWARE ENGINEERING      GENERAL OBJECTIVES      On completion of this Module, students should:      1. understand the phases of the software development life cycle;     2. have  an  appreciation for  the  methods,  processes, tools and  techniques  used  in  software  engineering; and,    3. Understand the issues confronting modern computer system"
  },
  {
    "title": "CAPE Computer Science - Part 76",
    "content": "tand the issues confronting modern computer systems, societies and users.      SPECIFIC OBJECTIVES  CONTENT      Students should be able to:       1. explain the reasons for  a  structured  approach to the software  development process;     Reasons   for   a   structured   approach   to   the  software development process:    Increased dependence of many organisations on  their computer systems.     Crises in  previous  developments: for  example,  increasing   costs   of   software   developmen"
  },
  {
    "title": "CAPE Computer Science - Part 77",
    "content": ",  increasing   costs   of   software   development;  dissatisfaction of  users  and  management with  the quality and suitability of software; increasing  length and complexity of the software.      Requirements for  standard interfaces, both  to  users and to other software.      Need  for  tighter  control  and  management  of  process;     visibility of the process;     risk  management.      Importance of  the need for  the involvement  of  end users and management.       2. explain   the a"
  },
  {
    "title": "CAPE Computer Science - Part 78",
    "content": "end users and management.       2. explain   the attributes  of   a   well- engineered software product;   Attributes of a well-engineered    software:  maintainability; dependability; efficiency;  usability; portability;  availability  of  appropriate  documentation (system and user  documentation).       3. examine the strengths and  weaknesses   of different   generic  software process models;    Phases of the Software Development Life Cycle.      Life    Cycle    Models:    waterfall;    evo"
  },
  {
    "title": "CAPE Computer Science - Part 79",
    "content": "Life    Cycle    Models:    waterfall;    evolutionary  development including rapid prototyping; reuse- oriented; agile.    Strengths  and weaknesses  of  different  generic  software process models.     CXC A19/U2/21   17    www.cxc.org  UNIT 2   MODULE 2: SOFTWARE ENGINEERING (cont’d)      SPECIFIC OBJECTIVES  CONTENT      Students should be able to:       4. outline the   main   activities,  tools,  techniques  and  deliverables of  the  analysis phase;   Requirements and Specification P"
  },
  {
    "title": "CAPE Computer Science - Part 80",
    "content": "analysis phase;   Requirements and Specification Process:  feasibility study; requirements analysis.     Tools and Techniques: Interviews,  questionnaires,   observations,   review   internal  documents,   prototyping,   Data   Flow   Models  (Data Flow Diagrams) and their use to document  the flow of information: use of symbols to depict  data  stores,  process,  data  flows  and  external  entities; Data Dictionaries.     Computer  Aided   Software  Engineering  (CASE)  tools.     Deliverables"
  },
  {
    "title": "CAPE Computer Science - Part 81",
    "content": "ware  Engineering  (CASE)  tools.     Deliverables: requirements specification  (feasibility report, functional and non-functional  specification).      5. apply relevant tools and techniques  to  create  the deliverables  of   the  design phase;   Design  process:  architectural design;  interface  design; data structure design; algorithm design.      Tools and techniques: Structure charts, CASE  tools, Semantic Data Models (Entity- Relationship Diagrams)    Design Methods: top-down, bottom-up,"
  },
  {
    "title": "CAPE Computer Science - Part 82",
    "content": "Diagrams)    Design Methods: top-down, bottom-up, system  structuring (sub-systems, modules,  programs);  Design  Strategies: functional  versus  objected- oriented.      Guidelines for screens, reports, user interfaces.   Deliverables:     system     architecture,    design  specification.       6. outline   the  main   activities,  tools,  techniques  and  deliverables  of  the  implementation  phase;   Coding process.       7. outline   the  main activities,  tools,  techniques  and  deliver"
  },
  {
    "title": "CAPE Computer Science - Part 83",
    "content": "main activities,  tools,  techniques  and  deliverables  of  the  validation  phase;   Need for the testing process, test plans; software  inspection; software testing (unit inspection, test  case  design,  and  system  testing);  user  testing  (alpha,   beta,  and acceptance); Blackbox  and  Whitebox testing.     CXC A19/U2/21   18    www.cxc.org  UNIT 2   MODULE 2: SOFTWARE ENGINEERING (cont’d)      SPECIFIC OBJECTIVES  CONTENT      Students should be able to:       8. outline   the  main   a"
  },
  {
    "title": "CAPE Computer Science - Part 84",
    "content": "hould be able to:       8. outline   the  main   activities,  tools,  techniques  and  deliverables  of  the  evolution phase; and,   Need for maintenance; Fault repairs,  environmental adaptation, Functionality  addition.  Types of maintenance.  Documentation review.  Regression Testing.      9. examine issues  confronting modern  computer   systems,   societies   and  users.   Intellectual Property (types  of  software license:  Shareware and Freeware; piracy), privacy,   Data Protection.  Com"
  },
  {
    "title": "CAPE Computer Science - Part 85",
    "content": "reeware; piracy), privacy,   Data Protection.  Computer Misuse.   Threats  (viruses,  worms,  distributed  denial  of  service attacks, malware, ransomware, hacking)  and countermeasures.        Suggested Teaching and Learning Activities      To facilitate students’ attainment of the objectives of this Module, teachers are advised to engage  students in the teaching and learning activities listed below.      1. Identify organisations that use custom-built software applications. Students should b"
  },
  {
    "title": "CAPE Computer Science - Part 86",
    "content": "tom-built software applications. Students should be divided  into  groups and  asked to  interview both  users and  management of  these organisations to  determine the following:      (a) methodology (Life Cycle model used);     (b) problems encountered during the development of the application(s);     (c) level of user involvement;     (d) lessons learned;     (e) what steps could have been done differently and why; and,    (f) other relevant considerations.      Students can creatively presen"
  },
  {
    "title": "CAPE Computer Science - Part 87",
    "content": "onsiderations.      Students can creatively present their findings to the class.                CXC A19/U2/21   19    www.cxc.org  UNIT 2   MODULE 2: SOFTWARE ENGINEERING (cont’d)      2. Divide students into groups to research various Life Cycle models, tools and techniques used  during the analysis and design phases. Students should report on their findings, including the  strengths and weaknesses of models, tools and techniques.     3. Invite professionals involved in developing software to m"
  },
  {
    "title": "CAPE Computer Science - Part 88",
    "content": "professionals involved in developing software to make presentations (virtual or face-to- face) to students to give them additional  perspectives on issues relevant to the topics. The  professionals should be encouraged to bring/ show samples of deliverables.     4. Identify a ‘problem’ and engage groups of students in developing a simple system which could  solve the problem.     5. Present ‘poorly-designed’ screen layouts, data structures, reports and user interfaces and ask  students to critiq"
  },
  {
    "title": "CAPE Computer Science - Part 89",
    "content": "ts and user interfaces and ask  students to critique them, for example, focusing on the appropriate use of font type and size;  colours, spacing, labelling or instructions, ease of use.     6. Have students engage in research on ethics surrounding the use of computers including data  privacy,  protection of  intellectual  property, crediting  and  validating  the  sources  of  data.  Students should  use  suitable  computer based  or  web based  tools to  creatively present the  information to t"
  },
  {
    "title": "CAPE Computer Science - Part 90",
    "content": "tools to  creatively present the  information to the class.    7. Have students participate in a  presentation exploring professional  issues  in  computing and  strategies for  mitigating these issues. They should  then collaborate to engage in  additional  research and  use  a  suitable  tool  to  document  and  share  problems/professional  issues and  suitable strategies for addressing them.    RESOURCES     Bradley, R.       New Understanding     Computer     Science      for   Advanced"
  },
  {
    "title": "CAPE Computer Science - Part 91",
    "content": "g     Computer     Science      for   Advanced    Level. London: Oxford University Press, 2014.     Duncan, O’Neil      Information Technology and Computer Science for  CAPE and  College Students, LMH Publishing  Limited, Jamaica, 2017.    Heathcote, P.      A Level Computing. Payne-Gallway Publishers Ltd, 2005.   Parsons, J. and Oja, D.       Computer    Concepts. Albany,    New    York: International  Thomson Publishing Company, 2004.    Shelly,    G.,   Cashman,   T.   and  Vermaat, M.    Dis"
  },
  {
    "title": "CAPE Computer Science - Part 92",
    "content": ",    G.,   Cashman,   T.   and  Vermaat, M.    Discovering Computers. Boston: Thomson Course Technology,  2014.       Sommerville, I.    Software Engineering, Pearson Education Limited, 2016.       Electronic Resources    https://www.tutorialspoint.com/software_engineering/software_engineering_overview.htm    http://www.cs.aucegypt.edu/~csci106k/Chapter1-Introduction%20to%20Computer.pdf     https://edu.gcfglobal.org/en/computerbasics/understanding-operating-systems/1/       CXC A19/U2/21   20"
  },
  {
    "title": "CAPE Computer Science - Part 93",
    "content": "g-operating-systems/1/       CXC A19/U2/21   20    www.cxc.org  UNIT 2   MODULE  3: OPERATING SYSTEMS AND COMPUTER  NETWORKS       GENERAL OBJECTIVES    On completion of this Module, students should:      1. understand the functions of operating systems;     2. develop an appreciation for networking technology and applications; and,    3. understand the use of data stores and networks in the implementation of systems with a  wide user base.     SPECIFIC OBJECTIVES  CONTENT      Students should b"
  },
  {
    "title": "CAPE Computer Science - Part 94",
    "content": "PECIFIC OBJECTIVES  CONTENT      Students should be able to:       1. explain the concept of an operating  system;   Definition.    Purpose of operating systems:    Resource     management – memory,     I/O,  processor; interface.      2. describe how   operating   systems  have    evolved    over    time    from  primitive batch systems to  sophisticated multi-user systems;   History of operating system development.   Batch processing.  Real time systems.  Multi programming (including  interact"
  },
  {
    "title": "CAPE Computer Science - Part 95",
    "content": "e systems.  Multi programming (including  interactive multi- programming).  Multi-processing.      3. describe the functions of operating  systems;         Operating system functions:     Bootstrap process.    Process Management:    Definition.     Process states: Running, Ready, Blocked.    How the interrupt mechanism works.      Deadlock and Deadlock resolution.    The process control block (process descriptor)   Scheduling Algorithms Pre-emptive (Shortest- Job-First (SJF), round robin) and No"
  },
  {
    "title": "CAPE Computer Science - Part 96",
    "content": "ve (Shortest- Job-First (SJF), round robin) and Non-pre- emptive (First Come First Serve (FCFS),  Shortest-Job- First (SJF)).     CXC A19/U2/21   21    www.cxc.org  UNIT 2   MODULE  3: OPERATING SYSTEMS AND COMPUTER  NETWORKS (cont’d)      SPECIFIC OBJECTIVES    CONTENT      Students should be able to:         Memory Management.  Virtual Memory, paging, thrashing.      File Management:  Directories/Folders, Files, file compression.     Security (of files).  User IDs, Passwords, Lockwords, Access"
  },
  {
    "title": "CAPE Computer Science - Part 97",
    "content": "of files).  User IDs, Passwords, Lockwords, Access control  list, file encryption, Activity logs.     Interface (user):  Types of interfaces: command prompt, menu,  GUI and the manipulation of the interface     Device Management.   Device drivers.   Interrupt handling (PCB).   Input/output   control.   Peripheral control, Polling, Buffering, Spooling.      Networking:  Network  management  (user  accounts,  access  logs) Networking Protocols (TCP/IP).       4. distinguish among networked,  clien"
  },
  {
    "title": "CAPE Computer Science - Part 98",
    "content": "/IP).       4. distinguish among networked,  client-server, and distributed;      Network Architecture:  Ethernet, FDDI.    Network topology:  Star, Ring, Bus, Hybrid.     Network devices:  Modems, switches, routers,  bridges, network interface cards (NIC), hubs.      Transmission Media: wired (twisted pair, fiber- optics, coaxial); wireless (satellite, microwave,  Bluetooth, infrared, Wi-Fi and WiMAX).    Protocol:  Transmission Control Protocol/Internet Protocol   (TCP/IP), File Transfer Proto"
  },
  {
    "title": "CAPE Computer Science - Part 99",
    "content": "/Internet Protocol   (TCP/IP), File Transfer Protocol (FTP), Hypertext.                CXC A19/U2/21   22    www.cxc.org  UNIT 2   MODULE  3: OPERATING SYSTEMS AND COMPUTER  NETWORKS (cont’d)      SPECIFIC OBJECTIVES  CONTENT      Students should be able to:         Transfer   Protocol   (HTTP);  Hypertext  Transfer  Protocol Secure Sockets Layer (HTTPS);  IEEE802.11a/b;  IEEE802.16g; characteristics  of  Voice Over Internet Protocol;   Open System Interconnection (OSI) model.     Networking con"
  },
  {
    "title": "CAPE Computer Science - Part 100",
    "content": "em Interconnection (OSI) model.     Networking consideration:   cost,   security,    management,   expandability,  interconnectivity, wired vs wireless     Network Configuration:   Types:  Multi-user; client server, centralised vs.  distributed system, peer to peer.     Network Security:   Firewalls.      5. draw diagrams to represent  connections between the  components   of simple   networks;  and,      Components  of  simple  networks  (may  include  routers, ISPs, switches, modems,  microcom"
  },
  {
    "title": "CAPE Computer Science - Part 101",
    "content": "nclude  routers, ISPs, switches, modems,  microcomputers, mobile devices, wireless access  points, servers, hubs, network attached storage  [NAS]).    Use of diagrams to design networks.      6. explore   data   strategies  for   large  scale systems.   Flat file storage, Relational databases;  Platforms to include (MYSQL, SQL Server);  Primary keys, secondary keys, foreign keys, and  candidate keys.    Simple SQL  statements  (SELECT,  INSERT, JOIN  (inner join only) UPDATE, DELETE);  Query Str"
  },
  {
    "title": "CAPE Computer Science - Part 102",
    "content": "OIN  (inner join only) UPDATE, DELETE);  Query Strings and Stored Procedures; and,  Database connections and Web services.                                 CXC A19/U2/21   23    www.cxc.org  UNIT 2   MODULE  3: OPERATING SYSTEMS AND COMPUTER  NETWORKS (cont’d)      Suggested Teaching and Learning Activities     To facilitate students’ attainment of the objectives of this Module, teachers are advised to engage  students in the teaching and learning activity below.     1. Divide class into groups a"
  },
  {
    "title": "CAPE Computer Science - Part 103",
    "content": "activity below.     1. Divide class into groups and have each group conduct research on the functions of one type of  operating system with respect to convenience, efficiency, and the ability to evolve. Each group  will then be required to present a report to the class. Students should be encouraged to gather  current information from various sources such as the Internet, computer magazines, books and  by interviewing computer professionals.     2. Allow students to use virtualisation software"
  },
  {
    "title": "CAPE Computer Science - Part 104",
    "content": "2. Allow students to use virtualisation software such as VirtualBox to install operating systems,  and databases.    3. Allow students to compare different aspects – the interfaces, filing systems.    4. Have students participate in a game such as Jeopardy which should be designed to assess their  knowledge of concepts covered in the Module. Students could compete in groups.     RESOURCES    Duncan, O’Neil          Information  Technology  and Computer Science  for  CAPE  and  College  Students"
  },
  {
    "title": "CAPE Computer Science - Part 105",
    "content": "omputer Science  for  CAPE  and  College  Students, LMH  Publishing  Limited,  Jamaica,  2017.      Ritchie, C.     Operating   Systems   Incorporating  UNIX   and Windows,  London: Letts Educational, 2006.     Shelly, G., Ashman, T. and Vermaat, M.     Discovering Computers, Boston: Thomson Course  Technology, 2014.     Silberschstz,   Abraham,   Galvin,   Peter  Baer, and Gagne, Greg  Operating System Concepts Essentials, 2 nd  Edition. John  Wiley and Sons Inc. 2014.    Tanenbaum, A., & Bos,"
  },
  {
    "title": "CAPE Computer Science - Part 106",
    "content": "iley and Sons Inc. 2014.    Tanenbaum, A., & Bos, H                                        Modern operating systems. Boston [u.a.]: Pearson, 2015.                                                                            Electronic resources    https://edu.gcfglobal.org/en/computerbasics/understanding-operating-systems/1/    http://www.cs.aucegypt.edu/~csci106k/Chapter1-Introduction%20to%20Computer.pdf     http://www.cs.nthu.edu.tw/~ychung/slides/CSC3150/Abraham-Silberschatz-Operating-System- C"
  },
  {
    "title": "CAPE Computer Science - Part 107",
    "content": "s/CSC3150/Abraham-Silberschatz-Operating-System- Concepts---9th2012.12.pdf    https://learninghub.cxc.org/         CXC A19/U2/21   24    www.cxc.org   OUTLINE OF ASSESSMENT        Each Unit of the syllabus will be assessed separately. The scheme of assessment for each Unit will be  the same. Candidate’s performance on each Unit will be reported as an overall grade and a grade on  each  Module  of  the  Unit. The  assessment will  comprise two  components, one  external and  one  internal."
  },
  {
    "title": "CAPE Computer Science - Part 108",
    "content": "omponents, one  external and  one  internal.      EXTERNAL ASSESSMENT                                                                                                                           (80%)     Paper 01   (1 hour 30 minutes)      Forty-five   multiple-choice  items,   15   from   each  Module. Each item is worth 1 mark.     (30%)  Paper 02   (2 hours 30 minutes)       Paper 032   (2 hours)                                           Six questions, two from each Module.   Candidates  will b"
  },
  {
    "title": "CAPE Computer Science - Part 109",
    "content": "stions, two from each Module.   Candidates  will be expected to answer all questions.       Case study. Candidates will be expected to answer  all questions                                                                                     (50%)        (20%)       SCHOOL-BASED ASSESSMENT                                                                                                                         (20%)      Paper 031       Unit 1: Fundamentals  of Computer Science     Candidates are ex"
  },
  {
    "title": "CAPE Computer Science - Part 110",
    "content": "mentals  of Computer Science     Candidates are expected to choose a problem for which a software solution is appropriate and create  an  algorithm  for  the  solution  using  sequencing,  selection,  assignments,  iteration  (bounded  and  unbounded). They should  represent their algorithms using any combination of narrative, flow charts  and pseudocode. Candidates are expected to implement the algorithm in C using  arrays with no less  than five functions and create a test plan.      Unit 2: F"
  },
  {
    "title": "CAPE Computer Science - Part 111",
    "content": "e functions and create a test plan.      Unit 2: Further Topics in Computer Science     Candidates are expected to choose a problem for which a software solution exists and then develop  the software using software engineering techniques. In particular, they are expected to demonstrate  the tools and techniques used in the analysis  of the software to be developed. They are then expected  to design, code, and test their software using appropriate techniques.     Paper 032      Private candidates"
  },
  {
    "title": "CAPE Computer Science - Part 112",
    "content": "techniques.     Paper 032      Private candidates are required to write the Paper 032 an Alternative Paper to the School-Based  Assessment.  The Paper 032 will be a case study and questions.     MODERATION OF SCHOOL-BASED ASSESSMENT     A School-Based Assessment Record Sheet will be sent each year to schools submitting students for the  examinations.     The  School-Based Assessment  Record Sheets are also  available  online  via  the CXC®’s  website  https://www.cxc.org/. All School-Based Asse"
  },
  {
    "title": "CAPE Computer Science - Part 113",
    "content": "bsite  https://www.cxc.org/. All School-Based Assessment Record of marks and sample of projects must be     CXC A19/U2/21   25    www.cxc.org  submitted online, using the SBA data capture module of the Online Registration System (ORS) on the  Council’s Website for moderation purposes. These assignments must be electronically submitted. The  assignments will be reassessed by CXC® Examiners who moderate the School-Based Assessment. The  marks assigned by the classroom teacher may therefore be adju"
  },
  {
    "title": "CAPE Computer Science - Part 114",
    "content": "ned by the classroom teacher may therefore be adjusted to bring them in alignment with  CXC®’s standards. The Examiners’ comments will be sent to schools.      Copies of the students’ submissions must be retained by the school until three months after publication  by CXC® of the examination results.       ASSESSMENT DETAILS      External Assessment      Paper 01, Paper 02 and Paper 032     The  external  assessment  consists  of  two  written  papers. They  are  externally  set  and  externally"
  },
  {
    "title": "CAPE Computer Science - Part 115",
    "content": "pers. They  are  externally  set  and  externally  assessed. Together the Paper01 and Paper 02 contribute 80 per cent of the final mark.      Paper 01 (1 hour 30 minutes)     1. Composition of the Paper     The paper will consist of 45 multiple-choice items, 15 from each Module. All questions are  compulsory     2. Syllabus Coverage    Knowledge of the entire Syllabus is required.  The paper will assess the candidate’s  knowledge across the breadth of the Syllabus.      3. Mark Allocation     Th"
  },
  {
    "title": "CAPE Computer Science - Part 116",
    "content": "th of the Syllabus.      3. Mark Allocation     The paper is worth 45 marks, with each question being allocated 1 mark.     4. Question Type    Questions may be presented using diagrams, data, graphs, prose or other stimulus material.       Paper 02 (2 hours 30 minutes)    1. Composition of the Paper     This  paper consists  of  six  questions,  two  from  each  Module,  arranged  in  three  sections.   Candidates are required to do all questions in each section.     2. Mark Allocation    This"
  },
  {
    "title": "CAPE Computer Science - Part 117",
    "content": "s in each section.     2. Mark Allocation    This paper is worth 90 marks; each question is worth 15 marks.       CXC A19/U2/21   26    www.cxc.org  3. Question Type    Each question may present a situation related to a specific topic in the syllabus and consists of  three or four sub- questions.  The required responses to a sub-question may range in length.     4. Award of marks     Marks will  be  awarded  for  knowledge  and  comprehension,  application  and  analysis, and  synthesis and eval"
  },
  {
    "title": "CAPE Computer Science - Part 118",
    "content": "pplication  and  analysis, and  synthesis and evaluation.     Paper 032 (2 hours)     1. Composition of the Paper     This  paper  consists of  a  Case  Study  and structured questions, which  cover  each  Module,  arranged in sections.  Candidates are required to do all questions in each section.     2. Mark Allocation    This paper is worth 60 marks.     3. Question Type    Each question may present a situation related to a specific topic in the syllabus and consists of  three or four sub- que"
  },
  {
    "title": "CAPE Computer Science - Part 119",
    "content": "e syllabus and consists of  three or four sub- questions.  The required responses to a sub-question may range in length.     4. Award of marks     Marks will  be  awarded  for  knowledge  and  comprehension,  application  and  analysis, and  synthesis and evaluation.      Paper 031-The School-Based Assessment (20% of Total Assessment)      School-Based Assessment is an  integral part of  student assessment  in the  course covered  by  this  syllabus. It is intended to assist students in acquirin"
  },
  {
    "title": "CAPE Computer Science - Part 120",
    "content": "bus. It is intended to assist students in acquiring certain knowledge, skills and attitudes that are  associated with the subject. The activities for the School-Based Assessment are linked to the syllabus  and should form part of the learning activities to enable the students to achieve the objectives of the  syllabus. Students are encouraged to work in groups.     During the course of study for the subject, students obtain marks for the competence they develop  and demonstrate in undertaking th"
  },
  {
    "title": "CAPE Computer Science - Part 121",
    "content": "ce they develop  and demonstrate in undertaking their School-Based Assessment assignments.  These marks contribute  to the final marks and grades that are awarded to students for their performance in the examination.      The guidelines provided in this syllabus for selecting appropriate tasks are intended to assist teachers  and students in selecting assignments that are valid for the purpose of School-Based Assessment.  The  guidelines  provided  for  the  assessment of  these  assignments are"
  },
  {
    "title": "CAPE Computer Science - Part 122",
    "content": "d  for  the  assessment of  these  assignments are intended  to  assist teachers in  awarding  marks that  are  reliable  estimates of  the  achievement  of  students  in  the School-Based  Assessment component of the course. In order to ensure that the scores awarded by the teachers are  not out of  line with the CXC® standards, the Council undertakes the moderation of a sample of  the  School-Based Assessment assignments marked by each teacher.         CXC A19/U2/21   27    www.cxc.org  School"
  },
  {
    "title": "CAPE Computer Science - Part 123",
    "content": "CXC A19/U2/21   27    www.cxc.org  School-Based Assessment provides an opportunity  to individualise  a part of the curriculum to meet  the needs of students. It facilitates feedback to the student at various stages of the experience. This  helps  to  build  the  self- confidence  of  students as they  proceed  with  their  studies. School-Based  Assessment also facilitates the development of critical skills and abilities emphasised by this CAPE®  subject and enhances the validity of  t"
  },
  {
    "title": "CAPE Computer Science - Part 124",
    "content": "his CAPE®  subject and enhances the validity of  the examination on  which candidate performance is reported.  School-Based Assessment, therefore,  makes  a  significant  and  unique  contribution  to  both   the  development of relevant skills and the testing and rewarding of students for the development of those  skills.      The Caribbean Examinations Council seeks to ensure that the School-Based Assessment scores are  valid and reliable estimates of accomplishment. The guidelines provided in"
  },
  {
    "title": "CAPE Computer Science - Part 125",
    "content": "ates of accomplishment. The guidelines provided in this syllabus are intended  to assist in doing so.      Candidates’ total School-Based Assessment mark for any Unit should be divided in three and allocated  to each Module equally. Students are encouraged to work in small groups to complete the SBA.      Fractional marks should not be awarded. Wherever the Unit mark is not divisible by three, then:      (a) when the remainder is 1 mark, it should be allocated to Module 1; and,     (b) when the"
  },
  {
    "title": "CAPE Computer Science - Part 126",
    "content": "d be allocated to Module 1; and,     (b) when the remainder is 2, one of the marks should be allocated to Module 2 and the  other mark to Module 3.       Paper 031      UNIT 1: Fundamentals of Computer Science      1. The aims of the project are to:      (a) develop candidates’ personal insights into  the  fundamentals of  Computer science;  and,    (b) provide  opportunities  for  all  candidates to  show, with  confidence,  that they  have  mastered the Syllabus.      2. Requirements      Cand"
  },
  {
    "title": "CAPE Computer Science - Part 127",
    "content": "tered the Syllabus.      2. Requirements      Candidates are expected to choose a problem for which a software solution is appropriate and  create algorithms for  the  solution  using  sequencing, selection, assignments, and iteration  (bounded and unbounded). They should represent their algorithms using narrative format and  either flow charts or pseudocode. Candidates are expected to implement their algorithms as  C programs using arrays with no less than five functions and using at least one"
  },
  {
    "title": "CAPE Computer Science - Part 128",
    "content": "o less than five functions and using at least one file. They must  also create a test plan that is used to test their implemented programs for correctness.      3. Integration of Project into the course      (a) The activities related to Project work  should be  integrated into the course so as to  enable candidates to learn and practise the skills of undertaking a successful project.        CXC A19/U2/21   28    www.cxc.org  (b) Some time in  class should  be allocated for  general discussion o"
  },
  {
    "title": "CAPE Computer Science - Part 129",
    "content": "ass should  be allocated for  general discussion of  project  work. For  example, discussion of  how data should be collected, how data should  be analysed  and how data should be presented.     (c) Class time should also be allocated for discussion between teacher and students, and  student and student.     4. Management of Project      (a) Planning      An early start to planning project work is highly recommended and the schedule of  the dates for submission should be developed by teachers an"
  },
  {
    "title": "CAPE Computer Science - Part 130",
    "content": "for submission should be developed by teachers and candidates.      (b) Length      The  length  of  the report  of  the  project  should not  exceed 1500 words  excluding  diagrams, graphs, tables and bibliography.      (c) Guidance     Even if the SBA is completed in groups, each candidate should know the requirements  of the project and its assessment process.     Although  candidates may  consult  with  resource persons  besides  the  teacher  the  candidates’ submission should be their own"
  },
  {
    "title": "CAPE Computer Science - Part 131",
    "content": "r  the  candidates’ submission should be their own work.      Candidates are not expected to work on  their own. The teacher is expected to give  appropriate guidance  at all stages of  project  work, for  example, chapters to read,  alternative procedures to follow and other sources of information.      (d) Authenticity      Teachers are required to ensure that all projects are the candidates’ work.     A recommended procedure is to:     (i) engage candidates in discussion;     (ii) ask candida"
  },
  {
    "title": "CAPE Computer Science - Part 132",
    "content": "age candidates in discussion;     (ii) ask candidates to describe procedures used  and summarise findings  either  orally or written; and,    (iii) ask candidates to explain specific aspects of the analysis.                    CXC A19/U2/21   29    www.cxc.org  ASSESSMENT CRITERIA FOR THE PROJECT      General      It is recommended that candidates be provided with the assessment criteria before commencing  the project.      1. The following aspects of the project will be assessed:      (a) Defin"
  },
  {
    "title": "CAPE Computer Science - Part 133",
    "content": "ts of the project will be assessed:      (a) Definition of problem;     (b) Narrative and flow charts or pseudocode;     (c) Coding of program;     (d) Testing and presentation; and,    (e) Communication of Information.      2. For each component, the aim is to find the level of achievement reached by candidates.      3. For each component, only whole numbers should be awarded.     4. It is recommended that the assessment criteria be available to candidates at all times.        CRITERIA FOR MARK"
  },
  {
    "title": "CAPE Computer Science - Part 134",
    "content": "candidates at all times.        CRITERIA FOR MARKING SCHOOL-BASED ASSESSMENT PROJECT (UNIT 1)     The project will be graded out of a total of 60 marks and marks will be allocated to each task as outlined  below. Candidates will be awarded marks for communicating information in a logical way using correct  grammar. These marks are awarded under Task 5 below.      1.  Identification of Specifications  [4]    • Functional  requirements   (2)   - All functional requirements identified  2   - OR Mo"
  },
  {
    "title": "CAPE Computer Science - Part 135",
    "content": "ll functional requirements identified  2   - OR Most functional requirements identified (over 50 %)  1   • Non-Functional  Requirements  (2)   - All non-functional requirements identified  2   - OR Most non-functional requirements identified (over 50 %)  1       2. Design  [21]   • Algorithms expressed as flow charts or pseudocode  (6)   - Flow chart/Pseudocode is logical, easy to follow and is an  accurate description of a solution using the appropriate  symbols or algorithmic      structures"
  },
  {
    "title": "CAPE Computer Science - Part 136",
    "content": "ropriate  symbols or algorithmic      structures   5-6   - Flow chart/Pseudocode is organised, easy to follow for the  most part, and is a clear description of a solution using the  appropriate symbols or      algorithmic  structures   3-4   - Flow chart/Pseudocode is not well organised, and description  of solution lacks clarity     1-2     CXC A19/U2/21   30    www.cxc.org    • Use of Files   (4)   Selection and Justification of file structure  (2)   - Appropriate selection and justification o"
  },
  {
    "title": "CAPE Computer Science - Part 137",
    "content": "(2)   - Appropriate selection and justification of file structure  2   - Appropriate selection but no justification of file structure  1   • Description of File Inputs and Outputs  (2)   - States sources and types of inputs  1   - States uses of outputs   1   • Use of appropriate data structures   (6)   - Data structure chosen were appropriate for the problem  definition   5-6   - Data structure chosen were reasonable but not appropriate  3-4   - Data structure chosen were inappropriate  1-2"
  },
  {
    "title": "CAPE Computer Science - Part 138",
    "content": "- Data structure chosen were inappropriate  1-2    • Demonstration of structured programming concepts      (5)   - Design demonstrates excellent use of structured  programming concepts   5   - Design demonstrates good use of structured programming  concepts   3-4   - Design demonstrates limited use of structured programming  concepts   1-2       3. Coding of Program  [19]    • Structured decomposition using functions  (6)    - Overall, program comprises functions as independent units  5-6   - Pr"
  },
  {
    "title": "CAPE Computer Science - Part 139",
    "content": "mprises functions as independent units  5-6   - Program comprises most  functions as independent units  3-4   - Program comprises  some functions as independent units  1-2    • Demonstration of the concept of structured programming   (3)    - Evidence of looping structures  3   - Evidence of conditional statements  2   - Evidence of other structures (for example assignment, input,  output)   1       • Appropriate programming style and documentation   (4)   - Appropriate document in significant a"
  },
  {
    "title": "CAPE Computer Science - Part 140",
    "content": "on   (4)   - Appropriate document in significant areas  3-4   - Standard indentation of code  1-2    • Evidence that code matches algorithm   (4)   - Code matches sequencing of algorithm  4   - Code matches MOST of the sequencing of algorithm  3   - Code matches SOME of the sequencing of algorithm  2   - Sequencing of code inconsistent with algorithm  1    • Evidence of file manipulation   (2)   - Correct file types used, for example, text, binary, sequential,  random   2   - File used appropria"
  },
  {
    "title": "CAPE Computer Science - Part 141",
    "content": "y, sequential,  random   2   - File used appropriately  1       4. Testing and presentation  [11]    • Test Plan  (3)    - Test Plan with exhaustive data set  3   - Test Plan with acceptable data set  2   - Test Plan with minimal data set  1   • Test Results  (5)   - Normal input giving correct results  5   - Extreme input giving correct results or appropriate error  message   3-4     CXC A19/U2/21   31    www.cxc.org   - Erroneous   input   (for   example,   text   when   number    required)"
  },
  {
    "title": "CAPE Computer Science - Part 142",
    "content": "example,   text   when   number    required)   giving appropriate error message     2   - Incomplete input giving appropriate message  1    • Overall presentation   (3)    - Appropriate cover page  1   - Use of table of contents  1   - Sequencing in document easy to follow  1        5. Documentation  [5]     • Technical Documentation   (3)      - Presents a System Architecture that shows clearly defined  inputs, outputs, processing and storage points    2   - OR System architecture is not cle"
  },
  {
    "title": "CAPE Computer Science - Part 143",
    "content": "points    2   - OR System architecture is not clearly defined   1   - Guidelines for updating programs and data as the programme  is used over an extended period of time    1        • User Documentation  (2)   - Communicates   information   in   a   logical   way   using    correct   grammar   and appropriate jargon ALL of the time   2   - Communicates   information   in   a   logical   way   using    correct   grammar   and MOST of the time   1        TOTAL  60     UNIT 2: Further Topics in Co"
  },
  {
    "title": "CAPE Computer Science - Part 144",
    "content": "TOTAL  60     UNIT 2: Further Topics in Computer Science      1.  The aims of the project are to:      (a) develop candidates’ personal insights into further topics in Computer Science; and,     (b) provide  opportunities  for  all  candidates to  show, with  confidence,  that they  have  mastered the syllabus.     2.  Requirements      Candidates are expected to choose a problem for which a software solution  exists and then  develop  the software  using  software engineering techniques"
  },
  {
    "title": "CAPE Computer Science - Part 145",
    "content": "e software  using  software engineering techniques. In  particular, candidates are  expected to demonstrate appropriate choice of the tools and techniques used in the analysis  of  the  software  to  be  developed.  They  are  then  expected to  design,  code, and  test  their  software using appropriate techniques.      The following are examples of the kinds of projects that students can develop for the School- Based Assessment:      (a) simple process scheduler for an operating system;   (b)"
  },
  {
    "title": "CAPE Computer Science - Part 146",
    "content": "process scheduler for an operating system;   (b) vehicle parking system to allocate spaces to vehicles in a parking lot;   (c) system to manage a music collection; and,  (d) student registration system to keep track of student information, course grades and  registration details.            CXC A19/U2/21   32    www.cxc.org   3.  Integration of Project into the course      (a) The activities related to Project work  should be  integrated into the course so as to  enable candidates to learn and"
  },
  {
    "title": "CAPE Computer Science - Part 147",
    "content": "e course so as to  enable candidates to learn and practise the skills of undertaking a successful project.      (b) Some  time in  class should  be allocated for  general discussion of  project  work. For  example, discussion of  how data should be collected, how data should  be analysed  and how data should be presented.      (c) Class time should also be allocated for discussion between teacher and students, and  student and student.      4.  Management of Project      (a) Planning      An ear"
  },
  {
    "title": "CAPE Computer Science - Part 148",
    "content": "anagement of Project      (a) Planning      An early start to planning project work is highly recommended and the schedule of  the dates for submission should be developed by teachers and candidates.      (b) Length      The  length  of  the report  of  the  project  should not  exceed 1500 words  excluding  diagrams, graphs, tables and bibliography.       (c) Guidance     Even if the SBA is completed in groups, each candidate should know the requirements  of the project and its assessment proce"
  },
  {
    "title": "CAPE Computer Science - Part 149",
    "content": "uirements  of the project and its assessment process.     Although  candidates may  consult  with  resource persons  besides  the  teacher  the  candidate’s submission should be his or her own work.     Candidates are not expected to work on  their own. The teacher is expected to give  appropriate guidance  at all stages of  project  work, for  example, chapters to read,  alternative procedures to follow and other sources of information.      (d) Authenticity      Teachers are required to ensure"
  },
  {
    "title": "CAPE Computer Science - Part 150",
    "content": "Authenticity      Teachers are required to ensure that all projects are the candidates’ work.     A recommended procedure is to:     (i) engage candidates in discussion;      (ii) ask candidates to describe procedures used  and summarise findings  either  orally or written; and,     (iii) ask candidates to explain specific aspects of the analysis.            CXC A19/U2/21   33    www.cxc.org  ASSESSMENT CRITERIA FOR THE PROJECT      General      It is recommended that candidates be provided wit"
  },
  {
    "title": "CAPE Computer Science - Part 151",
    "content": "It is recommended that candidates be provided with the assessment criteria before commencing  the project.      1. The following aspects of the project will be assessed:      (a) Specification of requirements;     (b) Design Specification;     (c) Coding and Testing; and,    (d) Communication of Information.      2. For each component, the aim is to find the level of achievement reached by the candidates.    3. For each component, only whole numbers should be awarded.     4. It is recommended t"
  },
  {
    "title": "CAPE Computer Science - Part 152",
    "content": "bers should be awarded.     4. It is recommended that the assessment criteria be available to candidates at all times.      CRITERIA FOR MARKING SCHOOL-BASED ASSESSMENT PROJECT (UNIT 2)     The project will be graded out of a total of 60 marks and marks will be allocated to each task as outlined  below. Candidates will be awarded a total of 5 marks for communicating information in a logical way  using correct grammar.  The marks are awarded as shown in the mark scheme below.      1.  Specificati"
  },
  {
    "title": "CAPE Computer Science - Part 153",
    "content": "own in the mark scheme below.      1.  Specification of requirements  [25]         • Definition of problem   (5)    - Complete accurate description of the problem  5    - Generally accurate description for the problem  4   - Partially accurate description for the problem  3   - Weak description for the problem  1-2         • Techniques of analysis used   (5)    - Sound and relevant techniques used  5   - Mostly sound and relevant techniques  3-4   - Techniques were partially sound and relevance"
  },
  {
    "title": "CAPE Computer Science - Part 154",
    "content": "- Techniques were partially sound and relevance was limited  1-2         • Use of Data Flow diagrams and E-R diagrams   (9)   Data Flow Diagrams (DFD)  (3)   Context Level     - Complete and accurate diagram of all relevant entities, data  flows   3   - Accurate diagram of most relevant entities, data flows  2   - Accurate diagram of few relevant entities, data flows  1          CXC A19/U2/21   34    www.cxc.org    • Level 1 Diagram    (3)   - Complete and accurate diagram of all relevant proc"
  },
  {
    "title": "CAPE Computer Science - Part 155",
    "content": "Complete and accurate diagram of all relevant processes,  data flows and major data stores     3   - Accurate diagram of most relevant processes, data flows and  major data stores   2   - Accurate  diagram  of few  relevant  processes, data  flows  and  major  data stores   1         • Entity Relation Diagram (ERD)   (3)    - Complete and accurate diagram of all relevant entities and  relationships.   3   - Accurate diagram of most relevant entities and relationships.    2   - Accurate diagram o"
  },
  {
    "title": "CAPE Computer Science - Part 156",
    "content": "ies and relationships.    2   - Accurate diagram of few relevant entities and relationships.  1        • Functional and non-functional requirements  (6)   Functional  Requirements   (3)   - Complete and accurate description of all requirements   3   - Complete and accurate description of most requirements   2   - Complete and accurate description of few requirements   1         • Non Functional Requirements  (3)    - Complete and accurate description of all requirements  3    - Accurate descript"
  },
  {
    "title": "CAPE Computer Science - Part 157",
    "content": "tion of all requirements  3    - Accurate description of most requirements  2   - Accurate description of some requirements  1    2. Design Specification  [14]    • System structuring   (4)    - Complete and accurate diagram of all processes  4   - Accurate diagram of most processes  3   - Accurate diagram of some processes  2   - Accurate diagram of few processes  1         • User interface design   (2)   - Thorough analysis and appropriate justification of interface  design   2   - Partial ana"
  },
  {
    "title": "CAPE Computer Science - Part 158",
    "content": "ification of interface  design   2   - Partial analysis and justification of interface design    1        • Report design  (2)   - Appropriate and well implemented  2   - Generally appropriate and satisfactorily implemented  1         • Algorithm design   (3)    - Appropriate and well implemented algorithm design  3   - Generally appropriate algorithm design  2   - General understanding of algorithm design  1         • Choice of appropriate data structures   (3)   - Appropriate and well implemen"
  },
  {
    "title": "CAPE Computer Science - Part 159",
    "content": "structures   (3)   - Appropriate and well implemented  3   - Generally appropriate  2   - Partially appropriate and implementation was limited  1                          CXC A19/U2/21   35    www.cxc.org  3. Coding and Testing  [15]   • Code achieves functionality  (5)    - Code   achieved   functionality   (documentation,   error    trapping,   correct output, usability and  reporting)   5   - Code   achieved   some   functionality   (documentation,    error   trapping, correct output, usabili"
  },
  {
    "title": "CAPE Computer Science - Part 160",
    "content": "tion,    error   trapping, correct output, usability and  reporting)     3-4   - Functionality was limited  1-2        • Code corresponds to design  (5)    - Code achieves all the design specifications  5   - Code achieves most of  the design specifications  3-4   - Code achieves few of  the design specifications  1-2         • Test plans     (5)    - Test Plan with exhaustive data set  5   - Test Plan with acceptable data set  3-4   - Test Plan with minimal data set  1-2         4. Communicatio"
  },
  {
    "title": "CAPE Computer Science - Part 161",
    "content": "with minimal data set  1-2         4. Communication and Presentation  [6]   • Communicates   information in a logical way using correct    grammar   and appropriate jargon ALL of the time   5-6     • Communicates   information   in   a   logical   way   using   correct    grammar   and appropriate jargon MOST of the time   3-4    • Communicates  information in  a   logical   way   using   correct    grammar   and appropriate jargon SOME of the time   1-2        TOTAL  60     REGULATIONS FOR PRI"
  },
  {
    "title": "CAPE Computer Science - Part 162",
    "content": "me   1-2        TOTAL  60     REGULATIONS FOR PRIVATE CANDIDATES      Candidates who  are registered privately will  be  required to  sit Paper  01, Paper 02 and  Paper 032.  Paper 032 will test the student’s acquisition of the skills in the same areas of the syllabus identified  for the School-Based Assessment. Consequently, candidates are advised to undertake a project similar  to the project that the school candidates would normally complete and submit for SBA. It should be  noted that priva"
  },
  {
    "title": "CAPE Computer Science - Part 163",
    "content": "and submit for SBA. It should be  noted that private candidates would not be required to submit a project document.        REGULATIONS FOR RESIT CANDIDATES     Resit candidates must complete Paper 01 and Paper 02 of the examination for the year for which they  reregister.      CAPE® candidates may  reuse any moderated SBA score within a two-year period.  In order to assist  candidates in making decisions about whether or not to reuse a moderated SBA score, the Council will  continue to indicate"
  },
  {
    "title": "CAPE Computer Science - Part 164",
    "content": "SBA score, the Council will  continue to indicate on the preliminary results if a candidate’s moderated SBA score is less than 50 per  cent in a particular Unit.  Candidates reusing SBA scores should register as “Resit candidates” and must  provide the previous candidate number when registering.      Resit candidates  must  be  entered through  a  school,  approved  educational  institution  or  the  local  Registrar’s office.           CXC A19/U2/21   36    www.cxc.org   ASSESSMENT  GRID"
  },
  {
    "title": "CAPE Computer Science - Part 165",
    "content": "U2/21   36    www.cxc.org   ASSESSMENT  GRID      The Assessment Grid for each Unit showing marks assigned to each paper and to Modules, and the  percentage contribution of each paper to the total scores.      Papers  Module 1  Module 2  Module 3  Total  (%)   External Assessment      Paper 01    Multiple Choice   (1 hour 30 minutes)              (15)            (15)            (15)            (45)            (30)     Weighting      30      30      30      90     Paper 02   Essay   (2 hours 30"
  },
  {
    "title": "CAPE Computer Science - Part 166",
    "content": "30      90     Paper 02   Essay   (2 hours 30 minutes)        30    (50 )        30    (50 )         30    (50 )       90    (150)         50   Paper 031-School-Based  Assessment        The Alternate to the SBA-Paper 032  (2 hours)              20               20               20              60              (20)       Total      100       100      100      300     (100)   *Weighted scores in brackets.                                                 CXC A19/U2/21   37    www.cxc.org   LOGI"
  },
  {
    "title": "CAPE Computer Science - Part 167",
    "content": "CXC A19/U2/21   37    www.cxc.org   LOGIC SYMBOLS      AND gate OR gate   NOT gate   true     false                                                      p, q, r   propositions   ∧  conjunction   ∨  (inclusive)    disjunction   ∼   negation   →   conditionality   ↔  bi-conditionality   ·   implication   ⇔   equivalence   T , 1   F ,      CXC A19/U2/21   38    www.cxc.org   GLOSSARY     WORD      DEFINITION/MEANING  NOTES   analyse      examine in detail    annotate  add a brief note to"
  },
  {
    "title": "CAPE Computer Science - Part 168",
    "content": "examine in detail    annotate  add a brief note to a label  Simple phrase or a few words  only.     apply       use knowledge/principles to solve  problems     Make inferences/conclusions.       assess              present  reasons  for  the  importance  of   particular   structures,   relationships   or  processes   Compare  the   advantages  and  disadvantages or the merits and  demerits of a particular  structure, relationship or  process.     calculate      arrive at the solution to a numeri"
  },
  {
    "title": "CAPE Computer Science - Part 169",
    "content": "calculate      arrive at the solution to a numerical  problem   Steps should be shown; units  must be included.   classify      divide  into  groups  according to  observable characteristics     comment  state opinion or view with supporting  reasons       compare state similarities and differences An explanation of the  significance   of   each   similarity  and  difference   stated  may  be  required for comparisons which  are other than structural.    construct       use a specific format to"
  },
  {
    "title": "CAPE Computer Science - Part 170",
    "content": "tural.    construct       use a specific format to make and/or   draw a graph, histogram, pie chart or  other   representation  using   data  or  material   provided   or   drawn   from  practical   investigations,   build    (for  example,    a    model),    draw    scale  diagram     Such    representations   should  normally bear a title,  appropriate headings and  legend.   deduce              make  a  logical  connection   between  two  or  more  pieces  of  information;  use data to arrive"
  },
  {
    "title": "CAPE Computer Science - Part 171",
    "content": "more  pieces  of  information;  use data to arrive at a conclusion       define  state concisely the meaning of a word or  term   This      should      include       the    defining equation/formula   where relevant.     demonstrate show; direct attention to...                   CXC A19/U2/21   39    www.cxc.org  WORD      DEFINITION/MEANING  NOTES   derive  to  deduce,  determine  or  extract from  data  by   a   set  of   logical   steps  some  relationship, formula or result     This  relatio"
  },
  {
    "title": "CAPE Computer Science - Part 172",
    "content": "relationship, formula or result     This  relationship  etc.,  may  be  general or specific.       describe   provide   detailed   factual   information    of   the appearance or arrangement of a  specific structure or a sequence of a  specific process  Description  may   be  in   words,  drawings  or   diagrams  or   any  appropriate combination.   Drawings or diagrams should be  annotated to show  appropriate  detail where necessary.     determine      find the value of a physical quantity"
  },
  {
    "title": "CAPE Computer Science - Part 173",
    "content": "mine      find the value of a physical quantity    design      plan and present with appropriate  practical detail   Where  hypotheses  are  stated  or    when    tests   are   to    be  conducted,  possible  outcomes  should be clearly stated and/or  the  way  in  which  data  will  be  analysed and presented.    develop      expand   or      elaborate     an      idea      or   argument  with supporting reasons     diagram      simplified    representation   showing   the   relationship betwee"
  },
  {
    "title": "CAPE Computer Science - Part 174",
    "content": "presentation   showing   the   relationship between components    differentiate/   distinguish  (between/  among)     state or  explain  briefly  those  differences  between  or  among  items which  can  be  used to define the items or place them into  separate categories      discuss      present   reasoned   argument;   consider  points  both for  and  against; explain  the  relative merits of a case       draw            make      a      line      representation     from   specimens  or appar"
  },
  {
    "title": "CAPE Computer Science - Part 175",
    "content": "representation     from   specimens  or apparatus which  shows  an   accurate  relation between the parts   In    the    case   of    drawings  specimens, the  magnification  always be stated.   estimate      make an approximate quantitative  judgement       evaluate      weigh  evidence   and   make  judgements   based  on given criteria   The  use  of  logical  supporting  reasons for a particular point of  view   is  more  important  than  the   view   held;   usually   both  sides of an"
  },
  {
    "title": "CAPE Computer Science - Part 176",
    "content": "the   view   held;   usually   both  sides of an argument should be  considered.      CXC A19/U2/21   40    www.cxc.org    WORD      DEFINITION/MEANING  NOTES   explain  give reasons based on recall; account for    find     locate a feature or obtain as from a graph       formulate  devise a hypothesis    Identify     name or point out specific components or  features       illustrate      show     clearly     by     using     appropriate   examples  or diagrams, sketches     interpret      ex"
  },
  {
    "title": "CAPE Computer Science - Part 177",
    "content": "mples  or diagrams, sketches     interpret      explain the meaning of    justify   explain the correctness of    investigate      use   simple systematic   procedures   to  observe,  record   data  and   draw  logical  conclusions      label      add names to identify  structures or parts  indicated by pointers     list   itemise without detail    measure      take accurate quantitative readings using  appropriate instruments     name  give only the name of  No    additional   information    is"
  },
  {
    "title": "CAPE Computer Science - Part 178",
    "content": "the name of  No    additional   information    is  required.  note      write down observations    observe    pay     attention       to       details       which    characterise       a  specimen,  reaction  or  change taking place; to examine and note  scientifically   Observations   may   involve   all  the senses and/or extensions of  them     but     would normally  exclude the sense of taste.     outline      give basic steps only    plan      prepare to conduct an investigation    predic"
  },
  {
    "title": "CAPE Computer Science - Part 179",
    "content": "prepare to conduct an investigation    predict      use  information  provided  to  arrive  at  a  likely conclusion   or   suggest  a   possible  outcome       record   write an  accurate description    of  the  full  range  of observations made during a given  procedure   This includes the  values for  any  variable being investigated;  where    appropriate,   recorded  data may be depicted in graphs,  histograms or tables.      CXC A19/U2/21   41    www.cxc.org"
  },
  {
    "title": "CAPE Computer Science - Part 180",
    "content": "/21   41    www.cxc.org                                  Western Zone Office  8 April 2021  WORD     DEFINITION/MEANING  NOTES   relate                    show connections between; explain  how  one set of facts or data depend on others  or are determined by them     sketch       make a simple freehand diagram showing  relevant  proportions  and  any  important  details       state             provide   factual   information   in   concise    terms outlining explanations     suggest           of"
  },
  {
    "title": "CAPE Computer Science - Part 181",
    "content": "ms outlining explanations     suggest           offer an    explanation    deduced    from  information provided or previous  knowledge.  (...  a  hypothesis;  provide  a  generalization   which    offers    a    likely  explanation    for    a    set    of    data    or  observations.)     No  correct or incorrect solution  is   presumed   but   suggestions  must  be  acceptable within  the  limits of scientific knowledge.     test  to find out, following set procedures         CARIBBEAN EXAMIN"
  },
  {
    "title": "CAPE Computer Science - Part 182",
    "content": "following set procedures         CARIBBEAN EXAMINATIONS COUNCIL        Caribbean Advanced  Proficiency Examination®  CAPE ®            COMPUTER  SCIENCE        Specimen Papers and  Mark Schemes/Keys                   Specimen Papers and Mark Schemes:             Unit  1 Paper  01    Unit  1 Paper  02   Unit  1 Paper  032     Unit  2 Paper  01   Unit  2 Paper  02   Unit  2 Paper  032          TEST CODE 02115010  SPEC 2021/02115010   C A R I B B E A N    E X A M I N A T I O N S    C O U N C I L C"
  },
  {
    "title": "CAPE Computer Science - Part 183",
    "content": "A N    E X A M I N A T I O N S    C O U N C I L CARIBBEAN ADVANCED PROFICIENCY EXAMINATION ® COMPUTER SCIENCE SPECIMEN PAPER UNIT 1 – Paper 01 1 hour 30 minutes READ  THE  FOLLOWING  INSTRUCTIONS  CAREFULLY.   1. This test consists of 45 items.  You will have 1 hour and 30 minutes to answer them.   2. In addition to this test booklet, you should have an answer sheet.   3. Do not be concerned that the answer sheet provides spaces for more answers than there are items  in this test.   4. Each ite"
  },
  {
    "title": "CAPE Computer Science - Part 184",
    "content": "than there are items  in this test.   4. Each item in this test has four suggested answers lettered (A), (B), (C), (D).  Read each item  you are about to answer and decide which choice is best.  5. On your answer sheet, find the number which corresponds to your item and shade the space  having the same letter as the answer you have chosen.  Look at the sample item below.    Sample Item  How many selection lines does an 8 × 1 multiplexer have?                                     Sample Answer  ("
  },
  {
    "title": "CAPE Computer Science - Part 185",
    "content": "Sample Answer  (A) 1 A     B     C     D        (B)       2        (C)       3        (D)       8  The best answer to this item is “3”, so (C) has been shaded.   6. If you want to change your answer, erase it completely before you fill in your new choice.   7. When you are told to begin, turn the page and work as quickly and as carefully as you can.  If  you cannot answer an item, go on to the next one.  You may return to that item later.   8. You may do any rou"
  },
  {
    "title": "CAPE Computer Science - Part 186",
    "content": "return to that item later.   8. You may do any rough work in this booklet.   9. Figures are not necessarily drawn to scale. 10. The use of silent, non-programmable calculators is allowed. DO  NOT  TURN  THIS  PAGE  UNTIL  YOU  ARE  TOLD  TO  DO  SO.  Copyright © 2020 Caribbean Examinations Council All rights reserved. - 2 - GO ON TO THE NEXT PAGE 02115010/CAPE 2021/SPEC 4. Which of the following descriptions BEST  suits the function of cache memory?  (A) It gives the CPU more rapid access  to da"
  },
  {
    "title": "CAPE Computer Science - Part 187",
    "content": "ry?  (A) It gives the CPU more rapid access  to data. (B)  It  increases  the  data  transfer  rate   between  the  computer  and   printer. (C) It speeds up access to data on the  hard disk. (D) It stores the operating system when  the computer ‘boots’. 5. A computer’s word size is the  (A) length of an instruction (B) maximum number of characters in  a typed word (C) storage capacity of the computer’s  memory (D)  number  of  bits  that  the  CPU  can   manipulate at one time 6. What is the pu"
  },
  {
    "title": "CAPE Computer Science - Part 188",
    "content": "PU  can   manipulate at one time 6. What is the purpose of  the program counter  in a microcomputer? (A) To determine how many programs  can be opened at one time (B) To determine the sequence in which  the program instructions are to be  executed (C)  To  hold  the  number  of  the  last   instruction executed (D) To keep a count of the number of  instructions in memory 7. ‘Flash memory’ is a type of (A)       ROM (B)       EEPROM (C)       RAM (D)       EPROM  Items 1–2 refer to the following"
  },
  {
    "title": "CAPE Computer Science - Part 189",
    "content": "(D)       EPROM  Items 1–2 refer to the following binary string  sequence. 1  0  0  1  1  1  0  1 1.  The  string  sequence  is  the  8  bit  sign- magnitude  representation  of  the  decimal   value (A)       –99 (B)       –98 (C)       –29 (D)       –25 2. The   string   sequence   is   the   8   bit   two’s            complement  representation  of  the  decimal   value (A)       –25 (B)       –29 (C)       –98 (D)       –99 3. What is the logical expression implemented  in the following circ"
  },
  {
    "title": "CAPE Computer Science - Part 190",
    "content": "ical expression implemented  in the following circuit?   (A) A AND (NOT B) (B) B AND (NOT A) (C) A OR (NOT B) (D) B OR (NOT A) - 3 - GO ON TO THE NEXT PAGE 02115010/CAPE 2021/SPEC 8. Which of the following gives the slowest  access when retrieving data? (A) Floppy disk (B) Hard drive (C) Cache memory (D) Random Access Memory 9. Which of the following is the truth table of  a NAND gate? (A) A  B A NAND B  0   0 1  0   1 0  1   0 0  1   1 1 (B) A  B A NAND B  0   0 0  0   1 1  1   0 1  1   1 0 (C)"
  },
  {
    "title": "CAPE Computer Science - Part 191",
    "content": "B A NAND B  0   0 0  0   1 1  1   0 1  1   1 0 (C) A  B A NAND B  0   0 1  0   1 1  1   0 1  1   1 0 (D) A  B A NAND B  0   0 0  0   1 0  1   0 0  1   1 1 10. Which of the following BEST defines the  term ‘clock speed’? (A) The  number  of  clock  cycles  which   occur within a nanosecond (B) The  speed  at  which  the  micro- processor executes instructions (C) The  speed  at  which  the  micro- processor  transfers  data  from   secondary  storage  to  primary   memory (D) The   number   of"
  },
  {
    "title": "CAPE Computer Science - Part 192",
    "content": "age  to  primary   memory (D) The   number   of   bits   transferred       across a medium in a second 11.  Which  of  the  following  statements  about   flip-flops are true? I. Flip-flops are examples of defective  logic circuits. II. Flip-flops are two-state devices that  can only store 1’s and 0’s. III. Registers are made up of flip-flops. (A) I and II only (B) I and III only (C) II and III only (D) I, II and III  Items 12–13 refer to the following  compo- nents. (A)       ALU (B)       CU ("
  },
  {
    "title": "CAPE Computer Science - Part 193",
    "content": "lowing  compo- nents. (A)       ALU (B)       CU (C)       Registers (D)       RAM Match  EACH  item  below  with  ONE  of   the components above.  Each option may  be used once, more than once or not at all. 12. Which of the components handles statements  like “If x < 0”? 13. Which of the components coordinates the  saving of a file to a hard drive? 14.  Which of the following type of computers  is BEST suited for a weather application at  the National Hurricane Center in Florida,  USA?  (A)  M"
  },
  {
    "title": "CAPE Computer Science - Part 194",
    "content": "ational Hurricane Center in Florida,  USA?  (A)  Mainframe computer  (B)   Microcomputer   (C)  Minicomputer   (D)  Supercomputer - 4 - GO ON TO THE NEXT PAGE 02115010/CAPE 2021/SPEC  Item 15 refers to the following program segment written in low-level instructions. LOAD X // load contents of X to accumulator register ADD inc // add contents of inc to accumulator register STORE X  //  store contents of accumulator register to X 15. Which address instruction format is used by the computer? (A) Ze"
  },
  {
    "title": "CAPE Computer Science - Part 195",
    "content": "instruction format is used by the computer? (A) Zero address (B) One address (C) Two address  (D) Three address 16.  Which  of  the  following  can  be  used  to   represent an algorithm graphically? (A) Data flow diagrams (B) HIPO charts (C) GANTT charts (D) Flow charts Items 17–18 refer  to the following algorithm.  Num = 5  For I = 1 to Num do   Print I *2             EndFor 17. This algorithm is an example of  (A)  selection  (B)  recursion  (C)  unbounded iteration  (D)  bounded iteration"
  },
  {
    "title": "CAPE Computer Science - Part 196",
    "content": "(C)  unbounded iteration  (D)  bounded iteration  18. What is the output of the algorithm? (A) 1 1 (B) 1  2  3  4  5 (C) 2 4 6 8 10 (D) I*2  I*2  I*2  I*2  I*2 - 5 - GO ON TO THE NEXT PAGE 02115010/CAPE 2021/SPEC 22. An assigment statement is used to (A)  debug an algorithm  (B)  terminate an algorithm  (C)  perform input in an algorithm  (D)  set a variable to take the value of  an expression 23.  Which  of  the  following  control  structures         can  be  used  when  attempting  to  read"
  },
  {
    "title": "CAPE Computer Science - Part 197",
    "content": "can  be  used  when  attempting  to  read  data   from a file where the number of records is  not known? (A)       A       for loop (B) A sentinel control loop (C) Switch control structure (D) An ‘If ... else’ control structure 24.  The  following  algorithm  is  needed  to  print   half the sum of two positive integers entered  by the user. (1) Read A (2) Read B (3) Sum = (B + A)/2 (4) Print ‘Sum is, sum’ Which line contains an error? (A) Line 1 (B) Line 2 (C) Line 3 (D) Line 4 19.  Whic"
  },
  {
    "title": "CAPE Computer Science - Part 198",
    "content": "Line 1 (B) Line 2 (C) Line 3 (D) Line 4 19.  Which  of  the  following  represent(s)  the   properties of a well-designed algorithm?                              I. Clearly defined and unambiguous  steps  II. Finite number of steps III.  Gives  a  general  solution  to  the   problem (A) I only (B) II only (C) II and III only (D) I, II and III 20. What is a sentinel value in an algorithm? (A) A value which helps to terminate a  loop (B) Any inpput that the users enter (C) A print statement (D)"
  },
  {
    "title": "CAPE Computer Science - Part 199",
    "content": "ut that the users enter (C) A print statement (D) A control instruct 21. “Implementation”  of  the  “Implementation   and  Review”  stage  of  the  problem-solving   process involves  (A) evaluation of alternative solutions   (B)  installation of software   (C) analysis of the problem   (D)  writing algorithms - 6 - GO ON TO THE NEXT PAGE 02115010/CAPE 2021/SPEC  Item 28 refers to the following algorithm. if a == b then  print (“Equal) else if a > b then  print (“A is larger”) else  print (“B is"
  },
  {
    "title": "CAPE Computer Science - Part 200",
    "content": "> b then  print (“A is larger”) else  print (“B is larger”) End if 28.  What  is  the  output  generated  by  the   algorithm if a is 15 and b is 22? (A)   Equal  (B)   A is larger (C)  B is larger  (D)  A is larger            B is larger    29. What  are  the  values  of  p  and  r  after     execution of the following algorithm?  p = 8  q = 4  r = 8  if (p > q) AND (q > r)   p = + 1             else   r = r - 1  end if  (A) p = 7, r = 8  (B) p = 8, r = 7  (C) p = 7, r = 7  (D) p = 9, r = 7  It"
  },
  {
    "title": "CAPE Computer Science - Part 201",
    "content": "= 8, r = 7  (C) p = 7, r = 7  (D) p = 9, r = 7  Items 25–26  refer  to  the  following  algo- rithm.  I. I = 1  II. While I < > 12 do  III.    product = I * I  IV.    print (product)  V.    I = I + 1  VI. Endwhile 25.  The  algorithm  above  BEST  illustrates  an   example of using (A) input and output commands (B) a selection statement (C) test first iteration (D) test last iteration 26.  Which  of  the  following  BEST  describes   the type of statement used in line V? (A) Conditional statemen"
  },
  {
    "title": "CAPE Computer Science - Part 202",
    "content": "statement used in line V? (A) Conditional statement (B) Incremental statement (C)       Recursion (D) Variable declaration    Item 27 refers to the following algorithm. Fn (int N) { if (N < 1) return; Fn (N/2); print (N);  } 27.  What is the output of the above algorithm  if it is called with N = 7? (A) 7 3 1 (B) 7 3 3 1 (C) 1 3 7 (D) 1 3 3 7 - 7 - GO ON TO THE NEXT PAGE 02115010/CAPE 2021/SPEC  Item 30 refers to the following symbol. 30. The flow chart symbol above represents (A) a decision box"
  },
  {
    "title": "CAPE Computer Science - Part 203",
    "content": "w chart symbol above represents (A) a decision box (B) an input/output box (C) a process box (D) a terminator 31.  A  programming  paradigm  that  models  real   world entities with attributes and behaviours  is (A)       object-oriented        (B)       functional (C)       procedural (D)       scripting  Item 34 is based on the array below.   34. What is printed by the following code?  int j = 1;  while (j < 8)  {        printf(“%d”, num [j]);        j = j * 2;             } (A) 20  30  40  50"
  },
  {
    "title": "CAPE Computer Science - Part 204",
    "content": "j = j * 2;             } (A) 20  30  40  50  60  70  80  90 (B) 10  30  50  90 (C) 20  30  50 (D) 20  30  50  90 32. Which of the following variable declarations  is valid in C? (A) Char ch = ‘53x’; (B) Float n = 84.321; (C) Int m = {5, 9, 3, 1, 4}; (D)       In       x = 700000; 33. Which  of  the  following  programming   paradigms  encourages  a  modular  approach   to program construction? (A) Declarative paradigm (B) Functional paradigm (C) Imperative paradigm (D) Extreme-programming"
  },
  {
    "title": "CAPE Computer Science - Part 205",
    "content": "gm (C) Imperative paradigm (D) Extreme-programming paradigm 1 - 8 - GO ON TO THE NEXT PAGE 02115010/CAPE 2021/SPEC 35.  Which  of  the  following  is  NOT  a  valid   identifier for a variable? (A)       _hello (B)       2ndmark (C)       marker-2 (D)       SUM4 36. What is the error in the following C pro- gram which is intended to print the string  constant ‘C programming is fun’?  #include <stdio.h>  {printf(“C programming is fun”); } (A) The brackets ( and ) should be on  different lines. (B"
  },
  {
    "title": "CAPE Computer Science - Part 206",
    "content": "brackets ( and ) should be on  different lines. (B) The function main is missing. (C)  The  braces  {  and  }  should  be  on   different lines. (D) Single quotation marks ‘and’  should  be used. 37.  You are given the following C declaration  int vals [15];  Which option below shows how 15 integers  can be stored in the array? (A) for (j = 1; j <= 15; j++)       vals[j] = j; (B) for (j = 0; j < 15; j++)       vals[j] = j; (C) for (j = 0; j < 15; j++)       vals = [ j]; (D) for (j = 1; j <= 15;"
  },
  {
    "title": "CAPE Computer Science - Part 207",
    "content": "j++)       vals = [ j]; (D) for (j = 1; j <= 15; j++)       j = vals[j]; 38. Which of the following is NOT a numeric  data type? (A)       Boolean (B)       Double (C)       Float (D)       Integer 39. Which of the following programs translates  all  program  instructions  at  one  time  and   produces a stand-alone object program that  can be executed on its own?  (A)  A generator  (B)  A compiler   (C)  An assembler   (D)  An interpreter  40. Given a variable ‘num’ declared as follows:  doubl"
  },
  {
    "title": "CAPE Computer Science - Part 208",
    "content": "Given a variable ‘num’ declared as follows:  double num;   Which  of  the  following  statements  will   correctly read a value entered by a user into  ‘num’? (A) scanf (“%d”, num); (B) scanf (“%d”, &num); (C) scanf (“%lf “, num); (D) scanf (“%lf “, &num); 41. The  compilation  process  can  be  broken   up   into  THREE   main   stages.     The   correct       order of the stages is (A)  syntax  analysis,  lexical  analysis,   code generation (B)  lexical  analysis,  code  generation,   syntax"
  },
  {
    "title": "CAPE Computer Science - Part 209",
    "content": ")  lexical  analysis,  code  generation,   syntax analysis (C) lexical analysis,   syntax   analysis,     code generation (D)  code  generation,  lexical  analysis,   syntax analysis - 9 - 02115010/CAPE 2021/SPEC Item 42 is based on the following C program. 1. #include <stdio.h> 2. void main (void) { 3.  int n; 4.  FILE *fp; 5.  fp = fopen (“\\\\mh.dat”, “r”); 6.  scanf (fp, “%d”, &n);   printf (“n is %d”, n); 7.         } Content of “mh.dat”  4 5 42. Which of the following is true? (A) There is a"
  },
  {
    "title": "CAPE Computer Science - Part 210",
    "content": "42. Which of the following is true? (A) There is a syntax error in line 5. (B) There is a syntax error in line 6. (C) There are no syntax errors and the  program prints 4. (D) There are no syntax errors and the  program prints 4   5. 43.  The  method  of  manually  stepping  through       a  program  without  the  use  of  a  computer   and recording the values of variables as they  change is BEST described as (A)       tracing (B)       processing (C) syntax analysis (D) semantic analysis END O"
  },
  {
    "title": "CAPE Computer Science - Part 211",
    "content": "ng (C) syntax analysis (D) semantic analysis END OF TEST IF YOU FINISH BEFORE TIME IS CALLED, CHECK YOUR WORK ON THIS TEST. 44. Which of the BEST ‘data type’ in C allows  a programmer to use a set of named integer  constants? (A)       Char (B)       Struct (C)       Array (D)       Enum  Item 45 refers to the following code?  int a, b, c;  a = 1;    for (i = 1; i < 5; 1 + +)   a = a * i;  b = a * 5; 45.  What  is  the  value  of  a  after  execution  of   the code? (A)       5 (B)       8 (C)"
  },
  {
    "title": "CAPE Computer Science - Part 212",
    "content": "tion  of   the code? (A)       5 (B)       8 (C)       24 (D)       120 DO  NOT WRITE  ON THIS  PAGE DO  NOT WRITE  ON THIS  PAGE CANDIDATE’S   RECEIPT INSTRUCTIONS TO CANDIDATE: 1. Fill in all the information requested clearly in capital letters.  TEST CODE:   02115010    SUBJECT:               COMPUTER SCIENCE − UNIT 1 − Paper 01         PROFICIENCY:                    ADVANCED     REGISTRATION NUMBER:     FULL NAME:  ________________________________________________________________  (BLOCK LET"
  },
  {
    "title": "CAPE Computer Science - Part 213",
    "content": "______________________________________  (BLOCK LETTERS)  Signature:  ____________________________________________________________________  Date:  ________________________________________________________________________ 2. Ensure that this slip is detached by the Supervisor or Invigilator and given to you when you  hand in this booklet. 3. Keep it in a safe place until you have received your results. INSTRUCTION TO SUPERVISOR/INVIGILATOR: Sign the declaration below, detach this slip and hand it t"
  },
  {
    "title": "CAPE Computer Science - Part 214",
    "content": "declaration below, detach this slip and hand it to the candidate as his/her receipt for this booklet  collected by you. I hereby acknowledge receipt of the candidate’s booklet for the examination stated above.  Signature:  _____________________________                  Supervisor/Invigilator  Date:  _________________________________ C A R I B B E A N  E X A M I N A T I O N S  C O U N C I L    SECONCARY EDUCATION CERTIFICATE  EXAMINATION    CAPE COMPUTER SCIENCE UNIT 1    SPECIMEN PAPER 2021"
  },
  {
    "title": "CAPE Computer Science - Part 215",
    "content": "COMPUTER SCIENCE UNIT 1    SPECIMEN PAPER 2021    Item  No.  Key Syllabus  Reference  Module     Item  No.  Key Syllabus  Reference  Module  1  C 1.4  1   31  A 3.1  3  2  D 1.4  1   32  B 3.3  3  3  A 1.2  1   33  D 3.1  3  4  A 1.1  1   34  C 3.7  3  5  D 1.1  1   35  B 3.3  3  6  B 1.1  1   36  B 3.9  3  7  B 1.1  1   37  B 3.7  3  8  A 1.1  1   38  A 3.3  3  9  C 1.2  1   39  B 3.2  3  10  B 1.1  1   40  D 3.3  3  11  C 1.3  1   41  C 3.2  3  12  A 1.5  1   42  C 3.9  3  13  B 1.5  1   43  A"
  },
  {
    "title": "CAPE Computer Science - Part 216",
    "content": "12  A 1.5  1   42  C 3.9  3  13  B 1.5  1   43  A 3.9  3  14  D 1.1  1   44  D 3.3  3  15  B 1.5  1   45  C 3.9  3  16  D 2.5  2        17  D 2.6  2        18  C 2.7  2        19  D 2.4  2        20  A 2.6  2        21  B 2.2  2        22  D 2.6  2        23  B 2.6  2        24  D 2.7  2        25  C 2.6  2        26  B 2.6  2        27  C 2.7  2        28  C 2.7  2        29  B 2.7  2        30  D 2.5  2          Module 1 – COMPUTER ARCHITECTURE AND ORGANISATION  Module 2 – PROBLEM-SOLVING WIT"
  },
  {
    "title": "CAPE Computer Science - Part 217",
    "content": "E AND ORGANISATION  Module 2 – PROBLEM-SOLVING WITH COMPUTERS  Module 3 – PROGRAMMING  TEST CODE 02115020 SPEC 2021/02115020   C A R I B B E A N      E X A M I N A T I O N S      C O U N C I L CARIBBEAN ADVANCED PROFICIENCY EXAMINATION ® COMPUTER SCIENCE SPECIMEN PAPER FUNDAMENTALS OF COMPUTER SCIENCE UNIT 1 – Paper 02 2 hours 30 minutes READ THE FOLLOWING INSTRUCTIONS CAREFULLY. 1. This paper consists of SIX questions.  Answer ALL questions. 2. Write your answers in the spaces provided in this"
  },
  {
    "title": "CAPE Computer Science - Part 218",
    "content": "Write your answers in the spaces provided in this booklet. 3. Do NOT write in the margins.  4. If you need to rewrite any answer and there is not enough space to do so on the  original  page,  you  must  use  the  extra  lined  page(s)  provided  at  the  back  of  this   booklet.  Remember to draw a line through your original answer. 5. If you use the extra page(s) you MUST write the question number clearly in  the box provided at the top of the extra page(s) and, where relevant, include  the q"
  },
  {
    "title": "CAPE Computer Science - Part 219",
    "content": "extra page(s) and, where relevant, include  the question part beside the answer.   DO  NOT  TURN  THIS  PAGE  UNTIL  YOU  ARE  TOLD  TO  DO  SO.  Copyright © 2020 Caribbean Examinations Council All rights reserved. 02115020/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code - 2 - GO ON TO THE NEXT PAGE 02115021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN     THIS    AREA"
  },
  {
    "title": "CAPE Computer Science - Part 220",
    "content": "WRITE    IN     THIS    AREA                          DO    NOT    WRITE    IN     THIS    AREA          SECTION A COMPUTER ARCHITECTURE AND ORGANIZATION Answer BOTH questions. 1.  (a) Draw a clearly labelled block diagram of a 2 to 1 line multiplexer.  [5 marks]    (b) Construct the truth table for the following circuit which is a combination of basic logic  gates.                                                 C                            [7 marks] - 3 - GO ON TO THE NEXT PAGE 02115021/CA"
  },
  {
    "title": "CAPE Computer Science - Part 221",
    "content": "[7 marks] - 3 - GO ON TO THE NEXT PAGE 02115021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS     AREA                          DO    NOT    WRITE    IN    THIS     AREA          \t(c)\t   Consider\tthe\tfollowing\tfloating\tpoint\trepresentation.     1-bit sign, 3-bit exponent, 5-bit mantissa     Calculate the decimal representation of 001110110.                           ......................"
  },
  {
    "title": "CAPE Computer Science - Part 222",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 223",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 224",
    "content": ".....................................................................................................                         .............................................................................................................................................                         .............................................................................................................................................. [3 marks]  Total 15 marks - 4 - GO ON TO THE NEXT PAGE 02115021/C"
  },
  {
    "title": "CAPE Computer Science - Part 225",
    "content": "l 15 marks - 4 - GO ON TO THE NEXT PAGE 02115021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN     THIS    AREA                          DO    NOT    WRITE    IN     THIS    AREA          2.\t(a)\t   Differentiate\tbetween\tthe\tfollowing\titems\tas\tthey\tpertain\tto\tcomputer\tsystems.      (i) ROM and RAM                                      ................................................................"
  },
  {
    "title": "CAPE Computer Science - Part 226",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 227",
    "content": ".................................................. [2 marks]    (ii)  EPROM and EEPROM                                      ................................................................................................................................. ................................................................................................................................ ....................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 228",
    "content": "............................................................. ................................................................................................................................ [2 marks]  (b) (i)  State what is meant by the ‘instruction set’ of a central processing unit (CPU).                                             ................................................................................................................................. .................................."
  },
  {
    "title": "CAPE Computer Science - Part 229",
    "content": "............... ................................................................................................................................ ................................................................................................................................ ................................................................................................................................ [1 mark] - 5 - GO ON TO THE NEXT PAGE 02115021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar"
  },
  {
    "title": "CAPE Computer Science - Part 230",
    "content": "CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS     AREA                          DO    NOT    WRITE    IN    THIS     AREA          \t\t(ii)\t   Briefly\tdescribe\tTWO\ttypes\tof\tinstructions\tthat\tare\ttypically\tincluded\tin\tan\tinstruction\t set.                                        ...................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 231",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 232",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 233",
    "content": ".......................... .................................................................................................................................... [4 marks]   (c)      Explain  how  the  ‘fetch’,  ‘decode’,  ‘execute’  cycle  works  in  relation  to  the  execution  of  an   instruction by the CPU?                         ............................................................................................................................................"
  },
  {
    "title": "CAPE Computer Science - Part 234",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 235",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 236",
    "content": "............................................................................................................................                         ............................................................................................................................................. [6 marks]  Total 15 marks - 6 - GO ON TO THE NEXT PAGE 02115021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    I"
  },
  {
    "title": "CAPE Computer Science - Part 237",
    "content": "A                          DO    NOT    WRITE    IN     THIS    AREA                          DO    NOT    WRITE    IN     THIS    AREA          SECTION B PROBLEM-SOLVING WITH COMPUTERS Answer BOTH questions. 3.\t(a)\t   Define\tthe\tterm\t‘algorithm’.      .............................................................................................................................................                         ................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 238",
    "content": "..............................................................................................................                           .............................................................................................................................................                                                  ............................................................................................................................................. [2 marks]   (b) Structured alg"
  },
  {
    "title": "CAPE Computer Science - Part 239",
    "content": "................... [2 marks]   (b) Structured algorithms and programs are designed using three basic control constructs.  State  ALL three constructs.                         .............................................................................................................................................                                                  ....................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 240",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 241",
    "content": "..................................................................................................                                                  ............................................................................................................................................. [3 marks] - 7 - GO ON TO THE NEXT PAGE 02115021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS     ARE"
  },
  {
    "title": "CAPE Computer Science - Part 242",
    "content": "DO    NOT    WRITE    IN    THIS     AREA                          DO    NOT    WRITE    IN    THIS     AREA           (c) A secondary school is conducting a survey on the popularity of certain colours.  Students are  asked to vote for any of four choices: red, blue, green, none.  If red, blue or green is not the  favourite, students vote for ‘none’.   \t\tWrite\ta\tpseudocode\tto\tfind\tand\tprint\tthe\t\t\t   (i) number of students who voted for EACH of the colours; red, blue, green       (ii) T"
  },
  {
    "title": "CAPE Computer Science - Part 243",
    "content": "EACH of the colours; red, blue, green       (ii) TOTAL number of students who voted for red, blue and green.     Assume that on the day of the survey, 150 students are present.  Also assume that all votes are  valid.                           ..............................................................................................................................................                         .........................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 244",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 245",
    "content": "..............................................................................................................................................                           ..............................................................................................................................................                         .............................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 246",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 247",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 248",
    "content": "..............................................................................................................................................                         ..............................................................................................................................................                         .............................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 249",
    "content": ".....................................                         .............................................................................................................................................. [10 marks]  Total 15 marks - 8 - GO ON TO THE NEXT PAGE 02115021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS     AREA                          DO    NOT    WRITE    IN    THIS     AREA"
  },
  {
    "title": "CAPE Computer Science - Part 250",
    "content": "DO    NOT    WRITE    IN    THIS     AREA          4.\t    (a)\t\t   Construct\ta\tflow\tchart\tto\trepresent\tthe\tfollowing\talgorithm.\t\t\t    begin              prompt for numDays             read numDays             set day to 1             set totalComm to 0             while day <= numDays do                   read numItemsSold                   if numItemsSold < 500 then                         comm = numItemsSold * 4                                                                         el"
  },
  {
    "title": "CAPE Computer Science - Part 251",
    "content": "else                   comm = numItemsSold * 5                   endif                   totalComm = totalComm + comm                   print comm                   add 1 to day             endwhile             print numDays, totalComm       stop      [12 marks] - 9 - GO ON TO THE NEXT PAGE 02115021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN"
  },
  {
    "title": "CAPE Computer Science - Part 252",
    "content": "DO    NOT    WRITE    IN     THIS    AREA                          DO    NOT    WRITE    IN     THIS    AREA           (b)  An algorithm is shown below.                                                   read            j                                                                         sum            =            0                             while j < 6 do               sum = sum + j               print j"
  },
  {
    "title": "CAPE Computer Science - Part 253",
    "content": "read            j                                                                         endwhile                             print ‘sum =’, sum     What would the algorithm print given the line of input data below?     3     2     1     5     7     4                         .............................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 254",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 255",
    "content": "............................................................................                         .............................................................................................................................................. [3 marks]  Total 15 marks - 10 - GO ON TO THE NEXT PAGE 02115021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS     AREA                          DO"
  },
  {
    "title": "CAPE Computer Science - Part 256",
    "content": "IN    THIS     AREA                          DO    NOT    WRITE    IN    THIS     AREA          SECTION C PROGRAMMING Answer BOTH questions.   5.         (a)         Briefly\toutline\tTWO\tprogramming\tparadigms.                         .............................................................................................................................................                         .................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 257",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 258",
    "content": ".............................................................................................................................................                         ............................................................................................................................................. [4 marks]             (b)            Explain\tTHREE\tdifferences\tbetween\ta\t‘complier’\tand\tan\t‘interpreter’.                         .............................................................."
  },
  {
    "title": "CAPE Computer Science - Part 259",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 260",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 261",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 262",
    "content": "........................................................................................................... [6 marks] - 11 - GO ON TO THE NEXT PAGE 02115021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN     THIS    AREA                          DO    NOT    WRITE    IN     THIS    AREA           (c) (i) A grocer needs to store some products.  Each product has an ID (integer), a quan- tity\tin\tstoc"
  },
  {
    "title": "CAPE Computer Science - Part 263",
    "content": "product has an ID (integer), a quan- tity\tin\tstock\t(integer)\tand\ta\tprice\t(floating\tpoint).                             Write a declaration for a struct productRec that can store the record for each product.                                     ................................................................................................................................                                     ..........................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 264",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 265",
    "content": "................................................................................................................................                                     ............................................................................................................................... [2 marks]   (ii) Assume that the two productRec items, Item3 and Item4, are already loaded with  data.  Write a code to exchange the values in Item3 and Item4.                                     ......."
  },
  {
    "title": "CAPE Computer Science - Part 266",
    "content": "Item4.                                     ................................................................................................................................                                                   ................................................................................................................................                                     ................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 267",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 268",
    "content": "............................................................................................................................ [3 marks]  Total 15 marks - 12 - GO ON TO THE NEXT PAGE 02115021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS     AREA                          DO    NOT    WRITE    IN    THIS     AREA          6. (a) Why is it reccommended that comments be used in programming cod"
  },
  {
    "title": "CAPE Computer Science - Part 269",
    "content": "commended that comments be used in programming codes?                         .............................................................................................................................................                         .............................................................................................................................................                         .........................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 270",
    "content": ".....................................................................................................                         .............................................................................................................................................                         ............................................................................................................................................. [2 marks] - 13 - 02115020/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequ"
  },
  {
    "title": "CAPE Computer Science - Part 271",
    "content": "02115020/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA           (b) An integer array P contains m positive integers and an integer array Q contains n positive  integers. Write a fragment of C code to merge the positive integers in array P with those in  array Q to create a new array R, with the order of the elemen"
  },
  {
    "title": "CAPE Computer Science - Part 272",
    "content": "create a new array R, with the order of the elements of P and Q being reversed  in  the  new  array.  Show  all  relevant  declarations,  and  assume  that  P  and  Q  are  already   loaded with integers.                         ..............................................................................................................................................                         ........................................................................................................"
  },
  {
    "title": "CAPE Computer Science - Part 273",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 274",
    "content": "...........................................................................................................................................                           ..............................................................................................................................................                         .............................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 275",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 276",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 277",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 278",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 279",
    "content": "..........................................................................                         .............................................................................................................................................. [13 marks]  Total 15 marks END OF TEST IF YOU FINISH BEFORE TIME IS CALLED, CHECK YOUR WORK ON THIS TEST. - 14 - ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AR"
  },
  {
    "title": "CAPE Computer Science - Part 280",
    "content": "DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA          02115020/CAPE 2021/SPEC EXTRA SPACE If you use this extra page, you MUST write the question number clearly in the box provided. Question No.   ........................................................................................................................................................................... ........................................................."
  },
  {
    "title": "CAPE Computer Science - Part 281",
    "content": ".................................................................................................................................................................... ........................................................................................................................................................................... ..................................................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 282",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 283",
    "content": "............................................................................................................................  ........................................................................................................................................................................... ........................................................................................................................................................................... .............................."
  },
  {
    "title": "CAPE Computer Science - Part 284",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 285",
    "content": "..................................................................................... ...........................................................................................................................................................................  ........................................................................................................................................................................... ....................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 286",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 287",
    "content": ".............................................. ........................................................................................................................................................................... ........................................................................................................................................................................... ............................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 288",
    "content": "................................................................................................................ ........................................................................................................................................................................... - 15 - ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS"
  },
  {
    "title": "CAPE Computer Science - Part 289",
    "content": "DO    NOT    WRITE    IN    THIS    AREA          02115020/CAPE 2021/SPEC EXTRA SPACE If you use this extra page, you MUST write the question number clearly in the box provided. Question No.   ........................................................................................................................................................................... ........................................................................................................................"
  },
  {
    "title": "CAPE Computer Science - Part 290",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 291",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 292",
    "content": ".............................................................  ........................................................................................................................................................................... ........................................................................................................................................................................... ............................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 293",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 294",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 295",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 296",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 297",
    "content": "................................................. ........................................................................................................................................................................... - 16 - ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA          02115020/CAPE 2021/SPEC EXTRA SPACE If you use t"
  },
  {
    "title": "CAPE Computer Science - Part 298",
    "content": "02115020/CAPE 2021/SPEC EXTRA SPACE If you use this extra page, you MUST write the question number clearly in the box provided. Question No.   ........................................................................................................................................................................... ........................................................................................................................................................................... ..........."
  },
  {
    "title": "CAPE Computer Science - Part 299",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 300",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 301",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 302",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 303",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 304",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 305",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 306",
    "content": ".............................................................................................................................................................. - 17 - ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA          02115020/CAPE 2021/SPEC EXTRA SPACE If you use this extra page, you MUST write the question number clearly in t"
  },
  {
    "title": "CAPE Computer Science - Part 307",
    "content": "e, you MUST write the question number clearly in the box provided. Question No.   ........................................................................................................................................................................... ........................................................................................................................................................................... .........................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 308",
    "content": "................................................................................................................................................... ........................................................................................................................................................................... ........................................................................................................................................................................... ........"
  },
  {
    "title": "CAPE Computer Science - Part 309",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 310",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 311",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 312",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 313",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 314",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 315",
    "content": "............................................................................................... DO  NOT WRITE  ON THIS  PAGE ‘‘*’’Barcode Area”*” Sequential Bar Code CANDIDATE’S   RECEIPT INSTRUCTIONS TO CANDIDATE: 1. Fill in all the information requested clearly in capital letters.  TEST CODE:      SUBJECT:                 PROFICIENCY:                 REGISTRATION NUMBER:     FULL NAME:  ________________________________________________________________  (BLOCK LETTERS)  Signature:  _____________"
  },
  {
    "title": "CAPE Computer Science - Part 316",
    "content": "______  (BLOCK LETTERS)  Signature:  ____________________________________________________________________  Date:  ________________________________________________________________________ 2. Ensure that this slip is detached by the Supervisor or Invigilator and given to you when you  hand in this booklet. 3. Keep it in a safe place until you have received your results. INSTRUCTION TO SUPERVISOR/INVIGILATOR: Sign the declaration below, detach this slip and hand it to the candidate as his/her recei"
  },
  {
    "title": "CAPE Computer Science - Part 317",
    "content": "slip and hand it to the candidate as his/her receipt for this booklet  collected by you. I hereby acknowledge receipt of the candidate’s booklet for the examination stated above.  Signature:  _____________________________                  Supervisor/Invigilator  Date:  _________________________________ COMPUTER SCIENCE – UNIT 1 – Paper 02 ADVANCED       0      2      1      1      5      0      2      0         02115020/KMS/CAPE SPEC/2021         CARIBBEAN EXAMINATIONS COUNCIL          ADVANCED"
  },
  {
    "title": "CAPE Computer Science - Part 318",
    "content": "CARIBBEAN EXAMINATIONS COUNCIL          ADVANCED PROFICIENCY EXAMINATION                        COMPUTER SCIENCE    UNIT 1 - PAPER 02    KEYS AND MARK SCHEME    SPECIMEN PAPER 2021                  02115020 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 02  KEY AND MARK SCHEME      2  SECTION A    COMPUTER ARCHITECTURE AND ORGANISATION     Subject Objectives: 1.2, 1.3, 1.4      Question Key   1.      (a)      Input 0 1 mark  Input 1 1 mark  Selection line 1 mark  Output 1 mark  Block diagra"
  },
  {
    "title": "CAPE Computer Science - Part 319",
    "content": "Selection line 1 mark  Output 1 mark  Block diagram looks OK overall  1 mark            [5 marks]  (b)     2 marks input    1 mark each    5 output    A B C D E F Z  0 0 1 1 0 0 0  0 1 1 0 1 0 1  1 0 0 1 0 1 1  1 1 0 0 0 0 0    [7 marks]    (c) 001110110    Sign bit = 0  Mantissa = 10110  Exponent = 011 = 3  (1)    Number represented 0.10110 × 2 3  = 101.1 = 5.5  (1)                (1)    [3 marks]                  TOTAL 15 marks        02115020 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper"
  },
  {
    "title": "CAPE Computer Science - Part 320",
    "content": "KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 02  KEY AND MARK SCHEME      3  Question 2      Subject Objectives: 1.1, 1.5      (a) (i) ROM is read only (1) RAM ... (1)  [2 marks]     (ii) EPROM is erased by ultraviolent light (1) and    EEPROM is erased by electricity (1)  [2 marks]    (b) (i) The operation of a CPU is determined by the instructions it   executes (1).  The collection of different instructions that   the CPU can execute is referred to as the CPU’s instruction   set (1).  [1"
  },
  {
    "title": "CAPE Computer Science - Part 321",
    "content": "eferred to as the CPU’s instruction   set (1).  [1 mark]    (ii) Data  processing (1):  instructions  that  perform  arithmetic  (addition,   subtraction,   etc.)   and   logic   operations  (comparisons, etc.) (1).        Data storage (1): instructions to store data in memory and  retrieve data from memory (1).      Data movement (1): instructions to input/output data from/to  input/output devices (1).      Control (1): instructions that test conditions and branch to  other instructions (1)."
  },
  {
    "title": "CAPE Computer Science - Part 322",
    "content": "nditions and branch to  other instructions (1).      Any TWO [2 x 2 = 4 marks]       [4 marks]    (c) Fetch – Instruction is obtained from physical memory (1) and sent  to a register (1).    Decode – Determine what the instruction is (1).  Determine the  operands (1).    Execute – Perform the operation (1) and store results if necessary  (1)  [6 marks]    TOTAL 15 marks              02115020 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 02  KEY AND MARK SCHEME      4  SECTION B    PROBLEM-S"
  },
  {
    "title": "CAPE Computer Science - Part 323",
    "content": "KEY AND MARK SCHEME      4  SECTION B    PROBLEM-SOLVING WITH COMPUTERS    Question 3      Subject Objectives: 2.3, 2.6, 2.9      (a) An algorithm represents a solution to the problem (1) in a  sequence of unambiguous steps (1). [2 marks]      (b) Sequential (1):Steps are performed in a strictly sequential manner, each step being      executed exactly once (1).      Selection (1):One of several alternative actions is selected and executed. (1)      Repetition (1):One or more steps is performed r"
  },
  {
    "title": "CAPE Computer Science - Part 324",
    "content": "Repetition (1):One or more steps is performed repeatedly (1).      [3 marks]      (c) rCount = bCount = gCount = nCount = 0       for j = 1 to 150 do     input choice   if choice = ‘red’ then        rCount = rCount + 1   else if choice = ‘blue; then        bCount = bCount + 1  else if choice =‘green’ then       gCount = gCount + 1  else nCount = nCount + 1 {Assumes all choices are valid}  end for      print ‘Red = ‘, rCount, ‘Blue = ‘, bCount, ‘Green = ‘, gCount     totalColorVotes = rCount +"
  },
  {
    "title": "CAPE Computer Science - Part 325",
    "content": "‘Green = ‘, gCount     totalColorVotes = rCount + bCount + gCount     print ‘Total color votes =’, totalColorVotes        [10 marks]     Total 15 marks  ‘For’ or other loop = 1  Loop limits correct = 1  1  1  1  1  1  1  1  Note that one print  command can have all the  required info  1      02115020 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 02  KEY AND MARK SCHEME      5  Question 4      Subject Objectives: 2.5, 2.7, 2.8    (a)     Each symbol correct (4 symbols)  = 4  marks  First de"
  },
  {
    "title": "CAPE Computer Science - Part 326",
    "content": "h symbol correct (4 symbols)  = 4  marks  First decision box    = 2  marks  Second decision box    = 2  marks  Read numItemsSold   = 1  mark  Add 1 to day    = 1  mark  Looping to correct decision box = 1  mark  Set Day to 1, total comm to 0  = 1  mark                                                      [12 marks]      02115020 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 02  KEY AND MARK SCHEME      6  Question 4 cont’d    (b)     3 2 1    sum = 6    2 marks   1 mark  [3 marks]    Total"
  },
  {
    "title": "CAPE Computer Science - Part 327",
    "content": "sum = 6    2 marks   1 mark  [3 marks]    Total 15 marks                                                                                     02115020 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 02  KEY AND MARK SCHEME      7  SECTION C    PROGRAMMING  Question 5      Subject Objectives: 3.1, 3.2, 3.3, 3.9, 3.10    (a) (i) Imperative (1) — Variables are manipulated in storage using     expressions (1)     Functional (1) — Logic is implemented by the use of  functions (1)    Object-orient"
  },
  {
    "title": "CAPE Computer Science - Part 328",
    "content": "nted by the use of  functions (1)    Object-oriented (1) — Modelling is done using classes and  objects (1)    [2 x 2 marks]      [4 marks]      (b) A  compiler  translates  the  entire  program  before  execution (1)  while an interpreter translates one line, executes that line and  then translates the next line. (1)      A compiler creates a list of errors after compilation (1) while  an interpreter stops after the first error. (1)     A  compiler  produces  an  independent  executable  file ("
  },
  {
    "title": "CAPE Computer Science - Part 329",
    "content": "ler  produces  an  independent  executable  file (1) while  an  interpreter program needs the interpreter each time it is run (1)  [6 marks]    (c) (i) struct productRec{   int ID;   int quantity;   double price     }    Outer part (1)  Declaration of variables within struct (1)   [2 marks]                    02115020 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 02  KEY AND MARK SCHEME      8      (ii) struct product Rec temp;    temp  = Item3;    Item3 = Item4;    Item4 = temp;      Three"
  },
  {
    "title": "CAPE Computer Science - Part 330",
    "content": "em3;    Item3 = Item4;    Item4 = temp;      Three lines of code above in correct order (3)    Two lines of code correct (2)    One line of code above (1)    [3 marks]    Total 15 marks       02115020 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 02  KEY AND MARK SCHEME      9  Question 6      Subject Objectives: 3.6, 3.7, 3.8, 3.11    (a) Comments explain important steps (1) in a program do users can  easily understand code. (1)   [2 marks]      (b)  //declarations  int i = m - 1;  //eleme"
  },
  {
    "title": "CAPE Computer Science - Part 331",
    "content": "(b)  //declarations  int i = m - 1;  //elements of array P. They can also start  at 0, but the loop would be different  int j = n -1;   //elements of array Q. They can also start  at 0, but the loop would be different   int k = 0;      //elements of array R       3 marks    //add elements of P to the merged array R. A for loop can  also be used  while(i >= 0){   1 mark     R[k] = P[i];  2 marks     k++;    1 mark  i-       1 mark  }    //add elements of Q to the merged array R. A for loop"
  },
  {
    "title": "CAPE Computer Science - Part 332",
    "content": "d elements of Q to the merged array R. A for loop can  also be used  while(j >= 0){  1 mark     R[k] = Q[j];         2 marks     k++;                 1 mark     j--;                 1 mark  }         [13 marks]  Total 15 marks    ‘‘*’’Barcode Area”*” C A R I B B E A N    E X A M I N A T I O N S    C O U N C I L CARIBBEAN SECONDARY EDUCATION CERTIFICATE ® EXAMINATION     FILL IN ALL THE INFORMATION REQUESTED CLEARLY IN CAPITAL LETTERS. TEST CODE    SUBJECT       PROFICIENCY             REGISTRATI"
  },
  {
    "title": "CAPE Computer Science - Part 333",
    "content": "SUBJECT       PROFICIENCY             REGISTRATION NUMBER  SCHOOL/CENTRE NUMBER NAME OF SCHOOL/CENTRE CANDIDATE’S FULL NAME (FIRST, MIDDLE, LAST)  DATE OF BIRTH        DDMMYYYY  HOW MANY ADDITIONAL PAGES  HAVE YOU USED IN TOTAL? SIGNATURE  __________________________________________________ ‘‘*’’Barcode Area”*” Front Page Bar Code ‘‘*’’Barcode Area”*” Current Bar Code      0     2     1     1     5     0     3     2 COMPUTER SCIENCE – SPEC ADVANCED SPECIMEN PAPER ‘‘*’’Barcode Area”*” Sequential"
  },
  {
    "title": "CAPE Computer Science - Part 334",
    "content": "CED SPECIMEN PAPER ‘‘*’’Barcode Area”*” Sequential Bar Code TEST CODE 02115032 SPEC 2021/02115032   C A R I B B E A N      E X A M I N A T I O N S      C O U N C I L CARIBBEAN ADVANCED PROFICIENCY EXAMINATION ® COMPUTER SCIENCE SPECIMEN PAPER UNIT 1 – Paper 032 2 hours READ THE FOLLOWING INSTRUCTIONS CAREFULLY. 1. This paper consists of SEVEN questions. 2. Answer ALL questions. 3. Write your answers in the spaces provided in this booklet. 4. DO NOT write in the margins. 5.  If  you  need  to  re"
  },
  {
    "title": "CAPE Computer Science - Part 335",
    "content": "OT write in the margins. 5.  If  you  need  to  re-write  any  answer  and  there  is  not  enough  space  to  do  so  on   the original page, there are two extra pages provided at the back of this booklet.          Remember to draw a line through your original answer and correctly number  your new answer in the box provided. 6.  If you use extra pages you MUST write your registration number and question  number clearly in the boxes provided at the top of EVERY extra page. DO  NOT  TURN  THIS  P"
  },
  {
    "title": "CAPE Computer Science - Part 336",
    "content": "he top of EVERY extra page. DO  NOT  TURN  THIS  PAGE  UNTIL  YOU  ARE  TOLD  TO  DO  SO.  Copyright © 2020 Caribbean Examinations Council  All rights reserved. 02115032/CAPE 2021/SPEC - 3 - GO ON TO THE NEXT PAGE 02115032/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT     WRITE    IN    THIS    AREA                          DO    NOT     WRITE    IN    THIS    AREA          Answer ALL questions. CASE STUDY  A l"
  },
  {
    "title": "CAPE Computer Science - Part 337",
    "content": "REA          Answer ALL questions. CASE STUDY  A local community college wishes to automate the course registration process whereby students register  to undertake courses that are part of their degree programme. The college is seeking your assistance in  developing a user-friendly course registration system that allows students to register for up to three courses. The system will present a menu from which students would be able to view all courses, register for a course  or de-register. To regi"
  },
  {
    "title": "CAPE Computer Science - Part 338",
    "content": "es, register for a course  or de-register. To register, students would select the corresponding menu option and enter the course ID.   The system would use the master course file to  show details such as course ID, course name, lecturer,  number of students already registered and the maximum number of students allowed to register. If a space  is available, a student would input his/her student identification number to register for the selected course.  The relevant system files would then be upd"
  },
  {
    "title": "CAPE Computer Science - Part 339",
    "content": "urse.  The relevant system files would then be updated and a message sent to the student indicating whether the  course registration was successful. Identification of Specifications 1. Describe FIVE functional requirements of the case study.  ..........................................................................................................................................................             .........................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 340",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 341",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 342",
    "content": "...........................             ..........................................................................................................................................................  ..........................................................................................................................................................  [5 marks] 2 . List THREE non-functional requirements of the case study.             ................................................................"
  },
  {
    "title": "CAPE Computer Science - Part 343",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 344",
    "content": ".............             ..........................................................................................................................................................                         [3 marks]                                                               - 4 - GO ON TO THE NEXT PAGE 02115032/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO     NOT    WRITE    IN    THIS    AREA"
  },
  {
    "title": "CAPE Computer Science - Part 345",
    "content": "WRITE    IN    THIS    AREA                          DO     NOT    WRITE    IN    THIS    AREA          Design 3. (a)  Write  the structure of the master course text file.  Include all the fields.                         ............................................................................................................................................                                     ....................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 346",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 347",
    "content": "....................................................................................................................................... [3 marks]  (b)  Show sample contents of the master course text file using THREE records.                                     ............................................................................................................................................                         .........................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 348",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 349",
    "content": "............................................................................................................................................                         ............................................................................................................................................ [2 marks] - 5 - GO ON TO THE NEXT PAGE 02115032/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT"
  },
  {
    "title": "CAPE Computer Science - Part 350",
    "content": "IS    AREA                          DO    NOT     WRITE    IN    THIS    AREA                          DO    NOT     WRITE    IN    THIS    AREA          4. Using the fields identified in Question 3 (a) and the following functions              1.            findCourse – use course ID to check the master course file  2.  updateCourse - update the course data             3.            updateMasterFile - update the master file data.     Design an algorithm (flow chart/pseudocode) that would provide"
  },
  {
    "title": "CAPE Computer Science - Part 351",
    "content": "gorithm (flow chart/pseudocode) that would provide a solution for the function       registerCourse, which registers a student for a course.               ..........................................................................................................................................................             ..........................................................................................................................................................  ......................"
  },
  {
    "title": "CAPE Computer Science - Part 352",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 353",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 354",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 355",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 356",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 357",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 358",
    "content": "................................................................................................... [15  marks] - 6 - GO ON TO THE NEXT PAGE 02115032/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO     NOT    WRITE    IN    THIS    AREA                          DO     NOT    WRITE    IN    THIS    AREA          5. Coding and Program Documentation   Write and document the C code for the algorithm in Question 4. Assume al"
  },
  {
    "title": "CAPE Computer Science - Part 359",
    "content": "C code for the algorithm in Question 4. Assume all variables are already              declared.  ..........................................................................................................................................................             ..........................................................................................................................................................  ..............................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 360",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 361",
    "content": "..........................................................................................................................................................  ..........................................................................................................................................................             ..........................................................................................................................................................  .........."
  },
  {
    "title": "CAPE Computer Science - Part 362",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 363",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 364",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 365",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 366",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 367",
    "content": "................................................. [21 marks] - 7 - GO ON TO THE NEXT PAGE 02115032/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT     WRITE    IN    THIS    AREA                          DO    NOT     WRITE    IN    THIS    AREA          6.  Trace Table  (a) The following code finds and displays the course with the  highest number of registered  students.    Complete  the  trace  table.    Assume"
  },
  {
    "title": "CAPE Computer Science - Part 368",
    "content": "tudents.    Complete  the  trace  table.    Assume  that  the  maximum  registration  for  each   course is 25 students.                          courseID = “ ”                         noRegistered=            0                         highestNum=            0   courseTally = 0   maxCourseID= “ ”                                     WHILE MASTERCOURSE <> EOF DO                                     noRegistered            =            MASTERCOURSE_RECORD.noRegistered"
  },
  {
    "title": "CAPE Computer Science - Part 369",
    "content": "ECORD.noRegistered                                     courseID            =            MASTERCOURSE_RECORD.courseID                                     IF noRegistered > highestNum THEN                                                 highestNum            =            noRegistered                                                 maxCourseID            =            courseID                                     END IF    courseTally = courseTally + 1                                     NEXT"
  },
  {
    "title": "CAPE Computer Science - Part 370",
    "content": "1                                     NEXT            MASTERCOURSE_RECORD                         END WHILE   Print CourseTally, highestNum, maxCourseID MF < > EOFnoRegCourseTallyCourseIDnoRegistered>  highestNum  highestNummaxCourseIDDisplay 00-0- 151Math01 52Eng03 253Span01 [5 marks] - 8 - 02115032/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT"
  },
  {
    "title": "CAPE Computer Science - Part 371",
    "content": "THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA          Documentation   7. Draw the hierarchy chart for the program given that the main module for the program will display the   menu as shown below.  Assume that each menu option will make a call to a function.                              COURSE REGISTRATION    1.  View courses    2.  Register for a course    3.  De-register                           4.                          Exit"
  },
  {
    "title": "CAPE Computer Science - Part 372",
    "content": "Exit                                [6 marks] Total 60 marks  END OF TEST IF YOU FINISH BEFORE TIME IS CALLED, CHECK YOUR WORK ON THIS TEST. - 9 - 02115032/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA          EXTRA SPACE If you use this extra page, you MUST write the question number clearly in the"
  },
  {
    "title": "CAPE Computer Science - Part 373",
    "content": "you MUST write the question number clearly in the box provided. Question No.   ........................................................................................................................................................................... ........................................................................................................................................................................... ............................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 374",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 375",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 376",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 377",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 378",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 379",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 380",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 381",
    "content": "............................................................................................ - 10 - 021115032/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA          EXTRA SPACE If you use this extra page, you MUST write the question number clearly in the box provided. Question No.   ................................."
  },
  {
    "title": "CAPE Computer Science - Part 382",
    "content": ". Question No.   ........................................................................................................................................................................... ........................................................................................................................................................................... ..........................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 383",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 384",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 385",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 386",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 387",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 388",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 389",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 390",
    "content": ".............................. DO  NOT WRITE  ON THIS  PAGE CANDIDATE’S   RECEIPT INSTRUCTIONS TO CANDIDATE: 1. Fill in all the information requested clearly in capital letters.  TEST CODE:      SUBJECT:                 PROFICIENCY:                 REGISTRATION NUMBER:     FULL NAME:  ________________________________________________________________  (BLOCK LETTERS)  Signature:  ____________________________________________________________________  Date:  __________________________________________"
  },
  {
    "title": "CAPE Computer Science - Part 391",
    "content": "Date:  ________________________________________________________________________ 2. Ensure that this slip is detached by the Supervisor or Invigilator and given to you when you  hand in this booklet. 3. Keep it in a safe place until you have received your results. INSTRUCTION TO SUPERVISOR/INVIGILATOR: Sign the declaration below, detach this slip and hand it to the candidate as his/her receipt for this booklet  collected by you. I hereby acknowledge receipt of the candidate’s booklet for the exa"
  },
  {
    "title": "CAPE Computer Science - Part 392",
    "content": "dge receipt of the candidate’s booklet for the examination stated above.  Signature:  _____________________________                  Supervisor/Invigilator  Date:  _________________________________      0     2     1     1     5     0     3     2 INFORMATION TECHNOLOGY – SPEC ADVANCED   02115032/KMS/CAPE SPEC/2021       CARIBBEAN EXAMINATIONS COUNCIL        ADVANCED PROFICIENCY EXAMINATION        COMPUTER SCIENCE        UNIT 1 - PAPER 032    KEYS AND MARK SCHEME    SPECIMEN PAPER 2021"
  },
  {
    "title": "CAPE Computer Science - Part 393",
    "content": "AND MARK SCHEME    SPECIMEN PAPER 2021               02115032 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 032  KEY AND MARK SCHEME      CASE STUDY    A  local  community  college  wishes  to  automate  the  course  registration  process whereby students register to undertake courses that are a part  of their degree programme. The college is seeking your assistance to  develop  a  user-friendly  course  registration  system  that  can  allow  students to register up to three courses.    T"
  },
  {
    "title": "CAPE Computer Science - Part 394",
    "content": "ow  students to register up to three courses.    The system will present a menu from which the student would be able to  view all courses, register for a course or de-register. To register, the  student should select the corresponding menu option and enter the course  ID.  The system would use the master course file to show details such  as  course  ID,  course  name,  lecturer,  number  of  students  already  registered and maximum number of participants allowed to register. If a  space  is  av"
  },
  {
    "title": "CAPE Computer Science - Part 395",
    "content": "ticipants allowed to register. If a  space  is  available,  the  student  should  input  his/her  student  identification number to register for the selected course. The relevant  system files would then be updated and a message sent to the student  indicating whether the course registration was successful.                             02115032 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 032  KEY AND MARK SCHEME      Identification of Specification [8 marks]        1.  Describe FIVE functi"
  },
  {
    "title": "CAPE Computer Science - Part 396",
    "content": "fication [8 marks]        1.  Describe FIVE functional requirements of the Case Study.      ● Store student successful course registration  ● Keep track of the students already registered   ● System should send messages to students about  registration status (e.g. successfully registered or   not)  ● System can retrieve information on who is the  lecturer/teacher of course and other details as  determined  ● Allow students to register or deregister or view courses  ● The system should show numbe"
  },
  {
    "title": "CAPE Computer Science - Part 397",
    "content": "er or view courses  ● The system should show number of students already  registered.   (Any 5 * 1)  [5 marks]    2. List THREE non-functional requirements of the Case Study:   ● system will be user-friendly,   ● provide real-time updates  ● any other appropriate response backup/recovery system/        availability of system     (Any 3 * 1)  [3 marks]              02115032 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 032  KEY AND MARK SCHEME      Design [20 marks]      3. (a) Write the stru"
  },
  {
    "title": "CAPE Computer Science - Part 398",
    "content": "Design [20 marks]      3. (a) Write the structure of the Master Course text file. Include         all the fields.   Master Course file (course ID, course name, lecturer,  maximum number of participants, number of candidates  registered)       3 marks for if Structure name and 4 or more fields included     2 marks for no Structure name and 4 or more fields included  1 mark for Structure name and less than 3 fields included    [3 marks]       (b)  Show sample contents of the master Course te"
  },
  {
    "title": "CAPE Computer Science - Part 399",
    "content": "(b)  Show sample contents of the master Course text file using          THREE records.                 Using the candidates answer in part (a). NO penalty for formatting.  1 mark for 3 records    1 mark for correctly populating records      [2 marks]    ADM001 Mathematics  Mr. Constantine 25 10  CHEM01 Chemistry           Ms. Forrester            15 5   BUS101 Business Basics Mr. Roger            45 25    02115032 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 032  KEY AND MARK SCHEME"
  },
  {
    "title": "CAPE Computer Science - Part 400",
    "content": "NCE  UNIT 1 – Paper 032  KEY AND MARK SCHEME      4. Design an algorithm (flowchart/pseudocode that would provide a  solution for the function registerCourse, which registers a  student for a course       Sample pseudocode given in mark scheme      Pseudocode  begin  enter courseID.   // check master course file and return course information  Call function findCourse.  Output course information  //Check for available space in course  If course space < maximum // 1 mark for IF-THEN-ELSE  Then  Up"
  },
  {
    "title": "CAPE Computer Science - Part 401",
    "content": "ace < maximum // 1 mark for IF-THEN-ELSE  Then  UpdateCourse (to enter StudentID to course)   // update number of students registered for course)   updateMasterFile   Update numberOfCourses   Output ‘successful registration’  Else    Output ‘course full’  If numberOfCourses = 3 // 1 mark for IF-THEN-ELSE  Then output message  Else    loop to enter courseID search for another course  end                                  02115032 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 032  KEY AND MARK"
  },
  {
    "title": "CAPE Computer Science - Part 402",
    "content": "COMPUTER SCIENCE  UNIT 1 – Paper 032  KEY AND MARK SCHEME        Input CourseID  1  findCourse – use CourseID to check the  master course file and   1  output course course information 1  If available space,  2 (1 IF-THEN-ELSE; 1 condition)     (enter studentID)   Then updateCourse (course ID and         studentID to update the course file)  1  updateMasterFile - update number of  students registered for course in  master course file.   1  Update numberOfCourses  1  Display message on successful"
  },
  {
    "title": "CAPE Computer Science - Part 403",
    "content": "numberOfCourses  1  Display message on successful  registration.   1  Else If course is full  2 (1 IF-THEN-ELSE; 1 condition)        Then display ‘class full’ 1  Loop to register for a maximum of three  courses.   2  Correct indentation or correct symbols  1   15    (15 marks)  02115032 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 032  KEY AND MARK SCHEME      Coding and Program Documentation (21 marks)     5. Write and document the C code for the algorithm in Question 4.  Assume all vari"
  },
  {
    "title": "CAPE Computer Science - Part 404",
    "content": "for the algorithm in Question 4.  Assume all variables are already declared.    FUNCTION registerCourse()  BEGIN  count = 0                                           // initializing  variables   [1 mark]  choice = ”N”  DO                                                      //  for  looping appropriately  (1 mark)  PRINT “Enter course ID to register”     READ courseID                //   reading course ID    [1 mark]   Course = findCourse(courseID)           // call function[1 mark]   noRegiste"
  },
  {
    "title": "CAPE Computer Science - Part 405",
    "content": "ID)           // call function[1 mark]   noRegistered = Course.noRegistered   maxParticipants = Course.maxParticipants  IF noRegistered < maxParticipants THEN      // use of IF  statements (1 mark), condition         [1 mark]           PRINT \"Enter student ID\"          READ studID        // reading student ID   [1 mark]   noRegistered = noRegistered + 1    // increment the  students registered         [1 mark]      count = count + 1          // incrementing  the course  counter  (1 mark)     upd"
  },
  {
    "title": "CAPE Computer Science - Part 406",
    "content": "ncrementing  the course  counter  (1 mark)     updateCourse(courseID, studID)          //   function call  [1 mark]  02115032 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 032  KEY AND MARK SCHEME         updateMasterFile( courseID, noRegistered )    //     function call (1 mark)  PRINT \"Successful Registration for course\",  Course.Name, “- Course ID:”, courseID  // display  successful message     [1 mark]  ELSE        PRINT \"Sorry, course is full\"     // display unsuccessful  message  (1 m"
  },
  {
    "title": "CAPE Computer Science - Part 407",
    "content": "s full\"     // display unsuccessful  message  (1 mark)    END IF  PRINT “ Would you like to register for another course (Y/N)”  READ choice  WHILE choice == “Y” AND count < =3            // condition in the  while loop   [1 mark]  PRINT “Number of courses registered: “, count         // displaying  number courses registered   [1 mark]  RETURN    (21 marks)                  02115032 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 032  KEY AND MARK SCHEME      An example of the C Code     void"
  },
  {
    "title": "CAPE Computer Science - Part 408",
    "content": "ARK SCHEME      An example of the C Code     void registerCourse()  {    count = 0;     choice = ‘N’; // or strcpy(choice, \"No”);    do {     printf(\"Enter course ID to register: \");                scanf(\"%s\", courseID);      Course = findCourse(courseID);    noRegistered = Course.noRegistered;   maxParticipants = Course.maxParticipants;                if (noRegistered < maxParticipants)                {                     printf(\"Enter student ID\");             scanf(\"%s\", studID);        noRe"
  },
  {
    "title": "CAPE Computer Science - Part 409",
    "content": "ID\");             scanf(\"%s\", studID);        noRegistered = noRegistered + 1;      count = count + 1;      updateCourse(courseID, studID);       updateMasterFile(courseID, noRegistered);       printf(\"Successful Registration for course %s, %s\",  Course.Name, courseID);           }    else       printf(\"Sorry, course is full\");             printf(“ Would you like to register for another course  (Y/N)”);          scanf(\"%c\", &choice);  02115032 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 0"
  },
  {
    "title": "CAPE Computer Science - Part 410",
    "content": "S/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 032  KEY AND MARK SCHEME        } while (choice == ‘Y’ && count <=3); //or while  (strcmp(choice,“YES”)==0 && count <=3);  printf (“Number of courses registered:  %d\", count);  }    Documentation (3 marks)    2 marks - white space and indentation    1 mark - comments                                         02115032 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 032  KEY AND MARK SCHEME      Trace Table [5 marks]    6. The following code finds"
  },
  {
    "title": "CAPE Computer Science - Part 411",
    "content": "ce Table [5 marks]    6. The following code finds and displays the course with the highest  number of registered students. Complete the trace table. Assume  that the maximum registration of each course is 25 students.    courseID = “ ”  noRegistered= 0  highestNum= 0  courseTally = 0  maxCourseID= “ ”  WHILE MASTERCOURSE <> EOF DO  noRegistered = MASTERCOURSE_RECORD.noRegistered  courseID = MASTERCOURSE_RECORD.courseID  IF noRegistered > highestNum THEN  highestNum = noRegistered  maxCourseID ="
  },
  {
    "title": "CAPE Computer Science - Part 412",
    "content": "um THEN  highestNum = noRegistered  maxCourseID = courseID  END IF  courseTally = courseTally + 1  NEXT MASTERCOURSE_RECORD  END WHILE  Print CourseTally, highestNum, maxCourseID            02115032 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 032  KEY AND MARK SCHEME         MF <>  EOF  noRe g  courseTa lly  Course ID  noRegistered >highestNum  highestNum maxCours eID  Display    0 0    0    T  15 1 Math01  True 15 Math01   T  5 2 Eng13  False     T  25 3 Span01  True 25 Span01   F"
  },
  {
    "title": "CAPE Computer Science - Part 413",
    "content": "alse     T  25 3 Span01  True 25 Span01   F         3,25,Span01     (5 marks - 1 mark each correct row)     (5 marks)   02115032 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 1 – Paper 032  KEY AND MARK SCHEME      Documentation [6 marks]    7 Draw the hierarchy chart for the program given that the main  module for the program will display the menu as shown below.  Assume that each menu option will make a call to a function       COURSE REGISTRATION      1. View courses      2. Register for a course"
  },
  {
    "title": "CAPE Computer Science - Part 414",
    "content": "1. View courses      2. Register for a course      3. De-Register      4. Exit       All parts labelled correctly (5)  Hierarchy correct (1)  [6 marks]    Total 60 marks  TEST CODE 02215010  SPEC 2021/02215010   C A R I B B E A N    E X A M I N A T I O N S    C O U N C I L CARIBBEAN ADVANCED PROFICIENCY EXAMINATION ® COMPUTER SCIENCE SPECIMEN PAPER UNIT 2 – Paper 01 1 hour 30 minutes READ  THE  FOLLOWING  INSTRUCTIONS  CAREFULLY.   1. This test consists of 45 items.  You will have 1 hour and"
  },
  {
    "title": "CAPE Computer Science - Part 415",
    "content": "st consists of 45 items.  You will have 1 hour and 30 minutes to answer them.   2. In addition to this test booklet, you should have an answer sheet.   3. Do not be concerned that the answer sheet provides spaces for more answers than there are items  in this test.   4. Each item in this test has four suggested answers lettered (A), (B), (C), (D).  Read each item  you are about to answer and decide which choice is best.  5. On your answer sheet, find the number which corresponds to your item and"
  },
  {
    "title": "CAPE Computer Science - Part 416",
    "content": "find the number which corresponds to your item and shade the space  having the same letter as the answer you have chosen.  Look at the sample item below.    Sample Item  How many selection lines does an 8 × 1 multiplexer have?                                     Sample Answer  (A) 1 A     B     C     D        (B)       2        (C)       3        (D)       8  The best answer to this item is “3”, so (C) has been shaded.   6. If you want to change your answer, erase it completely before you fill i"
  },
  {
    "title": "CAPE Computer Science - Part 417",
    "content": "your answer, erase it completely before you fill in your new choice.   7. When you are told to begin, turn the page and work as quickly and as carefully as you can.  If  you cannot answer an item, go on to the next one.  You may return to that item later.   8. You may do any rough work in this booklet.   9. Figures are not necessarily drawn to scale. 10. The use of silent, non-programmable calculators is allowed. DO  NOT  TURN  THIS  PAGE  UNTIL  YOU  ARE  TOLD  TO  DO  SO.  Copyright © 2020 Car"
  },
  {
    "title": "CAPE Computer Science - Part 418",
    "content": "YOU  ARE  TOLD  TO  DO  SO.  Copyright © 2020 Caribbean Examinations Council All rights reserved. 02215010/CAPE 2021/SPEC - 2 - GO ON TO THE NEXT PAGE 02215010/CAPE 2021/SPEC 1.  Which  abstract  structure  would  be   implemented  by  the  system  to  handle  print   requests from users? (A)       Queue (B)       Array (C)       Stack (D) Linked list 2. An ADT is  (A) the logical properties of data  (B) a combination of data types within  a record (C)  a  combination  of  data  object  and   a"
  },
  {
    "title": "CAPE Computer Science - Part 419",
    "content": "ord (C)  a  combination  of  data  object  and   associated operations (D) a list of variables 3. Which ADT is BEST described as a LIFO  structure? (A)  A variable  (B)  A pointer (C)  A queue (D)  A stack  Item 4 refers to the following diagram. RDSAFCB 4. What will the array above look like after the  first three passes of selection sort? ABCRDSF (A) ABCRFSD (B) ABCDRSF (C) ABCDFRS (D)  Items 5–6 are based on the following one- dimensional array. 154523522153                     0      1"
  },
  {
    "title": "CAPE Computer Science - Part 420",
    "content": "y. 154523522153                     0      1       2       3       4       5 5. How many swaps of distinct numberes are  performed if the array is reordered using a  selection sort process? (A)       0 (B)       2 (C)       3 (D)       4 6. Which of the following numbers maintain  their  original  positions  in  the  array  if  a   selection sort process is used to reorder the  array? (A)  All  of  the  numbers  are  moved  to   different positions  (B) 15, 23, 53  (C)  15 alone  (D)  15, 53  7."
  },
  {
    "title": "CAPE Computer Science - Part 421",
    "content": "ns  (B) 15, 23, 53  (C)  15 alone  (D)  15, 53  7. Which of the following combinations is a  stack operation? (A) Enqueue; push (B) Dequeue; pop  (C) Pop; enqueue (D) Push; pop - 3 - GO ON TO THE NEXT PAGE 02215010/CAPE 2021/SPEC  Item 8  refers  to  the  statements  about  the   following array.    8 9 4 5 6 9  2     I.  The  binary  search  cannot  be   peformed  on  this  array  since   there are duplicate values.   II.  Eight  would  be  found  after  one   comparison  using  the  binary   s"
  },
  {
    "title": "CAPE Computer Science - Part 422",
    "content": "d  after  one   comparison  using  the  binary   search. III.  The  binary  search  cannot  be   performed  since  the  list  is   unordered. 8.  Which of the statements is/are true? (A) I only (B) II only (C) III only (D) I and III only 9. Which of the following is true for BOTH  a linear search and a binary search? (A) On average they search half the list. (B)  In  the  worst-case  scenario  they   search the entire list. (C) They can be used for searching an  ordered list. (D)  They  require"
  },
  {
    "title": "CAPE Computer Science - Part 423",
    "content": "or searching an  ordered list. (D)  They  require  that  the  list  be   ordered. 10. The binary search is BEST described as  (A) a search of only a section of a given  list of elements  (B) a search which takes a divide and  conquer approach (C) being very fast when using a very  short list (D) a search of un-order elements  Items 11–12 refer to the following diagram.   NULL 11. What is the abstract data type depicted above? (A) Stack (B) Queue (C) Enum (D) Linked list 12 .  Which  of  the  fol"
  },
  {
    "title": "CAPE Computer Science - Part 424",
    "content": "(C) Enum (D) Linked list 12 .  Which  of  the  following  operations  is   associated with the ADT above? (A) Insert (B) Enqueue (C) Dequeue (D) Pop 13 . A  circular  queue  is  implemented  with   pointer front and rear.  Assuming that the  locations  range  from  1  to  4,  what  would   the  queue  look  like  after  the  following   operations? 1. Insert job 1 2. Insert job 2 3. Insert job 3 4. Print job 1 5. Insert job 4 6. Print job 2 7. Insert job 5   - 4 - GO ON TO THE NEXT PAGE 02215010"
  },
  {
    "title": "CAPE Computer Science - Part 425",
    "content": "sert job 5   - 4 - GO ON TO THE NEXT PAGE 02215010/CAPE 2021/SPEC 14. A stack is implemented using an array.  A  pointer top indicates the position at the top  of the stack.  What would be the state of  the stack after the following operations?  I. Initialize stack  II. Push (Elaine)  III. Push (Howard)  IV. Pop stack  V. Push (Joanne)  VI. Push (Tom)  VII. Pop stack   15.  A  queue  is  implemented  using  a  one- dimensional array.  Which of the following  BEST  describes  the  dequeue  operat"
  },
  {
    "title": "CAPE Computer Science - Part 426",
    "content": "e following  BEST  describes  the  dequeue  operation   performed using the array? (A) Check that the queue is empty then  return the first element in the  array  and  shift  the  remaining   elements up one place. (B) Return the first element in the array  and shift the remaining elements  up one place. (C) Check that the queue is not empty,  then return the first element in  the array and shift the remaining  elements up one place. (D) Return the last element in the array. Elaine Howard Joanne"
  },
  {
    "title": "CAPE Computer Science - Part 427",
    "content": "he last element in the array. Elaine Howard Joanne TomTop (A) Elaine Howard Joanne Top (B) Elaine Joanne Tom Top (C) Elaine Joanne Top (D) - 5 - GO ON TO THE NEXT PAGE 02215010/CAPE 2021/SPEC  Item 16 refers to the following scenario.  A doctor is assigned to one or more than  one patient on a specific ward.  Attributes  of a patient include his/her patient ID and  information  on  his/her  condition.    The   ward also has an ID. 16.  Which  of  the  ER  diagrams  below  BEST   illustrates this"
  },
  {
    "title": "CAPE Computer Science - Part 428",
    "content": "the  ER  diagrams  below  BEST   illustrates this information? 17. Which of the following is NOT an attribute  of a well-engineered software product?  (A) Efficiency        (B)       Creativity        (C)       Maintainability  (D) Appropriate documentation  18. The MAIN goal of component testing is to (A) expose faults in the components (B) demonstrate that the system meets  its requirements (C) increase the supplier’s confidence  that the system meets requirements (D) test how one component i"
  },
  {
    "title": "CAPE Computer Science - Part 429",
    "content": "em meets requirements (D) test how one component interacts  with others in the system 19 . Software evolution refers to (A) improving software by addressing  bugs (B) developing new software from an  existing system (C)  automatically  adapting  software   to  changing  customer  needs  and   wants (D)  modifying  software  to  satisfy   changes  in  customer  and  market   requirements 20. Software that is NOT associated with the  wasting  of  resources  is  said  to  have  the   property of  ("
  },
  {
    "title": "CAPE Computer Science - Part 430",
    "content": "esources  is  said  to  have  the   property of  (A)       reliability (B) efficiency (C)       dependability (D)       acceptability - 6 - GO ON TO THE NEXT PAGE 02215010/CAPE 2021/SPEC 21.  Which  of  the  following  is  TRUE  of   the  waterfall  approach  to  the  software   development process?       I.  Cascades  from  one  phase  of  the   process to another.   II. The following stage should not start  before the previous has finished.   III.  This  approach  caters  to  changing   user r"
  },
  {
    "title": "CAPE Computer Science - Part 431",
    "content": "II.  This  approach  caters  to  changing   user requirements.  (A) I and II only  (B) I and III only  (C) II and III only  (D) I, II and III   22 . Which of the following is NOT a phase in the  software development life cycle?  (A)  Design   (B)  Analysis         (C)        Prototyping                 (D)        Implementation         23. Which of the following are examples of non- functional requirements?    I.  Platform constraints   II. Reliability   III. Fault tolerance    (A) I and II only"
  },
  {
    "title": "CAPE Computer Science - Part 432",
    "content": "bility   III. Fault tolerance    (A) I and II only  (B) I and III only  (C) II and III only  (D) I, II and III   24. What are the TWO phases of the require- ments engineering process (software speci- fication)? (A)  Feasibility  study  and  user   and  systems  requirements   documentation (B) Feasbility study and production of  interface specification (C)  Interface  specification  and  data   structure specification (D) Sub-system testing and maintenance 25. A feasibility study (A)  states  a"
  },
  {
    "title": "CAPE Computer Science - Part 433",
    "content": "aintenance 25. A feasibility study (A)  states  a  cost  effective  means  of   developing the proposed system (B)  discusses  whether  the  proposed   system will be cost effective (C)  is  usually  a  lengthy  and  costly   process (D) outlines how current software and  hardware can be used to develop  the proposed system - 7 - GO ON TO THE NEXT PAGE 02215010/CAPE 2021/SPEC             Item            26 refers to the following data flow diagram which utilizes the following symbols. 26. Which"
  },
  {
    "title": "CAPE Computer Science - Part 434",
    "content": "m which utilizes the following symbols. 26. Which statement BEST describes the processing represented by the diagram? (A) Create Invoice uses information from data store Customer Records and sends an Invoice  to Customer, and updates Product Records. (B)       A       Customer requests an Invoice that is created by Create Invoice which in turn updates  Customer Records and Product Records. (C) Create Invoice uses information from Customer Records and Product Records to produce  and send an Invoi"
  },
  {
    "title": "CAPE Computer Science - Part 435",
    "content": "and Product Records to produce  and send an Invoice to Customer. (D) Create Invoice updates Customer Records and Product Records and sends an Invoice to  Customer. 27.  Which  of  the  following  system  models   depict data transformation as data is pro- cessed? (A)   Entity–relationship diagrams  (B)   Data flow diagrams (C)   Data dictionaries (D)   Class diagrams 28.  Which  of  the  following  design  processes   refers to the identification of subsystems  and their relationships?  (A)  Da"
  },
  {
    "title": "CAPE Computer Science - Part 436",
    "content": "n of subsystems  and their relationships?  (A)  Data path   (B)  Component   (C)   Architectural    (D)  Processor structure - 8 - GO ON TO THE NEXT PAGE 02215010/CAPE 2021/SPEC 29.  Which  of  the  following  might  NOT  be   output as a result of using a CASE tool?  (A)  Prototype   (B)  Feasibility study   (C) Program definition   (D)  Cost/benefit analysis  30. When the individual modules of a software  system were tested, no errors were discovered.   However, when all the modules were merge"
  },
  {
    "title": "CAPE Computer Science - Part 437",
    "content": "overed.   However, when all the modules were merged  and tested, the system failed.  Which of the following would MOST likely  help in identifying the failure? (A) Acceptance testing (B) Integration testing (C) Testing using live data (D) Testing individual modules 31. Which transmission media is BEST suited  for  the  transfer  of  large  volumes  of  data   over continents?  (A)  Fibre optic cables   (B)  Coaxial cable   (C)  Microwave   (D)  Satellite  32. What  kind  of  information  is  con"
  },
  {
    "title": "CAPE Computer Science - Part 438",
    "content": "atellite  32. What  kind  of  information  is  contained  in  a   process control block?    I. Amount of CPU time used   II. Estimated time to complete  III. Job priority  (A) I and II only  (B) I and III only  (C) II and III only  (D) I, II and III   33. Which of the following statements is true  about files and folders?   I. Folders may contain zero or more  files.   II. Files within folders must be related. III. File names within a folder must be  unique.  (A) I and II only  (B) I and III onl"
  },
  {
    "title": "CAPE Computer Science - Part 439",
    "content": "be  unique.  (A) I and II only  (B) I and III only  (C) II and III only  (D) I, II and III   34. Which  of  the  following  is  NOT  a  process   state? (A)  Completed (B)  Running (C)  Blocked  (D)  Ready - 9 - GO ON TO THE NEXT PAGE 02215010/CAPE 2021/SPEC 35. Which of the following is NOT a method of  securing files being transmitted on a network?        (A)       Compression        (B)       Encryption        (C)       Firewall        (D)       Password             Item            36 refers"
  },
  {
    "title": "CAPE Computer Science - Part 440",
    "content": "Password             Item            36 refers to the following statements.   I. Smaller computer  systems  communicate  with  one  another   through the host. II.  A  signal  is  broadcast  to  all  the   nodes  but  only  the  destination   node responds to the signal. III.  A  disadvantage  of  this  topology   is,  if  connection  is  broken,  the   entire network stops working. 36 . To which network topologies does EACH  of the above statements refer?  (A) I–STAR   II–RING   III–BUS  (B"
  },
  {
    "title": "CAPE Computer Science - Part 441",
    "content": "tements refer?  (A) I–STAR   II–RING   III–BUS  (B) I–RING   II –STAR  III–BUS  (C) I–RING   II –BUS    III–STAR        (D)       I       –STAR II –BUS   III–RING 37. Which layer of the OS model handles data  transmission between host computers?  (A)  Network layer   (B)  Transport layer   (C)  Application layer  (D)  Presentation layer  38. Which of the following is the BEST reason  for compressing a file? (A) To encrypt the file to protect its  contents (B) To make the file compatible with  ot"
  },
  {
    "title": "CAPE Computer Science - Part 442",
    "content": "contents (B) To make the file compatible with  other applications and hardware (C) To increase transmission time over  a network (D)  To  occupy  less  space  on  storage   media 39.  Which  of  the  following  user  interfaces   allows  the  user  to  navigate  the  interface,   making little use of the keyboard? (A) Menu-driven interface (B) Graphical user interface  (C) Objective driven interface (D) Command-driven interface 40.  Which  protocol  is  used  by  web  pages  to   transmit infor"
  },
  {
    "title": "CAPE Computer Science - Part 443",
    "content": "col  is  used  by  web  pages  to   transmit information? (A)       HTTP (B)       HTML (C)       FTP (D)       TCP/IP - 10 - 02215010/CAPE 2021/SPEC    Items 41–42 refer to the following diagram. X Y 41. The diagram above is an example of a  (A) star topology   (B)  hybrid topology   (C)  bus topology  (D)  FDDI  42.  Identify  the  items  labelled  X  and  Y   respectively.  (A) Server and workstation   (B) Workstation and node   (C) Server and hub   (D) Hub and node 43. Which of the following"
  },
  {
    "title": "CAPE Computer Science - Part 444",
    "content": "hub   (D) Hub and node 43. Which of the following correctly represents  the mapping relationship between TCP/IP and  the OSI model?  (A) Ethernet, network layer  (B) Ethernet, physical layer  (C) TCP, presentation layer  (D) TCP, session layer  44.  Which  of  the  following  systems  processes   data  received  and  produces  immediate   results? (A)  Batch processing (B)  Offline processing (C)  Centralized processing (D)  Real-time processing 45. A running process initiates an input request"
  },
  {
    "title": "CAPE Computer Science - Part 445",
    "content": "45. A running process initiates an input request  to get data from the keyboard.  Which of the  following state transitions will take place  when the data is made available? (A) Ready to running (B) Running to ready (C) Blocked to ready  (D) Blocked to running END OF TEST IF YOU FINISH BEFORE TIME IS CALLED, CHECK YOUR WORK ON THIS TEST. DO  NOT WRITE  ON THIS  PAGE DO  NOT WRITE  ON THIS  PAGE DO  NOT WRITE  ON THIS  PAGE CANDIDATE’S   RECEIPT INSTRUCTIONS TO CANDIDATE: 1. Fill in all the info"
  },
  {
    "title": "CAPE Computer Science - Part 446",
    "content": "INSTRUCTIONS TO CANDIDATE: 1. Fill in all the information requested clearly in capital letters.  TEST CODE:   02115010    SUBJECT:               COMPUTER SCIENCE − UNIT 1 − Paper 01         PROFICIENCY:                    ADVANCED     REGISTRATION NUMBER:     FULL NAME:  ________________________________________________________________  (BLOCK LETTERS)  Signature:  ____________________________________________________________________  Date:  ________________________________________________________"
  },
  {
    "title": "CAPE Computer Science - Part 447",
    "content": "__________________________________________________________________ 2. Ensure that this slip is detached by the Supervisor or Invigilator and given to you when you  hand in this booklet. 3. Keep it in a safe place until you have received your results. INSTRUCTION TO SUPERVISOR/INVIGILATOR: Sign the declaration below, detach this slip and hand it to the candidate as his/her receipt for this booklet  collected by you. I hereby acknowledge receipt of the candidate’s booklet for the examination state"
  },
  {
    "title": "CAPE Computer Science - Part 448",
    "content": "the candidate’s booklet for the examination stated above.  Signature:  _____________________________                  Supervisor/Invigilator  Date:  _________________________________ C A R I B B E A N  E X A M I N A T I O N S  C O U N C I L    SECONCARY EDUCATION CERTIFICATE  EXAMINATION    CAPE COMPUTER SCIENCE UNIT 2    SPECIMEN PAPER 2021    Item  No.  Key Syllabus  Reference  Module     Item  No.  Key Syllabus  Reference  Module  1  A 1.2  1   31  D 3.4  3  2  C 1.1  1   32  C 3.3  3  3  D"
  },
  {
    "title": "CAPE Computer Science - Part 449",
    "content": "31  D 3.4  3  2  C 1.1  1   32  C 3.3  3  3  D 1.2  1   33  B 3.3  3  4  B 1.6  1   34  A 3.3  3  5  C 1.6  1   35  A 3.3  3  6  B 1.6  1   36  D 3.4  3  7  D 1.3  1   37  B 3.4  3  8  C 1.6  1   38  D 3.3  3  9  C 1.6  1   39  B 3.3  3  10  B 1.6  1   40  A 3.4  3  11  D 1.2  1   41  A 3.4  3  12  A 1.2  1   42  D 3.4  3  13  D 1.3  1   43  B 3.4  3  14  D 1.3  1   44  D 3.2  3  15  C 1.3  1   45  C 3.3  3  16  C 2.5  2        17  B 2.2  2        18  A 2.7  2        19  C 2.3  2        20  B"
  },
  {
    "title": "CAPE Computer Science - Part 450",
    "content": "18  A 2.7  2        19  C 2.3  2        20  B 2.2  2        21  A 2.3  2        22  C 2.3  2        23  D 2.4  2        24  A 2.2  2        25  B 2.4  2        26  C 2.4  2        27  B 2.4  2        28  C 2.5  2        29  A 2.4  2        30  B 2.7  2          Module 1 – DATA STRUCTURES  Module 2 – SOFTWARE ENGINEERING  Module 3 – OPERATING SYSTEMS, COMPUTER NETWORKS AND ENTERPRISE SYSTEMS  TEST CODE 02215020 SPEC 2021/02215020   C A R I B B E A N      E X A M I N A T I O N S      C O U N"
  },
  {
    "title": "CAPE Computer Science - Part 451",
    "content": "B E A N      E X A M I N A T I O N S      C O U N C I L CARIBBEAN ADVANCED PROFICIENCY EXAMINATION ® COMPUTER SCIENCE SPECIMEN PAPER FUNDAMENTALS OF COMPUTER SCIENCE UNIT 2 – Paper 02 2 hours 30 minutes READ THE FOLLOWING INSTRUCTIONS CAREFULLY. 1. This paper consists of SIX questions.  Answer ALL questions. 2. Write your answers in the spaces provided in this booklet. 3. Do NOT write in the margins.  4. If you need to rewrite any answer and there is not enough space to do so on the  original  p"
  },
  {
    "title": "CAPE Computer Science - Part 452",
    "content": "e is not enough space to do so on the  original  page,  you  must  use  the  extra  lined  page(s)  provided  at  the  back  of  this   booklet.  Remember to draw a line through your original answer. 5. If you use the extra page(s) you MUST write the question number clearly in  the box provided at the top of the extra page(s) and, where relevant, include  the question part beside the answer.   DO  NOT  TURN  THIS  PAGE  UNTIL  YOU  ARE  TOLD  TO  DO  SO.  Copyright © 2020 Caribbean Examinations"
  },
  {
    "title": "CAPE Computer Science - Part 453",
    "content": "DO  SO.  Copyright © 2020 Caribbean Examinations Council All rights reserved. 02215020/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code - 2 - GO ON TO THE NEXT PAGE 02215021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN     THIS    AREA                          DO    NOT    WRITE    IN     THIS    AREA          SECTION A DATA STRUCTURES Answer BOTH questions. 1.  (a) Explain how a stack A"
  },
  {
    "title": "CAPE Computer Science - Part 454",
    "content": "swer BOTH questions. 1.  (a) Explain how a stack ADT is implemented.                         .............................................................................................................................................                         ..............................................................................................................................................                         .........................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 455",
    "content": ".....................................................................................................................                         .............................................................................................................................................. [3 marks]    (b) A stack is required to store a set of characters.  Assume that ‘top’ is global.   (i)  Write a code to declare the variables that will be needed by the stack.  Assume that  the stack size is 1000 ch"
  },
  {
    "title": "CAPE Computer Science - Part 456",
    "content": "the stack.  Assume that  the stack size is 1000 characters.                      .................................................................................................................................                   .................................................................................................................................                   ..........................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 457",
    "content": "........................................................                   .................................................................................................................................  [2 marks]                                        (ii) Write the function, using C code, that pushes a character, c, onto the stack.  You  must cater for stack overflow.                      ........................................................................................................"
  },
  {
    "title": "CAPE Computer Science - Part 458",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 459",
    "content": ".....................................................................                   .................................................................................................................................                     .................................................................................................................................  [4 marks] - 3 - GO ON TO THE NEXT PAGE 02215021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN"
  },
  {
    "title": "CAPE Computer Science - Part 460",
    "content": "*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA            (iii)  Write the function, using C code, that pops a character from the stack.  You must cater  for stack underflow.  .................................................................................................................................... .........................................."
  },
  {
    "title": "CAPE Computer Science - Part 461",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 462",
    "content": "......................................................................................... .................................................................................................................................... .................................................................................................................................... .................................................................................................................................... [6 marks]"
  },
  {
    "title": "CAPE Computer Science - Part 463",
    "content": "...................................... [6 marks]  Total 15 marks - 4 - GO ON TO THE NEXT PAGE 02215021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA          2.  (a)  The  following  bubbleSort()  function  implements  the  bubble  sort  algorithm  on  an  array  of   integers.   void bubbleSort (int a[ ], int numIt"
  },
  {
    "title": "CAPE Computer Science - Part 464",
    "content": "integers.   void bubbleSort (int a[ ], int numItems)     {                                                                      int             i,             j,             temp;                       for (i=0; i<numItems−1; i++) {                                  for (j=0;  j<numItems−i−1; j++)  {                                               if (a [j]  > a [j+1])     {                                                            temp = a [j] ;"
  },
  {
    "title": "CAPE Computer Science - Part 465",
    "content": "a [j] = a [j+1];                                                            a [j+1] = temp;                                                                       }                                  }                                                                       }                                                     }     (i) Explain the purpose of the outer ‘for’ loop.  ............................................................."
  },
  {
    "title": "CAPE Computer Science - Part 466",
    "content": "......................................................................................................................... .................................................................................................................................... ...................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 467",
    "content": "[2 marks]   (ii) Explain carefully the process that occurs in the inner ‘for’ loop. .................................................................................................................................... .................................................................................................................................... ...................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 468",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 469",
    "content": "........................................................................... [3 marks] - 5 - GO ON TO THE NEXT PAGE 02215021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN     THIS    AREA                          DO    NOT    WRITE    IN     THIS    AREA             (iii)  State why the upper limit for j in the inner ‘for’ loop is (numItems−i−1) and not  (numItems−1).    .........................."
  },
  {
    "title": "CAPE Computer Science - Part 470",
    "content": "d not  (numItems−1).    .................................................................................................................................... .................................................................................................................................... [1 mark]           (b) Write C code which performs a linear search on an array called ‘num’ containing       100 elements. Your code must check if the key is present by accepting an integer key     ‘key’ from t"
  },
  {
    "title": "CAPE Computer Science - Part 471",
    "content": "esent by accepting an integer key     ‘key’ from the user.                            .............................................................................................................................................                         ..............................................................................................................................................                         ................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 472",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 473",
    "content": "..............................................................................................................................................                         .............................................................................................................................................                         .............................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 474",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 475",
    "content": "............................................................................................                         ..............................................................................................................................................  [9 marks] Total 15 marks - 6 - GO ON TO THE NEXT PAGE 02215021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN     THIS    AREA"
  },
  {
    "title": "CAPE Computer Science - Part 476",
    "content": "NOT    WRITE    IN     THIS    AREA                          DO    NOT    WRITE    IN     THIS    AREA          SECTION B SOFTWARE ENGINEERING Answer BOTH questions 3. (a)  State  ONE  advantage  and  ONE  disadvantage  of  the  evolutionary  approach  to  soft- ware development.                          ..............................................................................................................................................                         ........................."
  },
  {
    "title": "CAPE Computer Science - Part 477",
    "content": "..............................................................................................................................................                         ..............................................................................................................................................                                     ................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 478",
    "content": "............................................................... [2 marks]                          - 7 - GO ON TO THE NEXT PAGE 02215021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA          (b)   A   company   receives   an   order   from   customers   and   an   acknowledgement   of   receipt   of    the    order"
  },
  {
    "title": "CAPE Computer Science - Part 479",
    "content": "cknowledgement   of   receipt   of    the    order  is  sent  to  the  customer.  A  check  is  then  made  for  the  availability  of  the  items  or- dered.  If  there  are  items  that  are  not  in  stock,  the  customer  is  informed  and  given  the  oppor- tunity  to  cancel.  If  the  order  is  not  cancelled,  the  order  is  processed  for  the  items  that  are  in   stock.  An  internal  order  form  is  generated  and  used  for  processing  payment  and  an  invoice   is  prepared"
  },
  {
    "title": "CAPE Computer Science - Part 480",
    "content": "ocessing  payment  and  an  invoice   is  prepared  and  sent  to  the  customer. The  customer’s  payment  is  received,  verified  and  ac- knowledged  and  a  receipt  is  generated  for  the  customer,  after  which  the  items  delivered.   Draw  a  level  one  diagram  DFD  which  demonstrates  the  operations  taking  place  in  the  Order   Processing System.  [13 marks] Total 15 marks - 8 - GO ON TO THE NEXT PAGE 02215021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT"
  },
  {
    "title": "CAPE Computer Science - Part 481",
    "content": "‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA          4. (a)  State THREE important considerations when conducting a feasibility study to develop    an application.                          ............................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 482",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 483",
    "content": "..................................................................................................................                         ..............................................................................................................................................                         .............................................................................................................................................. [3 marks]   - 9 - GO ON TO THE NEXT PAGE 02215021/C"
  },
  {
    "title": "CAPE Computer Science - Part 484",
    "content": "3 marks]   - 9 - GO ON TO THE NEXT PAGE 02215021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA           (b) A certain university has a number of colleges.  Each college has one or more depart- ments.  A lecturer is hired by one or more departments.  A department can teach many  courses and a course can be taught by"
  },
  {
    "title": "CAPE Computer Science - Part 485",
    "content": "teach many  courses and a course can be taught by one or more lecturers.  The following informa- tion is stored on a course: code (primary key), name, credit hours.      Draw an entity–relationship (ER) model for the scenario above.                                                     [12 marks] Total 15 marks - 10 - GO ON TO THE NEXT PAGE 02215021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN"
  },
  {
    "title": "CAPE Computer Science - Part 486",
    "content": "DO    NOT    WRITE    IN     THIS    AREA                          DO    NOT    WRITE    IN     THIS    AREA          SECTION C OPERATING SYSTEMS AND COMPUTER NETWORKS Answer BOTH questions.   5. (a) Batch systems, multi-programming systems, and multi-user systems were significant  developments in the history of operating systems.  Briefly describe any TWO types of the  preceding operating systems.                         ..................................................."
  },
  {
    "title": "CAPE Computer Science - Part 487",
    "content": ".............................................................................................................................................                         ..............................................................................................................................................                                     .............................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 488",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 489",
    "content": "........................................................................................                                     ..............................................................................................................................................                                     .............................................................................................................................................. [4 marks]  (b) A user is running a game on a computer"
  },
  {
    "title": "CAPE Computer Science - Part 490",
    "content": "marks]  (b) A user is running a game on a computer.  Indicate what situation would cause the game process  to move from    (i) ready to running      (ii) running to blocked.                                       ..............................................................................................................................................                         ........................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 491",
    "content": ".......................................................................                         ..............................................................................................................................................                         ..............................................................................................................................................                                     .........................................................."
  },
  {
    "title": "CAPE Computer Science - Part 492",
    "content": "......................................................................................................................................                                     .............................................................................................................................................. [4 marks] - 11 - GO ON TO THE NEXT PAGE 02215021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WR"
  },
  {
    "title": "CAPE Computer Science - Part 493",
    "content": "S    AREA                          DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA           (c) A user is playing a game that accesses a small file on a disk to get a high score.  The game  processor reads the file, gets the value and uses it in the process itself.     Briefly explain how an interrupt is handled by the processor above.                         .............................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 494",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 495",
    "content": "............................................................................................................................................. [4 marks]  (d) Briefly explain how the round-robin scheduling algorithm works.                         ..............................................................................................................................................                         ...................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 496",
    "content": "............................................................................................................................                         ..............................................................................................................................................                                     .............................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 497",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 498",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 499",
    "content": ".............................................................................................................................................. [3 marks]                                                                                                                                                             Total            15            marks - 12 - GO ON TO THE NEXT PAGE 02215021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA"
  },
  {
    "title": "CAPE Computer Science - Part 500",
    "content": "r Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA          6. You  are  required  to  design  a  computer  network.  Briefly  explain  why  network  security  and  interconnectivity should be considered when designing this network.                         .................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 501",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 502",
    "content": ".............................................................................................................................................                         ..............................................................................................................................................                                     .............................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 503",
    "content": ".....................................                                     .............................................................................................................................................. [4 marks]  (b) Select any TWO layers of the open system interconnection (OSI) model for computer com- munication and describe the role EACH plays in data communication.                            ......................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 504",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 505",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 506",
    "content": "................................................................                                     .............................................................................................................................................. [4 marks] - 13 - GO ON TO THE NEXT PAGE 02215021/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN     THIS    AREA                          DO    NOT    WRITE"
  },
  {
    "title": "CAPE Computer Science - Part 507",
    "content": "AREA                          DO    NOT    WRITE    IN     THIS    AREA            (c)  The  following  is  a  schema  of  a  database  for  keeping  track  of  Coronavirus  test  results  in  a   given country.                           Patient             (PatientID, FirstName, LastName, Address, DOB)                           PatientTesting             (TestID, PatientID, TestTypeID, TestDate, TestResult)                           TestBatch             (TestTypeID, TestName, Description)"
  },
  {
    "title": "CAPE Computer Science - Part 508",
    "content": "(TestTypeID, TestName, Description)   Using the schema above, write an SQL query that return the names and address of all positive  cases, where TestResult contains the values ‘Positive’ or ‘Negative’.                         ..............................................................................................................................................                                     ..................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 509",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 510",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 511",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 512",
    "content": "..............................................................................................................................................                                     ..............................................................................................................................................                         .............................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 513",
    "content": ".......................................                         ..............................................................................................................................................                                     ..............................................................................................................................................                                     .............................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 514",
    "content": "..................................................................................................................                         .............................................................................................................................................. [7 marks]     - 14 - ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN"
  },
  {
    "title": "CAPE Computer Science - Part 515",
    "content": "DO    NOT    WRITE    IN    THIS    AREA          02215020/CAPE 2021/SPEC  (d) With the aid of a diagram, explain the role of a hub in a local area network.                           ..............................................................................................................................................                         ............................................................................................................................"
  },
  {
    "title": "CAPE Computer Science - Part 516",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 517",
    "content": ".............................................................................................................................................. [3 marks] Total 15 marks END OF TEST IF YOU FINISH BEFORE TIME IS CALLED, CHECK YOUR WORK ON THIS TEST. - 15 - ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA          02215020/CAPE 2021/SPE"
  },
  {
    "title": "CAPE Computer Science - Part 518",
    "content": "IN    THIS    AREA          02215020/CAPE 2021/SPEC EXTRA SPACE If you use this extra page, you MUST write the question number clearly in the box provided. Question No.   ........................................................................................................................................................................... ............................................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 519",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 520",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 521",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 522",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 523",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 524",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 525",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 526",
    "content": "............ ........................................................................................................................................................................... - 16 - ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA          02215020/CAPE 2021/SPEC EXTRA SPACE If you use this extra page, you MUST write the qu"
  },
  {
    "title": "CAPE Computer Science - Part 527",
    "content": "If you use this extra page, you MUST write the question number clearly in the box provided. Question No.   ........................................................................................................................................................................... ........................................................................................................................................................................... ................................................"
  },
  {
    "title": "CAPE Computer Science - Part 528",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 529",
    "content": "................................................................... ........................................................................................................................................................................... ...........................................................................................................................................................................  ......................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 530",
    "content": "...................................................................................................................................... ........................................................................................................................................................................... ........................................................................................................................................................................... ....................."
  },
  {
    "title": "CAPE Computer Science - Part 531",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 532",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 533",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 534",
    "content": "....................................................... ........................................................................................................................................................................... ........................................................................................................................................................................... ...................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 535",
    "content": "......................................................................................................................... DO  NOT WRITE  ON THIS  PAGE CANDIDATE’S   RECEIPT INSTRUCTIONS TO CANDIDATE: 1. Fill in all the information requested clearly in capital letters.  TEST CODE:      SUBJECT:                 PROFICIENCY:                 REGISTRATION NUMBER:     FULL NAME:  ________________________________________________________________  (BLOCK LETTERS)  Signature:  ____________________________"
  },
  {
    "title": "CAPE Computer Science - Part 536",
    "content": "LETTERS)  Signature:  ____________________________________________________________________  Date:  ________________________________________________________________________ 2. Ensure that this slip is detached by the Supervisor or Invigilator and given to you when you  hand in this booklet. 3. Keep it in a safe place until you have received your results. INSTRUCTION TO SUPERVISOR/INVIGILATOR: Sign the declaration below, detach this slip and hand it to the candidate as his/her receipt for this boo"
  },
  {
    "title": "CAPE Computer Science - Part 537",
    "content": "t to the candidate as his/her receipt for this booklet  collected by you. I hereby acknowledge receipt of the candidate’s booklet for the examination stated above.  Signature:  _____________________________                  Supervisor/Invigilator  Date:  _________________________________ COMPUTER SCIENCE – UNIT 1 – Paper 02 ADVANCED       0      2      1      1      5      0      2      0       02215020/KMS/CAPE SPEC/2021           CARIBBEAN EXAMINATIONS COUNCIL                    ADVANCED PROFI"
  },
  {
    "title": "CAPE Computer Science - Part 538",
    "content": "INATIONS COUNCIL                    ADVANCED PROFICIENCY EXAMINATION                        COMPUTER SCIENCE    UNIT 2 - PAPER 02    KEYS AND MARK SCHEME    SPECIMEN PAPER 2021            02215020 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 2 – Paper 02  KEY AND MARK SCHEME      2  SECTION A     DATA STRUCTURES     Question 1    Specific Objectives: 1.1, 1.3, 1.4      (a)      An  array  can  be  used  to  store  the  elements (1).    A  top  pointer keeps track of the topmost elements of the stack"
  },
  {
    "title": "CAPE Computer Science - Part 539",
    "content": "r keeps track of the topmost elements of the stack  (1).    When  an  element  is  added,  top  is  incremented  and  when an element is deleted, top is diverted (1).          [3 marks]     (b)  (i)  int top = (Candidates can use top = 0);   (1)      char items [1000];  (1)        [2 marks]       (ii)  void push (char c)  (1)        {       if (top == 999)           printf (“Stack overflow.\\n”);  (1)        else  {              top++;          items [top] = c;  (1)  (1)        }      }   [4 mark"
  },
  {
    "title": "CAPE Computer Science - Part 540",
    "content": "ems [top] = c;  (1)  (1)        }      }   [4 marks]             (iii)   char pop (char items[ ])  (1)      {             char c = ʽ ʽ;  (1)          if (top == -1)  (1)                printf (“Stack empty.\\n”);      else {         c = items [top];  (1)             top --;  (1)        }        return c;  (1)       }  [6 marks]            Total 15 marks  02215020 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 2 – Paper 02  KEY AND MARK SCHEME      3  Question 2    Specific Objectives: 1.6      (a) (i)"
  },
  {
    "title": "CAPE Computer Science - Part 541",
    "content": "estion 2    Specific Objectives: 1.6      (a) (i)  The outer for loop is used to make numitems passes (1)  where each pass will result in one element of the array  being placed in its correct position.(1)                                      [2 marks]   (ii) It  goes  through  the  unsorted  elements  of the  array  starting  from  the  beginning  and  compares  adjacent  elements. (1) If an element on the left is greater than  an element on the right, the elements are swapped using a  temporary"
  },
  {
    "title": "CAPE Computer Science - Part 542",
    "content": "right, the elements are swapped using a  temporary variable. (1)               [3 marks]   (iii)  Each pass of the outer for loop places the one element in  its correct position (starting from the right). So, the  inner for loop only considers the unsorted elements which  go from 0 to numItems-i-1  )                                                 [1 mark]     (b)        int x;  for (x = 0; x < 100; x++)   if (num [x] == key) {    printf(“%d found at location %d”, key, x);    break;   }  if (x ="
  },
  {
    "title": "CAPE Computer Science - Part 543",
    "content": "d at location %d”, key, x);    break;   }  if (x == 100)   printf(“Key Not found\\n”);        For or other repetition used (1)  Repetition limits correct (1)  If statement with key check (2) slight error (1)  Printed correct location where found(2) slight error(1)  Breaking out when found(1)  Printing not found correctly (2)slight error(1)  [9 marks]                Total 15 marks               02215020 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 2 – Paper 02  KEY AND MARK SCHEME      4  SECTION B"
  },
  {
    "title": "CAPE Computer Science - Part 544",
    "content": "Paper 02  KEY AND MARK SCHEME      4  SECTION B     SOFTWARE ENGINEERING     Question 3      Specific Objectives: 2.3, 2.4    (a) Advantage:  Software  can  be  developed  incrementally (1) and  functionality  can  be  made  available  to  end  users  even  though  the entire system is not yet finished (1).  (Any 1)    Disadvantages: Systems are often poorly structured (1).      Continual change tends to corrupt the software structure (1).  (Any 1)  [2 marks]"
  },
  {
    "title": "CAPE Computer Science - Part 545",
    "content": "1)  [2 marks]                                                                    02215020 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 2 – Paper 02  KEY AND MARK SCHEME      5    (b)        Customer Entity:  1 mark   Data Stores:  1 mark   6 Processes:  (1 each 6 marks     Dataflows:    (15-13)   5 marks                     (12-10)    4 marks                     (9-7)    3 marks                     (6-4)     2 marks                     (3-1)     1 mark                 [13 marks]  Total 15 marks  Ord"
  },
  {
    "title": "CAPE Computer Science - Part 546",
    "content": "rk                 [13 marks]  Total 15 marks  Order details  Acknowledgment  Internal Order Form  Process 1  Sales  Order Customer  Dispatch Instructions  Process 2  Warehouse  Invoice details  Invoice  Dispatch Instructions  Dispatch Instrucitons  Process 3  Dispatch  Item amount details  INVENTORY  INVOICE  Invoice  Process 4  Accounts  Financial details  Financial details  02215020 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 2 – Paper 02  KEY AND MARK SCHEME      6  Question 4      Specific Obj"
  },
  {
    "title": "CAPE Computer Science - Part 547",
    "content": "D MARK SCHEME      6  Question 4      Specific Objectives: 2.3, 2.5       (a)  Any THREE considerations: (1 mark for factor).      Technical feasibility: investigating whether the technology  exists to  implement  the  proposed  system  OR  whether  it  is  even practical     Economic feasibility: cost  effectiveness of  the  proposed  system     Legal feasibility:  determines  any  legal  issues  which  may  conflict with its implementation (e.g. protecting data)     Operational feasibility"
  },
  {
    "title": "CAPE Computer Science - Part 548",
    "content": "e.g. protecting data)     Operational feasibility: looks to determine if current work  practices and procedures are adequate for new system    Schedule feasibility: length of time for system to be  developed and implemented.  [3 marks]                                                                                            02215020 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 2 – Paper 02  KEY AND MARK SCHEME      7  (b)"
  },
  {
    "title": "CAPE Computer Science - Part 549",
    "content": "Offers  University  Contains  College  Contains  Department  Hires  Lecturer  Teaches  Course  code  name  credit  hours  02215020 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 2 – Paper 02  KEY AND MARK SCHEME      8  All five entities correctly drawn and labelled: 3 marks       3-4 entities correctly drawn and labelled: 2 marks   1-2 entities correctly drawn and labelled: 1 mark    Attributes of course correctly shown: 1 ma"
  },
  {
    "title": "CAPE Computer Science - Part 550",
    "content": "mark    Attributes of course correctly shown: 1 mark  Primary key of course (code) clearly shown: 1 mark    Five relationships between entities correctly drawn and labelled: 4 marks       Four relationships between entities correctly drawn and labelled:   3 marks   Three relationships between entities correctly drawn and labelled:   2 marks   1-2 relationships between entities correctly drawn and labelled: 1 mark    Correct cardinalities of five relationships: 3 marks       Correct cardinalities"
  },
  {
    "title": "CAPE Computer Science - Part 551",
    "content": "relationships: 3 marks       Correct cardinalities of 3-4 relationships: 2 marks   Correct cardinalities of 1-2 relationships: 1 mark      (12 marks)    Total 15 marks       02215020 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 2 – Paper 02  KEY AND MARK SCHEME      9  SECTION C     OPERATING SYSTEMS AND COMPUTER NETWORKS     Question 5      Specific Objectives: 3.2, 3.3      (a)  Batch  systems:  A  set  of  jobs  are  collected  and  run  in  batch  mode  one  after  the  other  without  manual  i"
  },
  {
    "title": "CAPE Computer Science - Part 552",
    "content": "mode  one  after  the  other  without  manual  intervention. (1)   Each  job  has  all  the  resources  of  the  computer  at  its  disposal  when  it is run (1)               Multiprogramming    systems:        Memory    is  partitioned into several pieces and a different  job is run in each partition. (1) This allowed  several   jobs   to   be   run   simultaneously,  achieving  greater  throughput  especially  with  1/0 bound jobs. (1)           Multi-user systems:  These systems enable man"
  },
  {
    "title": "CAPE Computer Science - Part 553",
    "content": "Multi-user systems:  These systems enable many  different  users  to  take  advantage  of  the  computer’s  resources  simultaneously. (1) By  isolating  users  from  each  other,  each  user  is  able to use the resources of the computer as if  they were completely dedicated to him/her. (1)            Any 2 x 2 = 4  [4 marks]       (b) (i)  Processor can become available (1) so game  process gets to be run/executed. (1)               (c)                          (ii)                    Gam"
  },
  {
    "title": "CAPE Computer Science - Part 554",
    "content": "(ii)                    Game may be waiting on a particular device  (1) which is in use. (1)    There is an i/o interrupt to access the disk  (1).  The process has a context switch (1) at  that time.  The file is read and then the CPU  is also interrupted (1) to continue the  previous process (1) OR  game is being played and it is in a running  state (1)game moves from running to waiting,  when the i/o interrupt occurs and  reads the  file (1)game moves from waiting to rea"
  },
  {
    "title": "CAPE Computer Science - Part 555",
    "content": "reads the  file (1)game moves from waiting to ready on  completion of reading the file. (1)  game waits on instruction to return to  running state.(1)      [4 marks]            [4 marks]                  [3 marks]  02215020 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 2 – Paper 02  KEY AND MARK SCHEME      10      (d)            Each process is given a certain amount of CPU  time (a time slice) (1), and if it is not  finished by the end of the time slice, the  process is moved to the back of the pr"
  },
  {
    "title": "CAPE Computer Science - Part 556",
    "content": "slice, the  process is moved to the back of the process  queue (1), and the next process in line is  moved to the CPU (1) OR  game is being played and it is in a running  state (1)  game moves from running to waiting, when the  i/o interrupt occurs and  reads the file (1)  game   moves   from   waiting   to   ready   on  completion  of  reading  the  file.  (1) game  waits  on  instruction  to  return  to  running  state. (1)          Total 15 marks"
  },
  {
    "title": "CAPE Computer Science - Part 557",
    "content": "rks                                                                    02215020 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 2 – Paper 02  KEY AND MARK SCHEME      11  Question 6       Specific Objectives: 3.4, 3.5      (a)  Network security concerns making sure that the network  is protected (1) from outside intrusion. (1)  [2 marks]                 Interconnectivity concerns connecting the network with  other  networks. (1) Issues  such  as  compatibility with  the other networks are important. (1"
  },
  {
    "title": "CAPE Computer Science - Part 558",
    "content": "ibility with  the other networks are important. (1)        [2 marks]        (b) Network: routing packets (1), congestion control (1)  Data link: error control (1), communication between 2 nodes (1)  Physical: bits->cable signals. (1) How much volts is a 0/1. (1)  Transport:  Breaks data into segments (1), error Control (1)  Session: controls the information for the sessions (1) and  the communication between applications (1)    Any two x 2 = [4 marks]                                            0"
  },
  {
    "title": "CAPE Computer Science - Part 559",
    "content": "arks]                                            02215020 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 2 – Paper 02  KEY AND MARK SCHEME      12  Question 6 cont’d      (c)     SELECT FirstName, LastName, Address    FROM Patient INNER JOIN PatientTesting ON Patient.PatientID =  PatientTesting.PatientID   WHERE PatientTesting.TestResult = Positive     1 mark for the SELECT clause and all correct fields  1 mark for the FROM clause and the correct table   1 mark for the INNER JOIN clause and the correc"
  },
  {
    "title": "CAPE Computer Science - Part 560",
    "content": "1 mark for the INNER JOIN clause and the correct table   2 marks: 1 mark for ON clause and 1 mark for correct condition  2 marks: 1 mark for the WHERE clause and 1 mark for the        correct condition     [7 marks]    Total 15 marks   ‘‘*’’Barcode Area”*” C A R I B B E A N    E X A M I N A T I O N S    C O U N C I L CARIBBEAN SECONDARY EDUCATION CERTIFICATE ® EXAMINATION     FILL IN ALL THE INFORMATION REQUESTED CLEARLY IN CAPITAL LETTERS. TEST CODE    SUBJECT       PROFICIENCY             R"
  },
  {
    "title": "CAPE Computer Science - Part 561",
    "content": "ST CODE    SUBJECT       PROFICIENCY             REGISTRATION NUMBER  SCHOOL/CENTRE NUMBER NAME OF SCHOOL/CENTRE CANDIDATE’S FULL NAME (FIRST, MIDDLE, LAST)  DATE OF BIRTH        DDMMYYYY  HOW MANY ADDITIONAL PAGES  HAVE YOU USED IN TOTAL? SIGNATURE  __________________________________________________ ‘‘*’’Barcode Area”*” Front Page Bar Code ‘‘*’’Barcode Area”*” Current Bar Code      0     2     2     1     5     0     3     2 COMPUTER SCIENCE – SPEC ADVANCED SPECIMEN PAPER ‘‘*’’Barcode Area”*” S"
  },
  {
    "title": "CAPE Computer Science - Part 562",
    "content": "PEC ADVANCED SPECIMEN PAPER ‘‘*’’Barcode Area”*” Sequential Bar Code TEST CODE 02215032/SPEC SPEC 2021/02215032   C A R I B B E A N      E X A M I N A T I O N S      C O U N C I L CARIBBEAN ADVANCED PROFICIENCY EXAMINATION ® COMPUTER SCIENCE SPECIMEN PAPER UNIT 2 – Paper 032 2 hours READ THE FOLLOWING INSTRUCTIONS CAREFULLY. 1. This paper consists of EIGHT questions. 2. Answer ALL questions. 3. Write your answers in the spaces provided in this booklet. 4. DO NOT write in the margins. 5. If you n"
  },
  {
    "title": "CAPE Computer Science - Part 563",
    "content": "oklet. 4. DO NOT write in the margins. 5. If you need to rewrite any answer and there is not enough space to do so on the  original page, two extra pages are provided at the back of this booklet.  Remember  to draw a line through your original answer and correctly number your new  answer in the box provided. 6.  If you use extra pages you MUST write your registration number and question  number clearly in the boxes provided at the top of EVERY extra page. DO  NOT  TURN  THIS  PAGE  UNTIL  YOU  A"
  },
  {
    "title": "CAPE Computer Science - Part 564",
    "content": "tra page. DO  NOT  TURN  THIS  PAGE  UNTIL  YOU  ARE  TOLD  TO  DO  SO.  Copyright © 2020 Caribbean Examinations Council  All rights reserved. 02215032/CAPE 2021/SPEC - 3 - GO ON TO THE NEXT PAGE 02215032/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE     IN    THIS    AREA                          DO    NOT    WRITE     IN    THIS    AREA          Answer ALL questions. CASE STUDY  A local community col"
  },
  {
    "title": "CAPE Computer Science - Part 565",
    "content": "r ALL questions. CASE STUDY  A local community college wishes to automate the course management system to allow students to register  and pay for courses as part of their degree programme. A pre-registration process allows students to register  without any payment but still provides them with information concerning the payment needed.  Actual  registration requires that payment be made at the time of registration.  At early registration, students must enter a course identification number for the"
  },
  {
    "title": "CAPE Computer Science - Part 566",
    "content": "must enter a course identification number for the course they wish to enter,  from a menu. The menu shows ALL the courses in the program along with the course identification  number, the registration limit and availability.  Students will register and be given payment information  and the deadline for payment. They must make payments before the end of the actual registration period. A  student registering during the registration period is expected to pay the tuition at the point of registration"
  },
  {
    "title": "CAPE Computer Science - Part 567",
    "content": "ed to pay the tuition at the point of registration.  The system is to inform students of the estimated tuition cost for all registered courses and the mandatory  ancillary fee of $5 500. The tuition cost per course is $10 500. The system should allow students to view the list of available courses in a particular programme, register  for a maximum of three courses, given that the course limit has not been reached, and drop courses. A  message is to be sent to students regarding their approval sta"
  },
  {
    "title": "CAPE Computer Science - Part 568",
    "content": "o be sent to students regarding their approval status for the course. Information on the tuition  fees is updated by the billing department so that invoices can be generated. A lecturer for a particular  course is also able to view the list of registered students. If a student adds or drops a course before the  registration deadline has passed, the estimated tuition cost for the student should be updated.   Specification of Requirements     1. State THREE likely problems in the manual course reg"
  },
  {
    "title": "CAPE Computer Science - Part 569",
    "content": "ate THREE likely problems in the manual course registration processes that led to the proposal of    new system requirements.             .........................................................................................................................................................             .........................................................................................................................................................             .............................."
  },
  {
    "title": "CAPE Computer Science - Part 570",
    "content": ".......             .........................................................................................................................................................             .........................................................................................................................................................             ...................................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 571",
    "content": "....................................................... [3 marks] - 4 - GO ON TO THE NEXT PAGE 02215032/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO     NOT    WRITE    IN    THIS    AREA                          DO     NOT    WRITE    IN    THIS    AREA          2. (a)   List THREE functional requirements of the case study.                         ....................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 572",
    "content": "...........................................................................................................................                                                  ..............................................................................................................................................                         .............................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 573",
    "content": "................................                                                  ..............................................................................................................................................                                                  .............................................................................................................................................. [3 marks]  (b) State ONE non-functional requirement of the case study."
  },
  {
    "title": "CAPE Computer Science - Part 574",
    "content": "tional requirement of the case study.                         ..............................................................................................................................................                         .............................................................................................................................................. [1 mark] 3.  State  THREE  techniques  that  the  system  analyst’s  team  would  have  used  to  determine  the  require- ments"
  },
  {
    "title": "CAPE Computer Science - Part 575",
    "content": "ld  have  used  to  determine  the  require- ments for the course management system.             .........................................................................................................................................................             .........................................................................................................................................................             ......................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 576",
    "content": "....................................................................................................................................             .........................................................................................................................................................             ......................................................................................................................................................... [3 marks] - 5 - GO ON TO THE NEXT P"
  },
  {
    "title": "CAPE Computer Science - Part 577",
    "content": ".............. [3 marks] - 5 - GO ON TO THE NEXT PAGE 02215032/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE     IN    THIS    AREA                          DO    NOT    WRITE     IN    THIS    AREA          4. Students can register for several courses at the community college.  Lecturers are assigned to one or  more courses and any student can enroll in a course.    Draw an entity–relationship (ER) di"
  },
  {
    "title": "CAPE Computer Science - Part 578",
    "content": "n a course.    Draw an entity–relationship (ER) diagram.  On your diagram, show all relationships, primary keys  and cardinalities based on the statement above.  [15 marks] - 6 - GO ON TO THE NEXT PAGE 02215032/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE     IN    THIS    AREA                          DO    NOT    WRITE     IN    THIS    AREA          Design Specifications  5. Identify  the  MOST  ap"
  },
  {
    "title": "CAPE Computer Science - Part 579",
    "content": "Design Specifications  5. Identify  the  MOST  appropriate  interface  design  for  the  system  in  the  case  study.    Justify  your                               response.             .........................................................................................................................................................             ................................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 580",
    "content": "..........................................................               ......................................................................................................................................................... [2 marks] - 7 - GO ON TO THE NEXT PAGE 02215032/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO     NOT    WRITE    IN    THIS    AREA                          DO     NOT    WRITE    IN    THIS"
  },
  {
    "title": "CAPE Computer Science - Part 581",
    "content": "DO     NOT    WRITE    IN    THIS    AREA          6.  Assuming that the registration data concerning a student is placed in a queue called EarlyRP, write a  pseudocode that will identify ALL students who have registered early for their courses and have paid  in full, and place these individuals in a queue called EarlyPaid. The students who have not paid or who  have not paid in full, should be placed in a queue called EarlyToBeProcessed. The data which is to be  placed in the queu"
  },
  {
    "title": "CAPE Computer Science - Part 582",
    "content": "essed. The data which is to be  placed in the queue EarlyRP is as follows:   - Student Identification Number  - Total Fee  -  Amount Paid  - Balance Owing  .........................................................................................................................................................             .........................................................................................................................................................               .........."
  },
  {
    "title": "CAPE Computer Science - Part 583",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 584",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 585",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 586",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 587",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 588",
    "content": ".............................................................................................................             .........................................................................................................................................................               ......................................................................................................................................................... [15 marks] - 8 - GO ON TO THE NEXT PAGE 02215032/CAPE 20"
  },
  {
    "title": "CAPE Computer Science - Part 589",
    "content": "rks] - 8 - GO ON TO THE NEXT PAGE 02215032/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE     IN    THIS    AREA                          DO    NOT    WRITE     IN    THIS    AREA          Coding and Testing       7. (a) Write a structure named oQueue which represents a queue. oQueue contains an array of 200  elements of type oStructure which stores the information below as well as an index to the head"
  },
  {
    "title": "CAPE Computer Science - Part 590",
    "content": "information below as well as an index to the head  and the tail.    typedef struct studentpayment{                    int StudentID;                                      float TotalFee;                                      float AmountPaid;                              float BalanceOwing;                           char RegistrationType                                              }            oStructure;                         ...................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 591",
    "content": "............................................................................................................................                                                  ..............................................................................................................................................                         .............................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 592",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 593",
    "content": "...................................................................................................................................... [6 marks]  (b) Write an ENQUEUE function that will receive oQueue and oStructure as parameters as stated  in Part (a) above.                         .............................................................................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 594",
    "content": "..............................................................................................................................................                         ..............................................................................................................................................                                                  ..............................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 595",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 596",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 597",
    "content": ".........................................................................                                                  ..............................................................................................................................................                         [8 marks] - 9 - 02215032/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA"
  },
  {
    "title": "CAPE Computer Science - Part 598",
    "content": "WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA          8. Using information stored for the payment (EarlyRP) in Question 6, complete the table below for each  data type by giving an example of a variable and appropriate test data.  Data TypeVariable NamesAppropriate Test Data Text Real [4 marks] Total 60 marks  END OF TEST IF YOU FINISH BEFORE TIME IS CALLED, CHECK YOUR WORK ON THIS TEST. - 10 - 02215032/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequenti"
  },
  {
    "title": "CAPE Computer Science - Part 599",
    "content": "15032/CAPE 2021/SPEC ‘‘*’’Barcode Area”*” Sequential Bar Code DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA                          DO    NOT    WRITE    IN    THIS    AREA          - 10 - ‘‘*’’Barcode Area”*” Sequential Bar Code EXTRA SPACE If you use this extra page, you MUST write the question number clearly in the box provided. Question No.   ........................................................................................."
  },
  {
    "title": "CAPE Computer Science - Part 600",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 601",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 602",
    "content": "............................................................................................ ...........................................................................................................................................................................  ........................................................................................................................................................................... .............................................................."
  },
  {
    "title": "CAPE Computer Science - Part 603",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 604",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 605",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 606",
    "content
  },
  {
    "title": "CAPE Computer Science - Part 607",
    "content": "................................................................................ ........................................................................................................................................................................... ........................................................................................................................................................................... DO  NOT WRITE  ON THIS  PAGE CANDIDATE’S   RECEIPT INSTRUCTIONS TO CANDIDAT"
  },
  {
    "title": "CAPE Computer Science - Part 608",
    "content": "AGE CANDIDATE’S   RECEIPT INSTRUCTIONS TO CANDIDATE: 1. Fill in all the information requested clearly in capital letters.  TEST CODE:      SUBJECT:                 PROFICIENCY:                 REGISTRATION NUMBER:     FULL NAME:  ________________________________________________________________  (BLOCK LETTERS)  Signature:  ____________________________________________________________________  Date:  ________________________________________________________________________ 2. Ensure that this slip"
  },
  {
    "title": "CAPE Computer Science - Part 609",
    "content": "________________________ 2. Ensure that this slip is detached by the Supervisor or Invigilator and given to you when you  hand in this booklet. 3. Keep it in a safe place until you have received your results. INSTRUCTION TO SUPERVISOR/INVIGILATOR: Sign the declaration below, detach this slip and hand it to the candidate as his/her receipt for this booklet  collected by you. I hereby acknowledge receipt of the candidate’s booklet for the examination stated above.  Signature:  ____________________"
  },
  {
    "title": "CAPE Computer Science - Part 610",
    "content": "on stated above.  Signature:  _____________________________                  Supervisor/Invigilator  Date:  _________________________________      0     2     2     1     5     0     3     2 INFORMATION TECHNOLOGY – SPEC ADVANCED   02215032/KMS/CAPE SPEC/2021       CARIBBEAN EXAMINATIONS COUNCIL        ADVANCED PROFICIENCY EXAMINATION        COMPUTER SCIENCE        UNIT 2 - PAPER 032    KEYS AND MARK SCHEME    SPECIMEN PAPER 2021               2    02215032 KMS/SPEC/2021     COMPUTER SCIENCE  UN"
  },
  {
    "title": "CAPE Computer Science - Part 611",
    "content": "02215032 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 2 – Paper 032  KEY AND MARK SCHEME    CASE STUDY  A local community college wishes to automate the course management  system to allow students to register and pay for courses as part of  their degree programme. A pre-registration process allows students  to  register  without  any  payment  but still  provides  them  with  information  concerning  the  payment  needed.    Actual  registration  requires that payment be made at the time of regis"
  },
  {
    "title": "CAPE Computer Science - Part 612",
    "content": "requires that payment be made at the time of registration.     At early registration, students must enter a course identification  number for the course they wish to enter, from a menu. The menu shows  ALL the courses in the program along with the course identification  number,  the  registration  limit  and  availability.    Students  will  register  and  be given  payment  information  and  the  deadline  for  payment.  They  must  make  payments  before  the  end  of  the  actual  registratio"
  },
  {
    "title": "CAPE Computer Science - Part 613",
    "content": "ts  before  the  end  of  the  actual  registration period. A student registering during the registration  period is expected to pay the tuition at the point of registration.  The system is to inform students of the estimated tuition cost for  all registered courses and the mandatory ancillary fee of $5 500.  The tuition cost per course is $10 500.    The system should allow students to view the list of available courses  in a particular programme, register for a maximum of three courses,  given"
  },
  {
    "title": "CAPE Computer Science - Part 614",
    "content": "e, register for a maximum of three courses,  given that the course limit has not been reached, and drop courses.  A message is to be sent to students regarding their approval status  for the course. Information on the tuition fees is updated by the  billing department so that invoices can be generated. A lecturer for  a  particular  course  is  also  able  to  view  the  list  of  registered  students. If a student adds or drops a course before the registration  deadline has passed, the estimate"
  },
  {
    "title": "CAPE Computer Science - Part 615",
    "content": "he registration  deadline has passed, the estimated tuition cost for the student should  be updated.          3    02215032 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 2 – Paper 032  KEY AND MARK SCHEME    Specification of Requirements [25 marks]    1. State  THREE likely problems in  the  manual  course  registration  processes that led to the proposal of new system requirements.   ● The availability of spaces may not have been updated in real-time  leading to more persons registering for a course"
  },
  {
    "title": "CAPE Computer Science - Part 616",
    "content": "leading to more persons registering for a course than the maximum  number of spaces  ● A student may have been allowed to register beyond the  registration deadline leading to confusion  ● There may have been instances where a student was allowed to drop  a course after the registration deadline  ● Tuition costs may have been miscalculated if courses were dropped  after the registration deadline  ● Incorrect billing information could have been sent to the Billing  department based on incorrect"
  },
  {
    "title": "CAPE Computer Science - Part 617",
    "content": "sent to the Billing  department based on incorrect tuition calculation  ● Students may not have been informed of their approval status in a  timely manner  ● Lecturers may not have been able to view approved list of  students  (Any other appropriate response 3 X 1)  [3 marks]    2. (a) List THREE functional requirements of the Case Study.    ● Allow students to register for up to three courses  ● Allow the Registrar to add courses to the course  catalogue  ● Allow the Registrar to drop courses f"
  },
  {
    "title": "CAPE Computer Science - Part 618",
    "content": "catalogue  ● Allow the Registrar to drop courses from the course  catalogue  ● Allow students to view a list of available courses  ● Allow students to drop a course  ● System should check availability of spaces for  registration of a course  ● System should inform students of estimated tuition costs  after registration  ● Allow the Registrar to approve students for courses  ● System should send a message to students regarding  approval for undertaking courses  ● System should send information to"
  },
  {
    "title": "CAPE Computer Science - Part 619",
    "content": "aking courses  ● System should send information to the Billing department  for the generation of invoices  4    02215032 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 2 – Paper 032  KEY AND MARK SCHEME    ● Allow lecturers to view list of students approved to  undertake courses  ● Backup/recovery system/availability of system  (Any 3 X 1)  [3 marks]  (b) State ONE non-functional requirement of the Case Study   ● system will be user-friendly, will not allow students to  change information for another"
  },
  {
    "title": "CAPE Computer Science - Part 620",
    "content": "allow students to  change information for another student  ● provide real-time updates   [1 mark]    3. State THREE techniques that the system analyst’s team would have  used to determine the requirements for the course management system.  ● Review of existing documentation - reports, forms or descriptions  of procedures - to gather information about the current state of  the system  ● Interviews with relevant users of the manual system - to gather  information about the current state of the sys"
  },
  {
    "title": "CAPE Computer Science - Part 621",
    "content": "er  information about the current state of the system and to gather  opinions about the new system  ● Observation and documentation of business processes - to gather  information about the current state of the system  ● Questionnaires - to gather information about the current state of  the system and to gather opinions about the new system  ● Reviewing other course management systems.  (Any 3 X 1)  [3 marks]              5    02215032 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 2 – Paper 032  KEY A"
  },
  {
    "title": "CAPE Computer Science - Part 622",
    "content": "21     COMPUTER SCIENCE  UNIT 2 – Paper 032  KEY AND MARK SCHEME    4. Students can register for several courses at the community college.  Lecturers are assigned to one or more courses and any student can  enroll in a course.    Draw an entity-relationship (ER) diagram. On your diagram, show all  relationships, primary keys and cardinalities based on the statement  above.   3 entities (Student, Course, Lecturer)     - 3 marks   2 Relationships (Registers, Lecturers)     - 2 marks  4 Cardinaliti"
  },
  {
    "title": "CAPE Computer Science - Part 623",
    "content": "Registers, Lecturers)     - 2 marks  4 Cardinalities                                - 4 marks  3 Primary keys         - 3 marks   Correct use of symbols (entities, relationships, attributes)- 3 marks     [15 marks]  6    02215032 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 2 – Paper 032  KEY AND MARK SCHEME    Design Specifications (17 marks)    5. Identify the MOST appropriate interface design for the system in the  Case study. Justify your response.     Graphic User Interface.   o User-friendly"
  },
  {
    "title": "CAPE Computer Science - Part 624",
    "content": "e.     Graphic User Interface.   o User-friendly  o Short learning curve to use the system   o Uses menu/W.I.M.P.    [2 marks]    6. Assuming that the registration data concerning a student is placed in  a queue called EarlyRP, write a  pseudocode  that  will identify  ALL  students who have registered early for their courses and have paid in  full  and place  these individuals in a queue called EarlyPaid. The  students who have not paid or not paid in full should be placed in  the queue called"
  },
  {
    "title": "CAPE Computer Science - Part 625",
    "content": "aid in full should be placed in  the queue called EarlyToBeProcessed. The data which is to be placed  in the queue EarlyRP is as follows:      Student Identification Number   Total Fee   Amount Paid   Balance Owing    BEGIN    WHILE EarlyRP is not empty DO                       TempStruct = dequeue ( EarlyRP )     IF TempStruct. Balance Owing = 0 or Amount Paid = Total Fee THEN      IF EarlyPaid is not full THEN  Enqueue (EarlyPaid, TempStruct)    ELSE     PRINT “This queue is full”  7    02"
  },
  {
    "title": "CAPE Computer Science - Part 626",
    "content": "t)    ELSE     PRINT “This queue is full”  7    02215032 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 2 – Paper 032  KEY AND MARK SCHEME      ENDIF   ELSE   IF EarlyToBeProcessed is not full THEN  Enqueue ( EarlyToBeProcessed, TempStruct)     ELSE      PRINT “This queue is full”     ENDIF   ENDIF  ENDWHILE  END    The BEGIN and END  - 1 mark  WHILE loop   - 2 marks (WHILE -1 and ENDWHILE -1)  1 st  ENQUEUE   - 2 marks (name and two arguments)  2 nd  ENQUEUE   - 2 marks (name and two arguments)  DEQU"
  },
  {
    "title": "CAPE Computer Science - Part 627",
    "content": "ENQUEUE   - 2 marks (name and two arguments)  DEQUEUE    - 2 marks (name and one argument)    IF STATEMENT (checking for the early payment)- 2 marks (IF -2 and ELSE  - 1)  IF STATEMENT (checking for the queue is full - 2 marks (IF -2 and ELSE  - 1)  PRINT STATEMENTS    2 marks (two print statements - 1 mark each)    [15 marks]                    8    02215032 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 2 – Paper 032  KEY AND MARK SCHEME    Coding and Testing (18 marks)    7. (a) Write a queue named"
  },
  {
    "title": "CAPE Computer Science - Part 628",
    "content": "d Testing (18 marks)    7. (a) Write a queue named oQueue which is a structure that      contains an array that stores the information of the      structure given below as well as an index to the head and the   tail.      typedef struct studentpayment{                     int StudentID;                                       float TotalFee;                                       float AmountPaid;                               float BalanceOwing;                            char RegistrationType"
  },
  {
    "title": "CAPE Computer Science - Part 629",
    "content": "char RegistrationType                         } oStructure;           Example  // STRUCTURE OF QUEUE  typedef struct QUEUE{         // 1 mark                 int head;         // 1 mark                             int tail;         //  1 mark                             oStructure queue [200]; // 1 mark correct data   type, 1 mark array                                   } oQueue;           // 1 mark                                             [6 marks]    9    02215032 K"
  },
  {
    "title": "CAPE Computer Science - Part 630",
    "content": "[6 marks]    9    02215032 KMS/SPEC/2021     COMPUTER SCIENCE  UNIT 2 – Paper 032  KEY AND MARK SCHEME    (b) Write  an  ENQUEUE  function  for  oQueue and  oStructure  as  parameters stated in Part (a) above.  int ENQUEUE ( oQueue EP, oStructure TS){          // 3 marks   if ( isFull ( EP ) ){                       // 2 marks      printf (“The Queue is Full and there will be no more   additions”); // 1 mark     return 0;              }  EP.tail = EP.tail + 1;     // 1 mark"
  },
  {
    "title": "CAPE Computer Science - Part 631",
    "content": "}  EP.tail = EP.tail + 1;     // 1 mark  EP.queue [ EP.tail].  return 1;         // 1 mark  }  [8 marks]  8. Using information stored for the payment (EarlyRP) in Question 6,  complete the table below for each data type by giving an example of  a variable and appropriate test data.        Data Type  Variable Names   Appropriate  Test Data   Text  Student ID 12456   Real  Balance owing, amount  paid, total fee   2500    [4 marks]    Total 60 marks                     Caribbean Examinat"
  },
  {
    "title": "CAPE Computer Science - Part 632",
    "content": "al 60 marks                     Caribbean Examinations Council  Prince Road, Pine Plantation Road,  St Michael BB11091  Tel: (246) 227 1700  Email: cxcezo@cxc.org"
  }
]